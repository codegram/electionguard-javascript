!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).voter={})}(this,function(exports){"use strict";var __module_re__=Object.freeze({__proto__:null,get translate(){return translate},get T(){return T},get TEMPLATE(){return TEMPLATE},get I(){return I},get IGNORECASE(){return IGNORECASE},get L(){return L},get LOCALE(){return LOCALE},get M(){return M},get MULTILINE(){return MULTILINE},get S(){return S},get DOTALL(){return DOTALL},get U(){return U},get UNICODE(){return UNICODE},get X(){return X},get VERBOSE(){return VERBOSE$1},get DEBUG(){return DEBUG},get A(){return A},get ASCII(){return ASCII},get Y(){return Y},get STICKY(){return STICKY},get G(){return G},get GLOBAL(){return GLOBAL},get J(){return J},get JSSTRICT(){return JSSTRICT},get error(){return error},get ReIndexError(){return ReIndexError},get Match(){return Match},get Regex(){return Regex},get PyRegExp(){return PyRegExp},get compile(){return compile},get search(){return search},get match(){return match},get fullmatch(){return fullmatch},get py_split(){return py_split},get findall(){return findall},get finditer(){return finditer},get sub(){return sub},get subn(){return subn},get escape(){return escape},get purge(){return purge}}),__name__="org.transcrypt.__runtime__";function __nest__(e,t,r){var _=e;if(""!=t){for(var n=t.split("."),a=n.length,i=0;i<n.length;i++){if(!_.hasOwnProperty(n[i])){a=i;break}_=_[n[i]]}for(i=a;i<n.length;i++)_[n[i]]={},_=_[n[i]]}for(let e of Object.getOwnPropertyNames(r))Object.defineProperty(_,e,{get:()=>r[e],enumerable:!0,configurable:!0})}function __get__(e,t,r){return e&&(e.hasOwnProperty("__class__")||"string"==typeof e||e instanceof String)?(r&&Object.defineProperty(e,r,{value:function(){var r=[].slice.apply(arguments);return t.apply(null,[e].concat(r))},writable:!0,enumerable:!0,configurable:!0}),function(){var r=[].slice.apply(arguments);return t.apply(null,[e].concat(r))}):t}function __getcm__(e,t,r){return e.hasOwnProperty("__class__")?function(){var r=[].slice.apply(arguments);return t.apply(null,[e.__class__].concat(r))}:function(){var r=[].slice.apply(arguments);return t.apply(null,[e].concat(r))}}var py_metatype={__name__:"type",__bases__:[],__new__:function(e,t,r,_){for(var n=function(){var e=[].slice.apply(arguments);return n.__new__(e)},a=r.length-1;a>=0;a--){var i=r[a];for(var o in i){var s=Object.getOwnPropertyDescriptor(i,o);Object.defineProperty(n,o,s)}for(let e of Object.getOwnPropertySymbols(i)){let t=Object.getOwnPropertyDescriptor(i,e);Object.defineProperty(n,e,t)}}for(var o in n.__metaclass__=e,n.__name__=t.startsWith("py_")?t.slice(3):t,n.__bases__=r,_){s=Object.getOwnPropertyDescriptor(_,o);Object.defineProperty(n,o,s)}for(let e of Object.getOwnPropertySymbols(_)){let t=Object.getOwnPropertyDescriptor(_,e);Object.defineProperty(n,e,t)}return n}};py_metatype.__metaclass__=py_metatype;var object={__init__:function(e){},__metaclass__:py_metatype,__name__:"object",__bases__:[],__new__:function(e){var t=Object.create(this,{__class__:{value:this,enumerable:!0}});return("__getattr__"in this||"__setattr__"in this)&&(t=new Proxy(t,{get:function(e,t){let r=e[t];return void 0==r?e.__getattr__(t):r},set:function(e,t,r){try{e.__setattr__(t,r)}catch(_){e[t]=r}return!0}})),this.__init__.apply(null,[t].concat(e)),t}};function __class__(e,t,r,_){return void 0===_&&(_=t[0].__metaclass__),_.__new__(_,e,t,r)}function __call__(){var e=[].slice.apply(arguments);return"object"==typeof e[0]&&"__call__"in e[0]?e[0].__call__.apply(e[1],e.slice(2)):e[0].apply(e[1],e.slice(2))}function __kwargtrans__(e){return e.__kwargtrans__=null,e.constructor=Object,e}function __super__(e,t){for(let r of e.__bases__)if(t in r)return r[t];throw new Exception("Superclass method not found")}function property(e,t){return t||(t=function(){}),{get:function(){return e(this)},set:function(e){t(this,e)},enumerable:!0}}function __setproperty__(e,t,r){e.hasOwnProperty(t)||Object.defineProperty(e,t,r)}function __mergefields__(e,t){let r=["__reprfields__","__comparefields__","__initfields__"];if(t[r[0]])if(e[r[0]])for(let _ of r)e[_]=new Set([...e[_],...t[_]]);else for(let _ of r)e[_]=new Set(t[_])}function getattr(e,t){return t in e?e[t]:e["py_"+t]}function hasattr(e,t){try{return t in e||"py_"+t in e}catch(e){return!1}}function __in__(e,t){return void 0!==t&&null!==t&&(t.__contains__ instanceof Function?t.__contains__(e):t.indexOf?t.indexOf(e)>-1:t.hasOwnProperty(e))}function __specialattrib__(e){return e.startswith("__")&&e.endswith("__")||"constructor"==e||e.startswith("py_")}function len(e){if(void 0===e||null===e)return 0;if(e.__len__ instanceof Function)return e.__len__();if(void 0!==e.length)return e.length;var t=0;for(var r in e)__specialattrib__(r)||t++;return t}function __t__(e){return void 0!==e&&null!==e&&(["boolean","number"].indexOf(typeof e)>=0?e:e.__bool__ instanceof Function?!!e.__bool__()&&e:e.__len__ instanceof Function?0!==e.__len__()&&e:e instanceof Function?e:0!==len(e)&&e)}function float(e){if("inf"==e)return 1/0;if("-inf"==e)return-1/0;if("nan"==e)return NaN;if(isNaN(parseFloat(e))){if(!1===e)return 0;if(!0===e)return 1;throw ValueError("could not convert string to float: '"+str(e)+"'",new Error)}return+e}function int(e){return 0|float(e)}function bool(e){return!!__t__(e)}function py_typeof(e){var t=typeof e;if("object"!=t)return"boolean"==t?bool:"string"==t?str:"number"==t?e%1==0?int:float:null;try{return"__class__"in e?e.__class__:object}catch(e){return t}}function issubclass(e,t){if(t instanceof Array){for(let r of t)if(issubclass(e,r))return!0;return!1}try{var r=e;if(r==t)return!0;for(var _=[].slice.call(r.__bases__);_.length;){if((r=_.shift())==t)return!0;r.__bases__.length&&(_=[].slice.call(r.__bases__).concat(_))}return!1}catch(r){return e==t||t==object}}function isinstance(e,t){try{return issubclass("__class__"in e?e.__class__:py_typeof(e),t)}catch(r){return issubclass(py_typeof(e),t)}}function callable(e){return!!(e&&"object"==typeof e&&"__call__"in e)||"function"==typeof e}function repr(e){try{return e.__repr__()}catch(a){try{return e.__str__()}catch(a){try{if(null==e)return"None";if(e.constructor==Object){var t="{",r=!1;for(var _ in e)if(!__specialattrib__(_)){if(_.isnumeric())var n=_;else n="'"+_+"'";r?t+=", ":r=!0,t+=n+": "+repr(e[_])}return t+="}"}return"boolean"==typeof e?e.toString().capitalize():e.toString()}catch(t){return"<object of type: "+typeof e+">"}}}}function max(e){return 1==arguments.length?Math.max(...e):Math.max(...arguments)}function min(e){return 1==arguments.length?Math.min(...e):Math.min(...arguments)}float.__name__="float",float.__bases__=[object],int.__name__="int",int.__bases__=[object],bool.__name__="bool",bool.__bases__=[int];var abs=Math.abs;function round(e,t){if(t){var r=Math.pow(10,t);e*=r}var _=Math.round(e);return _-e==.5&&_%2&&(_-=1),t&&(_/=r),_}function __jsUsePyNext__(){try{return{value:this.__next__(),done:!1}}catch(e){return{value:void 0,done:!0}}}function __pyUseJsNext__(){var e=this.next();if(e.done)throw StopIteration(new Error);return e.value}function py_iter(e){if("string"==typeof e||"__iter__"in e)(t=e.__iter__()).next=__jsUsePyNext__;else if("selector"in e){(t=list(e).__iter__()).next=__jsUsePyNext__}else if("next"in e){"__next__"in(t=e)||(t.__next__=__pyUseJsNext__)}else{if(!(Symbol.iterator in e))throw IterableError(new Error);var t;(t=e[Symbol.iterator]()).__next__=__pyUseJsNext__}return t[Symbol.iterator]=function(){return t},t}function __PyIterator__(e){this.iterable=e,this.index=0}function __JsIterator__(e){this.iterable=e,this.index=0}function py_reversed(e){return(e=e.slice()).reverse(),e}function zip(){for(var e=[].slice.call(arguments),t=0;t<e.length;t++)"string"==typeof e[t]?e[t]=e[t].split(""):Array.isArray(e[t])||(e[t]=Array.from(e[t]));return(0==e.length?[]:e.reduce(function(e,t){return e.length<t.length?e:t})).map(function(t,r){return e.map(function(e){return e[r]})})}function range(e,t,r){if(void 0==t&&(t=e,e=0),void 0==r&&(r=1),r>0&&e>=t||r<0&&e<=t)return[];for(var _=[],n=e;r>0?n<t:n>t;n+=r)_.push(n);return _}function any(e){for(let t of e)if(bool(t))return!0;return!1}function enumerate(e){return zip(range(len(e)),e)}function copy(e){if(null==e||"object"==typeof e)return e;var t={};for(var r in obj)e.hasOwnProperty(r)&&(t[r]=e[r]);return t}function list(e){return e?Array.from(e):[]}function tuple(e){let t=e?[].slice.apply(e):[];return t.__class__=tuple,t}function set(e){let t=[];if(e)for(let r=0;r<e.length;r++)t.add(e[r]);return t.__class__=set,t}function str(e){if("number"==typeof e)return e.toString();try{return e.__str__()}catch(t){try{return repr(e)}catch(t){return String(e)}}}function __contains__(e){return this.hasOwnProperty(e)}function __keys__(){var e=[];for(var t in this)__specialattrib__(t)||e.push(t);return e}function __items__(){var e=[];for(var t in this)__specialattrib__(t)||e.push([t,this[t]]);return e}function __del__(e){delete this[e]}function __clear__(){for(var e in this)delete this[e]}function __getdefault__(e,t){var r=this[e];return void 0==r&&(r=this["py_"+e]),void 0==r?void 0==t?null:t:r}function __setdefault__(e,t){var r=this[e];if(void 0!=r)return r;var _=void 0==t?null:t;return this[e]=_,_}function __pop__(e,t){var r=this[e];if(void 0!=r)return delete this[e],r;if(void 0===t)throw KeyError(e,new Error);return t}function __popitem__(){var e=Object.keys(this)[0];if(null==e)throw KeyError("popitem(): dictionary is empty",new Error);var t=tuple([e,this[e]]);return delete this[e],t}function __update__(e){for(var t in e)this[t]=e[t]}function __values__(){var e=[];for(var t in this)__specialattrib__(t)||e.push(this[t]);return e}function __dgetitem__(e){return this[e]}function __dsetitem__(e,t){this[e]=t}function dict(e){var t={};if(!e||e instanceof Array){if(e)for(var r=0;r<e.length;r++){var _=e[r];if(!(_ instanceof Array)||2!=_.length)throw ValueError("dict update sequence element #"+r+" has length "+_.length+"; 2 is required",new Error);var n=_[0],a=_[1];!(e instanceof Array)&&e instanceof Object&&(isinstance(e,dict)||(a=dict(a))),t[n]=a}}else if(isinstance(e,dict)){var i=e.py_keys();for(r=0;r<i.length;r++){t[n=i[r]]=e[n]}}else{if(!(e instanceof Object))throw ValueError("Invalid type of object for dict creation",new Error);t=e}return __setproperty__(t,"__class__",{value:dict,enumerable:!1,writable:!0}),__setproperty__(t,"__contains__",{value:__contains__,enumerable:!1}),__setproperty__(t,"py_keys",{value:__keys__,enumerable:!1}),__setproperty__(t,"__iter__",{value:function(){new __PyIterator__(this.py_keys())},enumerable:!1}),__setproperty__(t,Symbol.iterator,{value:function(){new __JsIterator__(this.py_keys())},enumerable:!1}),__setproperty__(t,"py_items",{value:__items__,enumerable:!1}),__setproperty__(t,"py_del",{value:__del__,enumerable:!1}),__setproperty__(t,"py_clear",{value:__clear__,enumerable:!1}),__setproperty__(t,"py_get",{value:__getdefault__,enumerable:!1}),__setproperty__(t,"py_setdefault",{value:__setdefault__,enumerable:!1}),__setproperty__(t,"py_pop",{value:__pop__,enumerable:!1}),__setproperty__(t,"py_popitem",{value:__popitem__,enumerable:!1}),__setproperty__(t,"py_update",{value:__update__,enumerable:!1}),__setproperty__(t,"py_values",{value:__values__,enumerable:!1}),__setproperty__(t,"__getitem__",{value:__dgetitem__,enumerable:!1}),__setproperty__(t,"__setitem__",{value:__dsetitem__,enumerable:!1}),t}function __setdoc__(e){return this.__doc__=e,this}function __mod__(e,t){return"object"==typeof e&&"__mod__"in e?e.__mod__(t):"object"==typeof t&&"__rmod__"in t?t.__rmod__(e):(e%t+t)%t}function __neg__(e){return"object"==typeof e&&"__neg__"in e?e.__neg__():-e}function __mul__(e,t){return"object"==typeof e&&"__mul__"in e?e.__mul__(t):"object"==typeof t&&"__rmul__"in t?t.__rmul__(e):"string"==typeof e?e.__mul__(t):"string"==typeof t?t.__rmul__(e):e*t}function __floordiv__(e,t){return"object"==typeof e&&"__floordiv__"in e?e.__floordiv__(t):"object"==typeof t&&"__rfloordiv__"in t?t.__rfloordiv__(e):"object"==typeof e&&"__div__"in e?e.__div__(t):"object"==typeof t&&"__rdiv__"in t?t.__rdiv__(e):Math.floor(e/t)}function __add__(e,t){return"object"==typeof e&&"__add__"in e?e.__add__(t):"object"==typeof t&&"__radd__"in t?t.__radd__(e):e+t}function __sub__(e,t){return"object"==typeof e&&"__sub__"in e?e.__sub__(t):"object"==typeof t&&"__rsub__"in t?t.__rsub__(e):e-t}function __eq__(e,t){return"object"==typeof e&&"__eq__"in e?e.__eq__(t):e==t}function __lt__(e,t){return"object"==typeof e&&"__lt__"in e?e.__lt__(t):e<t}function __le__(e,t){return"object"==typeof e&&"__le__"in e?e.__le__(t):e<=t}function __gt__(e,t){return"object"==typeof e&&"__gt__"in e?e.__gt__(t):e>t}function __iadd__(e,t){return"object"==typeof e&&"__iadd__"in e?e.__iadd__(t):"object"==typeof e&&"__add__"in e?e.__add__(t):"object"==typeof t&&"__radd__"in t?t.__radd__(e):e+t}function __isub__(e,t){return"object"==typeof e&&"__isub__"in e?e.__isub__(t):"object"==typeof e&&"__sub__"in e?e.__sub__(t):"object"==typeof t&&"__rsub__"in t?t.__rsub__(e):e-t}function __getitem__(e,t){return"object"==typeof e&&"__getitem__"in e?e.__getitem__(t):("string"==typeof e||e instanceof Array)&&t<0?e[e.length+t]:e[t]}function __getslice__(e,t,r,_){return"object"==typeof e&&"__getitem__"in e?e.__getitem__([t,r,_]):e.__getslice__(t,r,_)}__PyIterator__.prototype.__next__=function(){if(this.index<this.iterable.length)return this.iterable[this.index++];throw StopIteration(new Error)},__JsIterator__.prototype.next=function(){return this.index<this.iterable.py_keys.length?{value:this.index++,done:!1}:{value:void 0,done:!0}},Array.prototype.__class__=list,list.__name__="list",list.__bases__=[object],Array.prototype.__iter__=function(){return new __PyIterator__(this)},Array.prototype.__getslice__=function(e,t,r){if(e<0&&(e=this.length+e),null==t?t=this.length:t<0?t=this.length+t:t>this.length&&(t=this.length),1==r)return Array.prototype.slice.call(this,e,t);let _=list([]);for(let n=e;n<t;n+=r)_.push(this[n]);return _},Array.prototype.__setslice__=function(e,t,r,_){if(e<0&&(e=this.length+e),null==t?t=this.length:t<0&&(t=this.length+t),null==r)Array.prototype.splice.apply(this,[e,t-e].concat(_));else{let n=0;for(let a=e;a<t;a+=r)this[a]=_[n++]}},Array.prototype.__repr__=function(){if(this.__class__==set&&!this.length)return"set()";let e=this.__class__&&this.__class__!=list?this.__class__==tuple?"(":"{":"[";for(let t=0;t<this.length;t++)t&&(e+=", "),e+=repr(this[t]);return this.__class__==tuple&&1==this.length&&(e+=","),e+=this.__class__&&this.__class__!=list?this.__class__==tuple?")":"}":"]"},Array.prototype.__str__=Array.prototype.__repr__,Array.prototype.append=function(e){this.push(e)},Array.prototype.py_clear=function(){this.length=0},Array.prototype.extend=function(e){this.push.apply(this,e)},Array.prototype.insert=function(e,t){this.splice(e,0,t)},Array.prototype.remove=function(e){let t=this.indexOf(e);if(-1==t)throw ValueError("list.remove(x): x not in list",new Error);this.splice(t,1)},Array.prototype.index=function(e){return this.indexOf(e)},Array.prototype.py_pop=function(e){return void 0==e?this.pop():this.splice(e,1)[0]},Array.prototype.py_sort=function(){__sort__.apply(null,[this].concat([].slice.apply(arguments)))},Array.prototype.__add__=function(e){return list(this.concat(e))},Array.prototype.__mul__=function(e){let t=this;for(let r=1;r<e;r++)t=t.concat(this);return t},Array.prototype.__rmul__=Array.prototype.__mul__,tuple.__name__="tuple",tuple.__bases__=[object],set.__name__="set",set.__bases__=[object],Array.prototype.__bindexOf__=function(e){e+="";let t=0,r=this.length-1;for(;t<=r;){let _=(t+r)/2|0,n=this[_]+"";if(n<e)t=_+1;else{if(!(n>e))return _;r=_-1}}return-1},Array.prototype.add=function(e){-1==this.indexOf(e)&&this.push(e)},Array.prototype.discard=function(e){var t=this.indexOf(e);-1!=t&&this.splice(t,1)},Array.prototype.isdisjoint=function(e){this.sort();for(let t=0;t<e.length;t++)if(-1!=this.__bindexOf__(e[t]))return!1;return!0},Array.prototype.issuperset=function(e){this.sort();for(let t=0;t<e.length;t++)if(-1==this.__bindexOf__(e[t]))return!1;return!0},Array.prototype.issubset=function(e){return set(e.slice()).issuperset(this)},Array.prototype.union=function(e){let t=set(this.slice().sort());for(let r=0;r<e.length;r++)-1==t.__bindexOf__(e[r])&&t.push(e[r]);return t},Array.prototype.intersection=function(e){this.sort();let t=set();for(let r=0;r<e.length;r++)-1!=this.__bindexOf__(e[r])&&t.push(e[r]);return t},Array.prototype.difference=function(e){let t=set(e.slice().sort()),r=set();for(let e=0;e<this.length;e++)-1==t.__bindexOf__(this[e])&&r.push(this[e]);return r},Array.prototype.symmetric_difference=function(e){return this.union(e).difference(this.intersection(e))},Array.prototype.py_update=function(){let e=[].concat.apply(this.slice(),arguments).sort();this.py_clear();for(let t=0;t<e.length;t++)e[t]!=e[t-1]&&this.push(e[t])},Array.prototype.__eq__=function(e){if(this.length!=e.length)return!1;this.__class__==set&&(this.sort(),e.sort());for(let t=0;t<this.length;t++)if(this[t]!=e[t])return!1;return!0},Array.prototype.__ne__=function(e){return!this.__eq__(e)},Array.prototype.__le__=function(e){if(this.__class__==set)return this.issubset(e);for(let t=0;t<this.length;t++){if(this[t]>e[t])return!1;if(this[t]<e[t])return!0}return!0},Array.prototype.__ge__=function(e){if(this.__class__==set)return this.issuperset(e);for(let t=0;t<this.length;t++){if(this[t]<e[t])return!1;if(this[t]>e[t])return!0}return!0},Array.prototype.__lt__=function(e){return this.__class__==set?this.issubset(e)&&!this.issuperset(e):!this.__ge__(e)},Array.prototype.__gt__=function(e){return this.__class__==set?this.issuperset(e)&&!this.issubset(e):!this.__le__(e)},Uint8Array.prototype.__add__=function(e){let t=new Uint8Array(this.length+e.length);return t.set(this),t.set(e,this.length),t},Uint8Array.prototype.__mul__=function(e){let t=new Uint8Array(e*this.length);for(let r=0;r<e;r++)t.set(this,r*this.length);return t},Uint8Array.prototype.__rmul__=Uint8Array.prototype.__mul__,String.prototype.__class__=str,str.__name__="str",str.__bases__=[object],String.prototype.__iter__=function(){},String.prototype.__repr__=function(){return(-1==this.indexOf("'")?"'"+this+"'":'"'+this+'"').py_replace("\t","\\t").py_replace("\n","\\n")},String.prototype.__str__=function(){return this},String.prototype.capitalize=function(){return this.charAt(0).toUpperCase()+this.slice(1)},String.prototype.endswith=function(e){if(!(e instanceof Array))return""==e||this.slice(-e.length)==e;for(var t=0;t<e.length;t++)if(this.slice(-e[t].length)==e[t])return!0;return!1},String.prototype.find=function(e,t){return this.indexOf(e,t)},String.prototype.__getslice__=function(e,t,r){e<0&&(e=this.length+e),null==t?t=this.length:t<0&&(t=this.length+t);var _="";if(1==r)_=this.substring(e,t);else for(var n=e;n<t;n+=r)_=_.concat(this.charAt(n));return _},__setproperty__(String.prototype,"format",{get:function(){return __get__(this,function(e){var t=tuple([].slice.apply(arguments).slice(1)),r=0;return e.replace(/\{(\w*)\}/g,function(e,_){if(""==_&&(_=r++),_==+_)return void 0===t[_]?e:str(t[_]);for(var n=0;n<t.length;n++)if("object"==typeof t[n]&&void 0!==t[n][_])return str(t[n][_]);return e})})},enumerable:!0}),String.prototype.isalnum=function(){return/^[0-9a-zA-Z]{1,}$/.test(this)},String.prototype.isalpha=function(){return/^[a-zA-Z]{1,}$/.test(this)},String.prototype.isdecimal=function(){return/^[0-9]{1,}$/.test(this)},String.prototype.isdigit=function(){return this.isdecimal()},String.prototype.islower=function(){return/^[a-z]{1,}$/.test(this)},String.prototype.isupper=function(){return/^[A-Z]{1,}$/.test(this)},String.prototype.isspace=function(){return/^[\s]{1,}$/.test(this)},String.prototype.isnumeric=function(){return!isNaN(parseFloat(this))&&isFinite(this)},String.prototype.join=function(e){return(e=Array.from(e)).join(this)},String.prototype.lower=function(){return this.toLowerCase()},String.prototype.py_replace=function(e,t,r){return this.split(e,r).join(t)},String.prototype.lstrip=function(){return this.replace(/^\s*/g,"")},String.prototype.rfind=function(e,t){return this.lastIndexOf(e,t)},String.prototype.rsplit=function(e,t){if(void 0==e||null==e){e=/\s+/;var r=this.strip()}else r=this;if(void 0==t||-1==t)return r.split(e);var _=r.split(e);if(t<_.length){var n=_.length-t;return[_.slice(0,n).join(e)].concat(_.slice(n))}return _},String.prototype.rstrip=function(){return this.replace(/\s*$/g,"")},String.prototype.py_split=function(e,t){if(void 0==e||null==e){e=/\s+/;var r=this.strip()}else r=this;if(void 0==t||-1==t)return r.split(e);var _=r.split(e);return t<_.length?_.slice(0,t).concat([_.slice(t).join(e)]):_},String.prototype.startswith=function(e){if(!(e instanceof Array))return 0==this.indexOf(e);for(var t=0;t<e.length;t++)if(0==this.indexOf(e[t]))return!0;return!1},String.prototype.strip=function(){return this.trim()},String.prototype.upper=function(){return this.toUpperCase()},String.prototype.__mul__=function(e){for(var t="",r=0;r<e;r++)t+=this;return t},String.prototype.__rmul__=String.prototype.__mul__,dict.__name__="dict",dict.__bases__=[object],__setproperty__(Function.prototype,"__setdoc__",{value:__setdoc__,enumerable:!1});var BaseException=__class__("BaseException",[object],{__module__:__name__}),Exception=__class__("Exception",[BaseException],{__module__:__name__,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();e.__args__=a;try{e.stack=t.error.stack}catch(t){e.stack="No stack trace available"}})},get __repr__(){return __get__(this,function(e){return len(e.__args__)>1?"{}{}".format(e.__class__.__name__,repr(tuple(e.__args__))):len(e.__args__)?"{}({})".format(e.__class__.__name__,repr(e.__args__[0])):"{}()".format(e.__class__.__name__)})},get __str__(){return __get__(this,function(e){return len(e.__args__)>1?str(tuple(e.__args__)):len(e.__args__)?str(e.__args__[0]):""})}}),IterableError=__class__("IterableError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(e,t){Exception.__init__(e,"Can't iterate over non-iterable",__kwargtrans__({error:t}))})}}),StopIteration=__class__("StopIteration",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(e,t){Exception.__init__(e,"Iterator exhausted",__kwargtrans__({error:t}))})}}),ValueError=__class__("ValueError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(e,t,r){Exception.__init__(e,t,__kwargtrans__({error:r}))})}}),KeyError=__class__("KeyError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(e,t,r){Exception.__init__(e,t,__kwargtrans__({error:r}))})}}),AssertionError=__class__("AssertionError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(e,t,r){t?Exception.__init__(e,t,__kwargtrans__({error:r})):Exception.__init__(e,__kwargtrans__({error:r}))})}}),NotImplementedError=__class__("NotImplementedError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(e,t,r){Exception.__init__(e,t,__kwargtrans__({error:r}))})}}),IndexError=__class__("IndexError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(e,t,r){Exception.__init__(e,t,__kwargtrans__({error:r}))})}}),AttributeError=__class__("AttributeError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(e,t,r){Exception.__init__(e,t,__kwargtrans__({error:r}))})}}),py_TypeError=__class__("py_TypeError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(e,t,r){Exception.__init__(e,t,__kwargtrans__({error:r}))})}}),Warning=__class__("Warning",[Exception],{__module__:__name__}),UserWarning=__class__("UserWarning",[Warning],{__module__:__name__}),DeprecationWarning=__class__("DeprecationWarning",[Warning],{__module__:__name__}),RuntimeWarning=__class__("RuntimeWarning",[Warning],{__module__:__name__}),__sort__=function(e,t,r){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=!1;if(arguments.length){var _=arguments.length-1;if(arguments[_]&&arguments[_].hasOwnProperty("__kwargtrans__")){var n=arguments[_--];for(var a in n)switch(a){case"iterable":e=n[a];break;case"key":t=n[a];break;case"reverse":r=n[a]}}}t?e.sort(function(e,r){if(arguments.length){var _=arguments.length-1;if(arguments[_]&&arguments[_].hasOwnProperty("__kwargtrans__")){var n=arguments[_--];for(var a in n)switch(a){case"a":e=n[a];break;case"b":r=n[a]}}}return t(e)>t(r)?1:-1}):e.sort(),r&&e.reverse()},sorted=function(e,t,r){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=!1;if(arguments.length){var _=arguments.length-1;if(arguments[_]&&arguments[_].hasOwnProperty("__kwargtrans__")){var n=arguments[_--];for(var a in n)switch(a){case"iterable":e=n[a];break;case"key":t=n[a];break;case"reverse":r=n[a]}}}if(py_typeof(e)==dict)var i=copy(e.py_keys());else i=copy(e);return __sort__(i,t,r),i},map=function(e,t){return function(){var r=[];for(var _ of t)r.append(e(_));return r}()},filter=function(e,t){if(null==e)e=bool;return function(){var r=[];for(var _ of t)e(_)&&r.append(_);return r}()},divmod=function(e,t){return tuple([Math.floor(e/t),__mod__(e,t)])},__Terminal__=__class__("__Terminal__",[object],{__module__:__name__,get __init__(){return __get__(this,function(e){e.buffer="";try{e.element=document.getElementById("__terminal__")}catch(t){e.element=null}e.element&&(e.element.style.overflowX="auto",e.element.style.boxSizing="border-box",e.element.style.padding="5px",e.element.innerHTML="_")})},get print(){return __get__(this,function(e){var t=" ",r="\n";if(arguments.length){var _=arguments.length-1;if(arguments[_]&&arguments[_].hasOwnProperty("__kwargtrans__")){var n=arguments[_--];for(var a in n)switch(a){case"self":e=n[a];break;case"sep":t=n[a];break;case"end":r=n[a]}}var i=tuple([].slice.apply(arguments).slice(1,_+1))}else i=tuple();e.buffer="{}{}{}".format(e.buffer,t.join(function(){var e=[];for(var t of i)e.append(str(t));return e}()),r).__getslice__(-4096,null,1),e.element?(e.element.innerHTML=e.buffer.py_replace("\n","<br>").py_replace(" ","&nbsp"),e.element.scrollTop=e.element.scrollHeight):console.log(t.join(function(){var e=[];for(var t of i)e.append(str(t));return e}()))})},get input(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"question":t=_[n]}}}e.print("{}".format(t),__kwargtrans__({end:""}));var a=window.prompt("\n".join(e.buffer.py_split("\n").__getslice__(-8,null,1)));return e.print(a),a})}}),__terminal__=__Terminal__(),print=__terminal__.print,input=__terminal__.input,bigInt=function(undefined$1){var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET="0123456789abcdefghijklmnopqrstuvwxyz",supportsNativeBigInt="function"==typeof BigInt,pow;function Integer(e,t,r,_){return void 0===e?Integer[0]:void 0!==t&&(10!=+t||r)?parseBase(e,t,r,_):parseValue(e)}function BigInteger(e,t){this.value=e,this.sign=t,this.isSmall=!1}function SmallInteger(e){this.value=e,this.sign=e<0,this.isSmall=!0}function NativeBigInt(e){this.value=e}function isPrecise(e){return-MAX_INT<e&&e<MAX_INT}function smallToArray(e){return e<1e7?[e]:e<1e14?[e%1e7,Math.floor(e/1e7)]:[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function arrayToSmall(e){trim(e);var t=e.length;if(t<4&&compareAbs(e,MAX_INT_ARR)<0)switch(t){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*BASE;default:return e[0]+(e[1]+e[2]*BASE)*BASE}return e}function trim(e){for(var t=e.length;0===e[--t];);e.length=t+1}function createArray(e){for(var t=new Array(e),r=-1;++r<e;)t[r]=0;return t}function truncate(e){return e>0?Math.floor(e):Math.ceil(e)}function add(e,t){var r,_,n=e.length,a=t.length,i=new Array(n),o=0,s=BASE;for(_=0;_<a;_++)o=(r=e[_]+t[_]+o)>=s?1:0,i[_]=r-o*s;for(;_<n;)o=(r=e[_]+o)===s?1:0,i[_++]=r-o*s;return o>0&&i.push(o),i}function addAny(e,t){return e.length>=t.length?add(e,t):add(t,e)}function addSmall(e,t){var r,_,n=e.length,a=new Array(n),i=BASE;for(_=0;_<n;_++)r=e[_]-i+t,t=Math.floor(r/i),a[_]=r-t*i,t+=1;for(;t>0;)a[_++]=t%i,t=Math.floor(t/i);return a}function subtract(e,t){var r,_,n=e.length,a=t.length,i=new Array(n),o=0,s=BASE;for(r=0;r<a;r++)(_=e[r]-o-t[r])<0?(_+=s,o=1):o=0,i[r]=_;for(r=a;r<n;r++){if(!((_=e[r]-o)<0)){i[r++]=_;break}_+=s,i[r]=_}for(;r<n;r++)i[r]=e[r];return trim(i),i}function subtractAny(e,t,r){var _;return compareAbs(e,t)>=0?_=subtract(e,t):(_=subtract(t,e),r=!r),"number"==typeof(_=arrayToSmall(_))?(r&&(_=-_),new SmallInteger(_)):new BigInteger(_,r)}function subtractSmall(e,t,r){var _,n,a=e.length,i=new Array(a),o=-t,s=BASE;for(_=0;_<a;_++)n=e[_]+o,o=Math.floor(n/s),n%=s,i[_]=n<0?n+s:n;return"number"==typeof(i=arrayToSmall(i))?(r&&(i=-i),new SmallInteger(i)):new BigInteger(i,r)}function multiplyLong(e,t){var r,_,n,a,i=e.length,o=t.length,s=createArray(i+o),l=BASE;for(n=0;n<i;++n){a=e[n];for(var c=0;c<o;++c)r=a*t[c]+s[n+c],_=Math.floor(r/l),s[n+c]=r-_*l,s[n+c+1]+=_}return trim(s),s}function multiplySmall(e,t){var r,_,n=e.length,a=new Array(n),i=BASE,o=0;for(_=0;_<n;_++)r=e[_]*t+o,o=Math.floor(r/i),a[_]=r-o*i;for(;o>0;)a[_++]=o%i,o=Math.floor(o/i);return a}function shiftLeft(e,t){for(var r=[];t-- >0;)r.push(0);return r.concat(e)}function multiplyKaratsuba(e,t){var r=Math.max(e.length,t.length);if(r<=30)return multiplyLong(e,t);r=Math.ceil(r/2);var _=e.slice(r),n=e.slice(0,r),a=t.slice(r),i=t.slice(0,r),o=multiplyKaratsuba(n,i),s=multiplyKaratsuba(_,a),l=addAny(addAny(o,shiftLeft(subtract(subtract(multiplyKaratsuba(addAny(n,_),addAny(i,a)),o),s),r)),shiftLeft(s,2*r));return trim(l),l}function useKaratsuba(e,t){return-.012*e-.012*t+15e-6*e*t>0}function multiplySmallAndArray(e,t,r){return new BigInteger(e<BASE?multiplySmall(t,e):multiplyLong(t,smallToArray(e)),r)}function square(e){var t,r,_,n,a=e.length,i=createArray(a+a),o=BASE;for(_=0;_<a;_++){r=0-(n=e[_])*n;for(var s=_;s<a;s++)t=n*e[s]*2+i[_+s]+r,r=Math.floor(t/o),i[_+s]=t-r*o;i[_+a]=r}return trim(i),i}function divMod1(e,t){var r,_,n,a,i,o,s,l=e.length,c=t.length,u=BASE,f=createArray(t.length),p=t[c-1],g=Math.ceil(u/(2*p)),h=multiplySmall(e,g),d=multiplySmall(t,g);for(h.length<=l&&h.push(0),d.push(0),p=d[c-1],_=l-c;_>=0;_--){for(r=u-1,h[_+c]!==p&&(r=Math.floor((h[_+c]*u+h[_+c-1])/p)),n=0,a=0,o=d.length,i=0;i<o;i++)n+=r*d[i],s=Math.floor(n/u),a+=h[_+i]-(n-s*u),n=s,a<0?(h[_+i]=a+u,a=-1):(h[_+i]=a,a=0);for(;0!==a;){for(r-=1,n=0,i=0;i<o;i++)(n+=h[_+i]-u+d[i])<0?(h[_+i]=n+u,n=0):(h[_+i]=n,n=1);a+=n}f[_]=r}return h=divModSmall(h,g)[0],[arrayToSmall(f),arrayToSmall(h)]}function divMod2(e,t){for(var r,_,n,a,i,o=e.length,s=t.length,l=[],c=[],u=BASE;o;)if(c.unshift(e[--o]),trim(c),compareAbs(c,t)<0)l.push(0);else{n=c[(_=c.length)-1]*u+c[_-2],a=t[s-1]*u+t[s-2],_>s&&(n=(n+1)*u),r=Math.ceil(n/a);do{if(compareAbs(i=multiplySmall(t,r),c)<=0)break;r--}while(r);l.push(r),c=subtract(c,i)}return l.reverse(),[arrayToSmall(l),arrayToSmall(c)]}function divModSmall(e,t){var r,_,n,a,i=e.length,o=createArray(i),s=BASE;for(n=0,r=i-1;r>=0;--r)n=(a=n*s+e[r])-(_=truncate(a/t))*t,o[r]=0|_;return[o,0|n]}function divModAny(e,t){var r,_=parseValue(t);if(supportsNativeBigInt)return[new NativeBigInt(e.value/_.value),new NativeBigInt(e.value%_.value)];var n,a=e.value,i=_.value;if(0===i)throw new Error("Cannot divide by zero");if(e.isSmall)return _.isSmall?[new SmallInteger(truncate(a/i)),new SmallInteger(a%i)]:[Integer[0],e];if(_.isSmall){if(1===i)return[e,Integer[0]];if(-1==i)return[e.negate(),Integer[0]];var o=Math.abs(i);if(o<BASE){n=arrayToSmall((r=divModSmall(a,o))[0]);var s=r[1];return e.sign&&(s=-s),"number"==typeof n?(e.sign!==_.sign&&(n=-n),[new SmallInteger(n),new SmallInteger(s)]):[new BigInteger(n,e.sign!==_.sign),new SmallInteger(s)]}i=smallToArray(o)}var l=compareAbs(a,i);if(-1===l)return[Integer[0],e];if(0===l)return[Integer[e.sign===_.sign?1:-1],Integer[0]];n=(r=a.length+i.length<=200?divMod1(a,i):divMod2(a,i))[0];var c=e.sign!==_.sign,u=r[1],f=e.sign;return"number"==typeof n?(c&&(n=-n),n=new SmallInteger(n)):n=new BigInteger(n,c),"number"==typeof u?(f&&(u=-u),u=new SmallInteger(u)):u=new BigInteger(u,f),[n,u]}function compareAbs(e,t){if(e.length!==t.length)return e.length>t.length?1:-1;for(var r=e.length-1;r>=0;r--)if(e[r]!==t[r])return e[r]>t[r]?1:-1;return 0}function isBasicPrime(e){var t=e.abs();return!t.isUnit()&&(!!(t.equals(2)||t.equals(3)||t.equals(5))||!(t.isEven()||t.isDivisibleBy(3)||t.isDivisibleBy(5))&&(!!t.lesser(49)||void 0))}function millerRabinTest(e,t){for(var r,_,n,a=e.prev(),i=a,o=0;i.isEven();)i=i.divide(2),o++;e:for(_=0;_<t.length;_++)if(!e.lesser(t[_])&&!(n=bigInt(t[_]).modPow(i,e)).isUnit()&&!n.equals(a)){for(r=o-1;0!=r;r--){if((n=n.square().mod(e)).isUnit())return!1;if(n.equals(a))continue e}return!1}return!0}BigInteger.prototype=Object.create(Integer.prototype),SmallInteger.prototype=Object.create(Integer.prototype),NativeBigInt.prototype=Object.create(Integer.prototype),BigInteger.prototype.add=function(e){var t=parseValue(e);if(this.sign!==t.sign)return this.subtract(t.negate());var r=this.value,_=t.value;return t.isSmall?new BigInteger(addSmall(r,Math.abs(_)),this.sign):new BigInteger(addAny(r,_),this.sign)},BigInteger.prototype.plus=BigInteger.prototype.add,SmallInteger.prototype.add=function(e){var t=parseValue(e),r=this.value;if(r<0!==t.sign)return this.subtract(t.negate());var _=t.value;if(t.isSmall){if(isPrecise(r+_))return new SmallInteger(r+_);_=smallToArray(Math.abs(_))}return new BigInteger(addSmall(_,Math.abs(r)),r<0)},SmallInteger.prototype.plus=SmallInteger.prototype.add,NativeBigInt.prototype.add=function(e){return new NativeBigInt(this.value+parseValue(e).value)},NativeBigInt.prototype.plus=NativeBigInt.prototype.add,BigInteger.prototype.subtract=function(e){var t=parseValue(e);if(this.sign!==t.sign)return this.add(t.negate());var r=this.value,_=t.value;return t.isSmall?subtractSmall(r,Math.abs(_),this.sign):subtractAny(r,_,this.sign)},BigInteger.prototype.minus=BigInteger.prototype.subtract,SmallInteger.prototype.subtract=function(e){var t=parseValue(e),r=this.value;if(r<0!==t.sign)return this.add(t.negate());var _=t.value;return t.isSmall?new SmallInteger(r-_):subtractSmall(_,Math.abs(r),r>=0)},SmallInteger.prototype.minus=SmallInteger.prototype.subtract,NativeBigInt.prototype.subtract=function(e){return new NativeBigInt(this.value-parseValue(e).value)},NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract,BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)},SmallInteger.prototype.negate=function(){var e=this.sign,t=new SmallInteger(-this.value);return t.sign=!e,t},NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value)},BigInteger.prototype.abs=function(){return new BigInteger(this.value,!1)},SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))},NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value)},BigInteger.prototype.multiply=function(e){var t,r=parseValue(e),_=this.value,n=r.value,a=this.sign!==r.sign;if(r.isSmall){if(0===n)return Integer[0];if(1===n)return this;if(-1===n)return this.negate();if((t=Math.abs(n))<BASE)return new BigInteger(multiplySmall(_,t),a);n=smallToArray(t)}return useKaratsuba(_.length,n.length)?new BigInteger(multiplyKaratsuba(_,n),a):new BigInteger(multiplyLong(_,n),a)},BigInteger.prototype.times=BigInteger.prototype.multiply,SmallInteger.prototype._multiplyBySmall=function(e){return isPrecise(e.value*this.value)?new SmallInteger(e.value*this.value):multiplySmallAndArray(Math.abs(e.value),smallToArray(Math.abs(this.value)),this.sign!==e.sign)},BigInteger.prototype._multiplyBySmall=function(e){return 0===e.value?Integer[0]:1===e.value?this:-1===e.value?this.negate():multiplySmallAndArray(Math.abs(e.value),this.value,this.sign!==e.sign)},SmallInteger.prototype.multiply=function(e){return parseValue(e)._multiplyBySmall(this)},SmallInteger.prototype.times=SmallInteger.prototype.multiply,NativeBigInt.prototype.multiply=function(e){return new NativeBigInt(this.value*parseValue(e).value)},NativeBigInt.prototype.times=NativeBigInt.prototype.multiply,BigInteger.prototype.square=function(){return new BigInteger(square(this.value),!1)},SmallInteger.prototype.square=function(){var e=this.value*this.value;return isPrecise(e)?new SmallInteger(e):new BigInteger(square(smallToArray(Math.abs(this.value))),!1)},NativeBigInt.prototype.square=function(e){return new NativeBigInt(this.value*this.value)},BigInteger.prototype.divmod=function(e){var t=divModAny(this,e);return{quotient:t[0],remainder:t[1]}},NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod,BigInteger.prototype.divide=function(e){return divModAny(this,e)[0]},NativeBigInt.prototype.over=NativeBigInt.prototype.divide=SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide,BigInteger.prototype.mod=function(e){return divModAny(this,e)[1]},NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod,BigInteger.prototype.pow=function(e){var t,r,_,n=parseValue(e),a=this.value,i=n.value;if(0===i)return Integer[1];if(0===a)return Integer[0];if(1===a)return Integer[1];if(-1===a)return n.isEven()?Integer[1]:Integer[-1];if(n.sign)return Integer[0];if(!n.isSmall)throw new Error("The exponent "+n.toString()+" is too large.");if(this.isSmall&&isPrecise(t=Math.pow(a,i)))return new SmallInteger(truncate(t));for(r=this,_=Integer[1];!0&i&&(_=_.times(r),--i),0!==i;)i/=2,r=r.square();return _},SmallInteger.prototype.pow=BigInteger.prototype.pow,supportsNativeBigInt&&(pow=eval("(a,b)=>a**b")),NativeBigInt.prototype.pow=function(e){var t=parseValue(e),r=this.value,_=t.value;return _===BigInt(0)?Integer[1]:r===BigInt(0)?Integer[0]:r===BigInt(1)?Integer[1]:r===BigInt(-1)?t.isEven()?Integer[1]:Integer[-1]:t.isNegative()?new NativeBigInt(BigInt(0)):new NativeBigInt(pow(r,_))},BigInteger.prototype.modPow=function(e,t){if(e=parseValue(e),(t=parseValue(t)).isZero())throw new Error("Cannot take modPow with modulus 0");for(var r=Integer[1],_=this.mod(t);e.isPositive();){if(_.isZero())return Integer[0];e.isOdd()&&(r=r.multiply(_).mod(t)),e=e.divide(2),_=_.square().mod(t)}return r},NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow,BigInteger.prototype.compareAbs=function(e){var t=parseValue(e),r=this.value,_=t.value;return t.isSmall?1:compareAbs(r,_)},SmallInteger.prototype.compareAbs=function(e){var t=parseValue(e),r=Math.abs(this.value),_=t.value;return t.isSmall?r===(_=Math.abs(_))?0:r>_?1:-1:-1},NativeBigInt.prototype.compareAbs=function(e){var t=this.value,r=parseValue(e).value;return(t=t>=0?t:-t)===(r=r>=0?r:-r)?0:t>r?1:-1},BigInteger.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=parseValue(e),r=this.value,_=t.value;return this.sign!==t.sign?t.sign?1:-1:t.isSmall?this.sign?-1:1:compareAbs(r,_)*(this.sign?-1:1)},BigInteger.prototype.compareTo=BigInteger.prototype.compare,SmallInteger.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=parseValue(e),r=this.value,_=t.value;return t.isSmall?r==_?0:r>_?1:-1:r<0!==t.sign?r<0?-1:1:r<0?1:-1},SmallInteger.prototype.compareTo=SmallInteger.prototype.compare,NativeBigInt.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=this.value,r=parseValue(e).value;return t===r?0:t>r?1:-1},NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare,BigInteger.prototype.equals=function(e){return 0===this.compare(e)},NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals,BigInteger.prototype.notEquals=function(e){return 0!==this.compare(e)},NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals,BigInteger.prototype.greater=function(e){return this.compare(e)>0},NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater,BigInteger.prototype.lesser=function(e){return this.compare(e)<0},NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser,BigInteger.prototype.greaterOrEquals=function(e){return this.compare(e)>=0},NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals,BigInteger.prototype.lesserOrEquals=function(e){return this.compare(e)<=0},NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals,BigInteger.prototype.isEven=function(){return 0==(1&this.value[0])},SmallInteger.prototype.isEven=function(){return 0==(1&this.value)},NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)},BigInteger.prototype.isOdd=function(){return 1==(1&this.value[0])},SmallInteger.prototype.isOdd=function(){return 1==(1&this.value)},NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)},BigInteger.prototype.isPositive=function(){return!this.sign},SmallInteger.prototype.isPositive=function(){return this.value>0},NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive,BigInteger.prototype.isNegative=function(){return this.sign},SmallInteger.prototype.isNegative=function(){return this.value<0},NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative,BigInteger.prototype.isUnit=function(){return!1},SmallInteger.prototype.isUnit=function(){return 1===Math.abs(this.value)},NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1)},BigInteger.prototype.isZero=function(){return!1},SmallInteger.prototype.isZero=function(){return 0===this.value},NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0)},BigInteger.prototype.isDivisibleBy=function(e){var t=parseValue(e);return!t.isZero()&&(!!t.isUnit()||(0===t.compareAbs(2)?this.isEven():this.mod(t).isZero()))},NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy,BigInteger.prototype.isPrime=function(e){var t=isBasicPrime(this);if(t!==undefined$1)return t;var r=this.abs(),_=r.bitLength();if(_<=64)return millerRabinTest(r,[2,325,9375,28178,450775,9780504,1795265022]);for(var n=Math.log(2)*_.toJSNumber(),a=Math.ceil(!0===e?2*Math.pow(n,2):n),i=[],o=0;o<a;o++)i.push(bigInt(o+2));return millerRabinTest(r,i)},NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime,BigInteger.prototype.isProbablePrime=function(e){var t=isBasicPrime(this);if(t!==undefined$1)return t;for(var r=this.abs(),_=e===undefined$1?5:e,n=[],a=0;a<_;a++)n.push(bigInt.randBetween(2,r.minus(2)));return millerRabinTest(r,n)},NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime,BigInteger.prototype.modInv=function(e){for(var t,r,_,n=bigInt.zero,a=bigInt.one,i=parseValue(e),o=this.abs();!o.isZero();)t=i.divide(o),r=n,_=i,n=a,i=o,a=r.subtract(t.multiply(a)),o=_.subtract(t.multiply(o));if(!i.isUnit())throw new Error(this.toString()+" and "+e.toString()+" are not co-prime");return-1===n.compare(0)&&(n=n.add(e)),this.isNegative()?n.negate():n},NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv,BigInteger.prototype.next=function(){var e=this.value;return this.sign?subtractSmall(e,1,this.sign):new BigInteger(addSmall(e,1),this.sign)},SmallInteger.prototype.next=function(){var e=this.value;return e+1<MAX_INT?new SmallInteger(e+1):new BigInteger(MAX_INT_ARR,!1)},NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1))},BigInteger.prototype.prev=function(){var e=this.value;return this.sign?new BigInteger(addSmall(e,1),!0):subtractSmall(e,1,this.sign)},SmallInteger.prototype.prev=function(){var e=this.value;return e-1>-MAX_INT?new SmallInteger(e-1):new BigInteger(MAX_INT_ARR,!0)},NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1))};for(var powersOfTwo=[1];2*powersOfTwo[powersOfTwo.length-1]<=BASE;)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(e){return Math.abs(e)<=BASE}function bitwise(e,t,r){t=parseValue(t);for(var _=e.isNegative(),n=t.isNegative(),a=_?e.not():e,i=n?t.not():t,o=0,s=0,l=null,c=null,u=[];!a.isZero()||!i.isZero();)o=(l=divModAny(a,highestPower2))[1].toJSNumber(),_&&(o=highestPower2-1-o),s=(c=divModAny(i,highestPower2))[1].toJSNumber(),n&&(s=highestPower2-1-s),a=l[0],i=c[0],u.push(r(o,s));for(var f=0!==r(_?1:0,n?1:0)?bigInt(-1):bigInt(0),p=u.length-1;p>=0;p-=1)f=f.multiply(highestPower2).add(bigInt(u[p]));return f}BigInteger.prototype.shiftLeft=function(e){var t=parseValue(e).toJSNumber();if(!shift_isSmall(t))throw new Error(String(t)+" is too large for shifting.");if(t<0)return this.shiftRight(-t);var r=this;if(r.isZero())return r;for(;t>=powers2Length;)r=r.multiply(highestPower2),t-=powers2Length-1;return r.multiply(powersOfTwo[t])},NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft,BigInteger.prototype.shiftRight=function(e){var t,r=parseValue(e).toJSNumber();if(!shift_isSmall(r))throw new Error(String(r)+" is too large for shifting.");if(r<0)return this.shiftLeft(-r);for(var _=this;r>=powers2Length;){if(_.isZero()||_.isNegative()&&_.isUnit())return _;_=(t=divModAny(_,highestPower2))[1].isNegative()?t[0].prev():t[0],r-=powers2Length-1}return(t=divModAny(_,powersOfTwo[r]))[1].isNegative()?t[0].prev():t[0]},NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight,BigInteger.prototype.not=function(){return this.negate().prev()},NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not,BigInteger.prototype.and=function(e){return bitwise(this,e,function(e,t){return e&t})},NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and,BigInteger.prototype.or=function(e){return bitwise(this,e,function(e,t){return e|t})},NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or,BigInteger.prototype.xor=function(e){return bitwise(this,e,function(e,t){return e^t})},NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(e){var t=e.value,r="number"==typeof t?t|LOBMASK_I:"bigint"==typeof t?t|BigInt(LOBMASK_I):t[0]+t[1]*BASE|LOBMASK_BI;return r&-r}function integerLogarithm(e,t){if(t.compareTo(e)<=0){var r=integerLogarithm(e,t.square(t)),_=r.p,n=r.e,a=_.multiply(t);return a.compareTo(e)<=0?{p:a,e:2*n+1}:{p:_,e:2*n}}return{p:bigInt(1),e:0}}function max(e,t){return e=parseValue(e),t=parseValue(t),e.greater(t)?e:t}function min(e,t){return e=parseValue(e),t=parseValue(t),e.lesser(t)?e:t}function gcd(e,t){if(e=parseValue(e).abs(),t=parseValue(t).abs(),e.equals(t))return e;if(e.isZero())return t;if(t.isZero())return e;for(var r,_,n=Integer[1];e.isEven()&&t.isEven();)r=min(roughLOB(e),roughLOB(t)),e=e.divide(r),t=t.divide(r),n=n.multiply(r);for(;e.isEven();)e=e.divide(roughLOB(e));do{for(;t.isEven();)t=t.divide(roughLOB(t));e.greater(t)&&(_=t,t=e,e=_),t=t.subtract(e)}while(!t.isZero());return n.isUnit()?e:e.multiply(n)}function lcm(e,t){return e=parseValue(e).abs(),t=parseValue(t).abs(),e.divide(gcd(e,t)).multiply(t)}function randBetween(e,t){var r=min(e=parseValue(e),t=parseValue(t)),_=max(e,t).subtract(r).add(1);if(_.isSmall)return r.add(Math.floor(Math.random()*_));for(var n=toBase(_,BASE).value,a=[],i=!0,o=0;o<n.length;o++){var s=i?n[o]:BASE,l=truncate(Math.random()*s);a.push(l),l<s&&(i=!1)}return r.add(Integer.fromArray(a,BASE,!1))}BigInteger.prototype.bitLength=function(){var e=this;return e.compareTo(bigInt(0))<0&&(e=e.negate().subtract(bigInt(1))),0===e.compareTo(bigInt(0))?bigInt(0):bigInt(integerLogarithm(e,bigInt(2)).e).add(bigInt(1))},NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;var parseBase=function(e,t,r,_){r=r||DEFAULT_ALPHABET,e=String(e),_||(e=e.toLowerCase(),r=r.toLowerCase());var n,a=e.length,i=Math.abs(t),o={};for(n=0;n<r.length;n++)o[r[n]]=n;for(n=0;n<a;n++){if("-"!==(c=e[n])&&(c in o&&o[c]>=i)){if("1"===c&&1===i)continue;throw new Error(c+" is not a valid digit in base "+t+".")}}t=parseValue(t);var s=[],l="-"===e[0];for(n=l?1:0;n<e.length;n++){var c;if((c=e[n])in o)s.push(parseValue(o[c]));else{if("<"!==c)throw new Error(c+" is not a valid character");var u=n;do{n++}while(">"!==e[n]&&n<e.length);s.push(parseValue(e.slice(u+1,n)))}}return parseBaseFromArray(s,t,l)};function parseBaseFromArray(e,t,r){var _,n=Integer[0],a=Integer[1];for(_=e.length-1;_>=0;_--)n=n.add(e[_].times(a)),a=a.times(t);return r?n.negate():n}function stringify(e,t){return e<(t=t||DEFAULT_ALPHABET).length?t[e]:"<"+e+">"}function toBase(e,t){if((t=bigInt(t)).isZero()){if(e.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(t.equals(-1)){if(e.isZero())return{value:[0],isNegative:!1};if(e.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-e.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var r=Array.apply(null,Array(e.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);return r.unshift([1]),{value:[].concat.apply([],r),isNegative:!1}}var _=!1;if(e.isNegative()&&t.isPositive()&&(_=!0,e=e.abs()),t.isUnit())return e.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(e.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:_};for(var n,a=[],i=e;i.isNegative()||i.compareAbs(t)>=0;){i=(n=i.divmod(t)).quotient;var o=n.remainder;o.isNegative()&&(o=t.minus(o).abs(),i=i.next()),a.push(o.toJSNumber())}return a.push(i.toJSNumber()),{value:a.reverse(),isNegative:_}}function toBaseString(e,t,r){var _=toBase(e,t);return(_.isNegative?"-":"")+_.value.map(function(e){return stringify(e,r)}).join("")}function parseStringValue(e){if(isPrecise(+e)){var t=+e;if(t===truncate(t))return supportsNativeBigInt?new NativeBigInt(BigInt(t)):new SmallInteger(t);throw new Error("Invalid integer: "+e)}var r="-"===e[0];r&&(e=e.slice(1));var _=e.split(/e/i);if(_.length>2)throw new Error("Invalid integer: "+_.join("e"));if(2===_.length){var n=_[1];if("+"===n[0]&&(n=n.slice(1)),(n=+n)!==truncate(n)||!isPrecise(n))throw new Error("Invalid integer: "+n+" is not a valid exponent.");var a=_[0],i=a.indexOf(".");if(i>=0&&(n-=a.length-i-1,a=a.slice(0,i)+a.slice(i+1)),n<0)throw new Error("Cannot include negative exponent part for integers");e=a+=new Array(n+1).join("0")}if(!/^([0-9][0-9]*)$/.test(e))throw new Error("Invalid integer: "+e);if(supportsNativeBigInt)return new NativeBigInt(BigInt(r?"-"+e:e));for(var o=[],s=e.length,l=LOG_BASE,c=s-l;s>0;)o.push(+e.slice(c,s)),(c-=l)<0&&(c=0),s-=l;return trim(o),new BigInteger(o,r)}function parseNumberValue(e){if(supportsNativeBigInt)return new NativeBigInt(BigInt(e));if(isPrecise(e)){if(e!==truncate(e))throw new Error(e+" is not an integer.");return new SmallInteger(e)}return parseStringValue(e.toString())}function parseValue(e){return"number"==typeof e?parseNumberValue(e):"string"==typeof e?parseStringValue(e):"bigint"==typeof e?new NativeBigInt(e):e}BigInteger.prototype.toArray=function(e){return toBase(this,e)},SmallInteger.prototype.toArray=function(e){return toBase(this,e)},NativeBigInt.prototype.toArray=function(e){return toBase(this,e)},BigInteger.prototype.toString=function(e,t){if(e===undefined$1&&(e=10),10!==e)return toBaseString(this,e,t);for(var r,_=this.value,n=_.length,a=String(_[--n]);--n>=0;)r=String(_[n]),a+="0000000".slice(r.length)+r;return(this.sign?"-":"")+a},SmallInteger.prototype.toString=function(e,t){return e===undefined$1&&(e=10),10!=e?toBaseString(this,e,t):String(this.value)},NativeBigInt.prototype.toString=SmallInteger.prototype.toString,NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()},BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)},BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf,SmallInteger.prototype.valueOf=function(){return this.value},SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf,NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};for(var i=0;i<1e3;i++)Integer[i]=parseValue(i),i>0&&(Integer[-i]=parseValue(-i));return Integer.one=Integer[1],Integer.zero=Integer[0],Integer.minusOne=Integer[-1],Integer.max=max,Integer.min=min,Integer.gcd=gcd,Integer.lcm=lcm,Integer.isInstance=function(e){return e instanceof BigInteger||e instanceof SmallInteger||e instanceof NativeBigInt},Integer.randBetween=randBetween,Integer.fromArray=function(e,t,r){return parseBaseFromArray(e.map(parseValue),parseValue(t||10),r)},Integer}();function urlBase64ToBase64(e){var t=e%4;return 2===t?e+="==":3===t&&(e+="="),e.replace(/-/g,"+").replace(/_/g,"/")}function b64ToBn(e){var t=[];return atob(e).split("").forEach(function(e){var r=e.charCodeAt(0).toString(16);r.length%2&&(r="0"+r),t.push(r)}),BigInt("0x"+t.join(""))}"undefined"!=typeof module&&module.hasOwnProperty("exports")&&(module.exports=bigInt),"function"==typeof define&&define.amd&&define("big-integer",[],function(){return bigInt});var dump_json=function(e,t=!0){return JSON.stringify(e)},dump_json_object=function(e,t=!0){return e},parse_json=function(e,t){return parse_json_object(JSON.parse(e),t)},parse_json_object=function(e,t){if("Optional"===t)return e||null;if(Array.isArray(t))switch(t[0].__name__){case"str":case"int":case"bool":return e;default:return e.map(function(e){return parse_json_object(e,t[0])})}switch(t.__name__){case"datetime":return t.fromtimestamp(new Date(e).valueOf()/1e3);case"ElementModP":case"ElementModQ":return new t(new bigInt(b64ToBn(urlBase64ToBase64(e))));case"str":case"int":case"bool":return e}var r=new t,_=e;return Object.assign(r,_),r._types&&r._types.forEach(function(e){r[e[0]]=parse_json_object(r[e[0]],e[1])}),r},re={};__nest__(re,"",__module_re__);var __name__$1="re.translate",VERBOSE=!1,MAX_SHIFTREDUCE_LOOPS=1e3,stringFlags="aiLmsux",Group=__class__("Group",[object],{__module__:__name__$1,get __init__(){return __get__(this,function(e,t,r,_){e.start=t,e.end=r,e.klass=_})},get __repr__(){return __get__(this,function(e){return str(tuple([e.start,e.end,e.klass]))})}}),generateGroupSpans=function(e){var t=[],r=0;for(var _ of e){if(__t__(_.py_name.startswith("(")))t.append(Group(r,null,_.py_name));else if(__t__(")"==_.py_name))for(var n of py_reversed(t))__t__(null===n.end)&&(n.end=r);r+=1}return t},countCaptureGroups=function(e){generateGroupSpans(e);var t=0;for(var r of e)__t__("("==r.py_name)&&(t+=1);return t},getCaptureGroup=function(e,t,r){try{var _=int(r)}catch(e){_=t[r]}var n=0;for(var a of e)if(__t__("("==a.klass)&&__t__((n+=1)==_))return a},splitIfElse=function(e,t){var r=[],_=generateGroupSpans(e);for(var n of _)if(__t__("(?<"==n.klass)){var a=e.__getslice__(0,null,1),i=e.__getslice__(0,null,1),o=n.start,s=n.end,l=e[o+1].py_name,c=getCaptureGroup(_,t,l),u=e[c.end+1];if(__t__(__t__(__in__(u.py_name,["?","*"]))||u.py_name.startswith("{0,"))){__t__("?"==u.py_name)?a[c.end+1]=null:__t__("*"==u.py_name)?a[c.end+1]=Token("+"):__t__(u.py_name.startswith("{0,"))&&a[c.end+1].py_name.__setslice__(0,3,null,"{1,"),i[c.end+1]=null;for(var f=!1,p=o;p<s;p++)if(__t__("|"==e[p].py_name)){f=!0;i.py_pop(s),a.__setslice__(p,s+1,null,[]),i.__setslice__(o,p+1,null,[]);break}__t__(!__t__(f))&&(i.__setslice__(o,s+1,null,[]),a.py_pop(s)),a.__setslice__(o,o+3,null,[]),i.__setslice__(c.start,c.end+1,null,[Token("("),Token(")")]),a.remove(null),i.remove(null),r.append(a),r.append(i)}else{for(p=o;p<s;p++)if(__t__("|"==a[p].py_name)){(a=e.__getslice__(0,p,1)).extend(e.__getslice__(s+1,null,1));break}a.__setslice__(o,o+3,null,[]),r.append(a)}break}if(__t__(!__t__(r)))return[e];var g=[];for(var h of r)g.extend(splitIfElse(h,t));return g},Token=__class__("Token",[object],{__module__:__name__$1,get __init__(){return __get__(this,function(e,t,r,_){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=!1;if(__t__(null===r))r=[];e.py_name=t,e.paras=r,e.pure=_,e.isModeGroup=!1})},get __repr__(){return __get__(this,function(e){return e.py_name})},get resolve(){return __get__(this,function(e){var t="";for(var r of e.paras)t+=str(r);return e.py_name+t})}}),shift=function(e,t){var r=!__t__(bool(t));if(__t__(!__t__(r))){e.append(Token(t[0],[],!0));t=t.__getslice__(1,null,1)}return tuple([e,t,r])},shiftReduce=function(e,t,r,_){var n=!1,a=len(e)-1;if(__t__(len(e)<2))return tuple([e=(c=shift(e,t))[0],t=c[1],_,n=c[2]]);var i=__t__(len(e)>0)?e[a]:Token(""),o=__t__(len(e)>1)?e[a-1]:Token("");if(__t__(VERBOSE)){for(var s of e)console.log(s.resolve(),"\t",__kwargtrans__({end:""}));console.log("")}if(__t__("\\"==o.py_name))__t__("A"==i.py_name)?e.__setslice__(-__t__(2),null,null,[Token("^")]):__t__("a"==i.py_name)?e.__setslice__(-__t__(2),null,null,[Token("\\07")]):__t__("Z"==i.py_name)?e.__setslice__(-__t__(2),null,null,[Token("$")]):e.__setslice__(-__t__(2),null,null,[Token("\\"+i.py_name)]);else if(__t__(__t__("$"==i.py_name)&&i.pure))e.py_pop(),e.extend([Token("(?="),Token("\\n"),Token("?"),Token("$"),Token(")")]);else if(__t__("{"==o.py_name)){__t__(__t__(","==i.py_name)&&0==len(o.paras))?(o.paras.append("0"),o.paras.append(",")):__t__("}"==i.py_name)?(o.paras.append("}"),o.py_name=o.resolve(),o.paras=[]):o.paras.append(i.py_name);e=e.__getslice__(0,-__t__(1),1)}else if(__t__(__t__("["==o.py_name)&&"^"==i.py_name))e.__setslice__(-__t__(2),null,null,[Token("[^")]);else if(__t__(__t__("("==o.py_name)&&"?"==i.py_name))e.__setslice__(-__t__(2),null,null,[Token("(?")]);else if(__t__(__t__(__in__(o.py_name,["*","+","?"]))&&"?"==i.py_name))e.__setslice__(-__t__(2),null,null,[Token(o.py_name+"?")]);else if(__t__(__t__(o.isModeGroup)&&")"==i.py_name))e=e.__getslice__(0,-__t__(2),1);else if(__t__("(?"==o.py_name))if(__t__(__in__(i.py_name,stringFlags)))__t__("i"==i.py_name)?_|=re.IGNORECASE:__t__("L"==i.py_name)?_|=re.LOCALE:__t__("m"==i.py_name)?_|=re.MULTILINE:__t__("s"==i.py_name)?_|=re.DOTALL:__t__("u"==i.py_name)?_|=re.UNICODE:__t__("x"==i.py_name)?_|=re.VERBOSE:__t__("a"==i.py_name)&&(_|=re.ASCII),e.py_pop(),o.isModeGroup=!0;else{__t__("("==i.py_name)&&(i.py_name="<");var l=Token("(?"+i.py_name);e.__setslice__(-__t__(2),null,null,[l])}else if(__t__("(?<"==o.py_name))__t__(")"==i.py_name)?(e.__setslice__(-__t__(1),null,null,[Token("".join(o.paras)),Token(">")]),o.paras=[]):(o.paras.append(i.py_name),e.py_pop());else if(__t__("(?P"==o.py_name))e.__setslice__(-__t__(2),null,null,[Token("(?P"+i.py_name)]);else if(__t__("(?P<"==o.py_name))__t__(">"==i.py_name)?(r["".join(o.paras)]=countCaptureGroups(e)+1,e.__setslice__(-__t__(2),null,null,[Token("(")])):(o.paras.append(i.py_name),e.py_pop());else if(__t__("(?P="==o.py_name))__t__(")"==i.py_name)?e.__setslice__(-__t__(2),null,null,[Token("\\"+str(r[o.paras[0]]))]):__t__(!__t__(o.paras))?(o.paras.append(i.py_name),e.py_pop()):(o.paras[0]+=i.py_name,e.py_pop());else if(__t__("(?#"==o.py_name))if(__t__(")"==i.py_name))e=e.__getslice__(0,-__t__(2),1);else e=e.__getslice__(0,-__t__(1),1);else{var c;e=(c=shift(e,t))[0],t=c[1],n=c[2]}return tuple([e,t,_,n])},translate=function(e){for(var t=[],r=list(e),_=0,n=dict(),a=0;__t__(!0);){if(__t__((a+=1)>MAX_SHIFTREDUCE_LOOPS)){var i=Exception();throw i.__cause__=null,i}var o=shiftReduce(t,r,n,_);t=o[0],r=o[1],_=o[2];if(__t__(o[3]))break}for(var s=splitIfElse(t,n),l=len(s),c=[],u=0;u<len(s);u++)c.extend(s[u]),__t__(u<len(s)-1)&&c.append(Token("|"));generateGroupSpans(t=c);var f=[];for(var p of t){var g=p.resolve();if(__t__(__t__(_&re.DOTALL)&&"."==g))g="[\\s\\S]";f.append(g)}return tuple([f,_,n,countCaptureGroups(t),l])},__name__$2="re",T=1,TEMPLATE=T,I=2,IGNORECASE=I,L=4,LOCALE=L,M=8,MULTILINE=M,S=16,DOTALL=S,U=32,UNICODE=U,X=64,VERBOSE$1=X,DEBUG=128,A=256,ASCII=A,Y=65536,STICKY=Y,G=1<<17,GLOBAL=G,J=1<<19,JSSTRICT=J,error=__class__("error",[Exception],{__module__:__name__$2,get __init__(){return __get__(this,function(e,t,r,_,n,a){if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=null;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=0;if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=null;Exception.__init__(e,t,__kwargtrans__({error:r})),e.pattern=_,e.flags=n,e.pos=a})}}),ReIndexError=__class__("ReIndexError",[IndexError],{__module__:__name__$2,get __init__(){return __get__(this,function(e){IndexError.__init__(e,"no such group")})}}),Match=__class__("Match",[object],{__module__:__name__$2,get __init__(){return __get__(this,function(e,t,r,_,n,a,i){if(void 0===i||null!=i&&i.hasOwnProperty("__kwargtrans__"))i=null;for(var[o,s]of enumerate(t))t[o]=void 0==t[o]?null:t[o];e._obj=t,e._pos=_,e._endpos=n,e._re=a,e._string=r,e._namedGroups=i,e._lastindex=e._lastMatchGroup(),null!==e._namedGroups?e._lastgroup=e._namedGroups[e._lastindex]:e._lastgroup=null})},get _getPos(){return __get__(this,function(e){return e._pos})},get _setPos(){return __get__(this,function(e,t){var r=AttributeError("readonly attribute");throw r.__cause__=null,r})},get _getEndPos(){return __get__(this,function(e){return e._endpos})},get _setEndPos(){return __get__(this,function(e,t){var r=AttributeError("readonly attribute");throw r.__cause__=null,r})},get _getRe(){return __get__(this,function(e){return e._re})},get _setRe(){return __get__(this,function(e,t){var r=AttributeError("readonly attribute");throw r.__cause__=null,r})},get _getString(){return __get__(this,function(e){return e._string})},get _setString(){return __get__(this,function(e,t){var r=AttributeError("readonly attribute");throw r.__cause__=null,r})},get _getLastGroup(){return __get__(this,function(e){return e._lastgroup})},get _setLastGroup(){return __get__(this,function(e,t){var r=AttributeError("readonly attribute");throw r.__cause__=null,r})},get _getLastIndex(){return __get__(this,function(e){return e._lastindex})},get _setLastIndex(){return __get__(this,function(e,t){var r=AttributeError("readonly attribute");throw r.__cause__=null,r})},get _lastMatchGroup(){return __get__(this,function(e){if(len(e._obj)>1){for(var t of range(len(e._obj)-1,0,-1))if(null!==e._obj[t])return t;return null}return null})},get expand(){return __get__(this,function(e,t){var r=NotImplementedError();throw r.__cause__=null,r})},get group(){return __get__(this,function(e){var t=tuple([].slice.apply(arguments).slice(1)),r=[];if(len(t)>0)for(var _ of t)if(py_typeof(_)===str){if(null===e._namedGroups)throw(n=NotImplementedError("No NamedGroups Available")).__cause__=null,n;if(!__in__(_,e._namedGroups.py_keys()))throw(n=ReIndexError()).__cause__=null,n;r.append(e._obj[e._namedGroups[_]])}else{var n;if(_>=len(e._obj))throw(n=ReIndexError()).__cause__=null,n;r.append(e._obj[_])}else r.append(e._obj[0]);return 1==len(r)?r[0]:tuple(r)})},get groups(){return __get__(this,function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(len(e._obj)>1){var r=e._obj.__getslice__(1,null,1);return tuple(function(){var e=[];for(var _ of r)e.append(null!==_?_:t);return e}())}return tuple()})},get groupdict(){return __get__(this,function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(null!==e._namedGroups){var r=dict({});for(var[_,n]of e._namedGroups.py_items()){var a=e._obj[n];r[_]=null!==a?a:t}return r}var i=NotImplementedError("No NamedGroups Available");throw i.__cause__=null,i})},get start(){return __get__(this,function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;var r=0;if(py_typeof(t)===str){if(null===e._namedGroups)throw(_=NotImplementedError("No NamedGroups Available")).__cause__=null,_;if(!__in__(t,e._namedGroups.py_keys()))throw(_=ReIndexError()).__cause__=null,_;r=e._namedGroups[t]}else r=t;if(r>=len(e._obj))throw(_=ReIndexError()).__cause__=null,_;if(0==r)return e._obj.index;if(null!==e._obj[r]){var _,n=compile(escape(e._obj[r]),e._re.flags).search(e._obj[0]);if(n)return e._obj.index+n.start();throw(_=Exception("Failed to find capture group")).__cause__=null,_}return-1})},get end(){return __get__(this,function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;var r=0;if(py_typeof(t)===str){if(null===e._namedGroups)throw(_=NotImplementedError("No NamedGroups Available")).__cause__=null,_;if(!__in__(t,e._namedGroups.py_keys()))throw(_=ReIndexError()).__cause__=null,_;r=e._namedGroups[t]}else r=t;if(r>=len(e._obj))throw(_=ReIndexError()).__cause__=null,_;if(0==r)return e._obj.index+len(e._obj[0]);if(null!==e._obj[r]){var _,n=compile(escape(e._obj[r]),e._re.flags).search(e._obj[0]);if(n)return e._obj.index+n.end();throw(_=Exception("Failed to find capture group")).__cause__=null,_}return-1})},get span(){return __get__(this,function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;return tuple([e.start(t),e.end(t)])})}});Object.defineProperty(Match,"pos",property.call(Match,Match._getPos,Match._setPos)),Object.defineProperty(Match,"endpos",property.call(Match,Match._getEndPos,Match._setEndPos)),Object.defineProperty(Match,"re",property.call(Match,Match._getRe,Match._setRe)),Object.defineProperty(Match,"string",property.call(Match,Match._getString,Match._setString)),Object.defineProperty(Match,"lastgroup",property.call(Match,Match._getLastGroup,Match._setLastGroup)),Object.defineProperty(Match,"lastindex",property.call(Match,Match._getLastIndex,Match._setLastIndex));var Regex=__class__("Regex",[object],{__module__:__name__$2,get __init__(){return __get__(this,function(e,t,r){(r&ASCII)>0||(r|=UNICODE),e._flags=r;var _=e._compileWrapper(t,r);e._jsFlags=_[0],e._obj=_[1],e._jspattern=t,e._pypattern=t;(_=e._compileWrapper(t+"|",r))[0];var n=_[1];e._groups=n.exec("").length-1,e._groupindex=null})},get _getPattern(){return __get__(this,function(e){return e._pypattern.py_replace("\\","\\\\")})},get _setPattern(){return __get__(this,function(e,t){var r=AttributeError("readonly attribute");throw r.__cause__=null,r})},get _getFlags(){return __get__(this,function(e){return e._flags})},get _setFlags(){return __get__(this,function(e,t){var r=AttributeError("readonly attribute");throw r.__cause__=null,r})},get _getGroups(){return __get__(this,function(e){return e._groups})},get _setGroups(){return __get__(this,function(e,t){var r=AttributeError("readonly attribute");throw r.__cause__=null,r})},get _getGroupIndex(){return __get__(this,function(e){return null===e._groupindex?dict({}):e._groupindex})},get _setGroupIndex(){return __get__(this,function(e,t){var r=AttributeError("readonly attribute");throw r.__cause__=null,r})},get _compileWrapper(){return __get__(this,function(e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;var _=e._convertFlags(r),n=null,a=null;try{n=new RegExp(t,_)}catch(e){a=e}if(null!==a){var i=error(a.message,a,t,r);throw i.__cause__=null,i}return tuple([_,n])})},get _convertFlags(){return __get__(this,function(e,t){var r=[tuple([DEBUG,""]),tuple([IGNORECASE,"i"]),tuple([MULTILINE,"m"]),tuple([STICKY,"y"]),tuple([GLOBAL,"g"]),tuple([UNICODE,"u"])];return"".join(function(){var e=[];for(var _ of r)(_[0]&t)>0&&e.append(_[1]);return e}())})},get _getTargetStr(){return __get__(this,function(e,t,r,_){var n=len(t);if(null!==_&&_<n)n=_;if(n<0)n=0;return t.__getslice__(r,n,1)})},get _patternHasCaptures(){return __get__(this,function(e){return e._groups>0})},get search(){return __get__(this,function(e,t,r,_){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=null;if(null===_)_=len(t);var n=e._obj.exec(t);return n?n.index<r||n.index>_?null:Match(n,t,r,_,e,e._groupindex):null})},get match(){return __get__(this,function(e,t,r,_){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=null;var n=t;if(null!==_)n=n.__getslice__(0,_,1);else _=len(t);var a=e._obj.exec(n);return a&&a.index==r?Match(a,t,r,_,e,e._groupindex):null})},get fullmatch(){return __get__(this,function(e,t,r,_){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=null;var n=t,a=len(t);if(null!==_)n=n.__getslice__(0,_,1),a=_;var i=e._obj.exec(n);if(i){var o=i.index+len(i[0]);return i.index==r&&o==a?Match(i,t,r,a,e,e._groupindex):null}return null})},get py_split(){return __get__(this,function(e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;if(r<0)return[t];var _=e._obj;if(0==r)return t.py_split(_);var n=e._flags;n|=GLOBAL;for(var a=e._compileWrapper(e._jspattern,n),i=(a[0],_=a[1],[]),o=null,s=0;s<r;s++){var l=_.exec(t);if(!l)break;if(null!==o){var c=o.index+len(o[0]),u=t.__getslice__(c,l.index,1);i.append(u),len(l)>1&&i.extend(l.__getslice__(1,null,1))}else{u=t.__getslice__(0,l.index,1);i.append(u),len(l)>1&&i.extend(l.__getslice__(1,null,1))}o=l}if(null!==o){var f=o.index+len(o[0]),p=t.__getslice__(f,null,1);i.append(p)}return i})},get _findAllMatches(){return __get__(this,function(e,t,r,_){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=null;var n=e._getTargetStr(t,r,_),a=e._flags;a|=GLOBAL;for(var i=e._compileWrapper(e._jspattern,a),o=(i[0],i[1]),s=[];;){var l=o.exec(n);if(!l)break;s.append(l)}return s})},get findall(){return __get__(this,function(e,t,r,_){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=null;var n=e._findAllMatches(t,r,_);return map(function(e){return len(e)>2?tuple(e.__getslice__(1,null,1)):2==len(e)?e[1]:e[0]},n)})},get finditer(){return __get__(this,function(e,t,r,_){if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=null;var n=e._findAllMatches(t,r,_);return py_iter(map(function(r){return Match(r,t,0,len(t),e,e._groupindex)},n))})},get sub(){return __get__(this,function(e,t,r,_){if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=0;var n=e.subn(t,r,_),a=n[0];n[1];return a})},get subn(){return __get__(this,function(e,t,r,_){if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=0;var n=e._flags;n|=GLOBAL;for(var a=e._compileWrapper(e._jspattern,n),i=(a[0],a[1]),o="",s=0,l=-1;;){if(_>0&&s>=_)return tuple(l<0?[o,s]:[o+=r.__getslice__(l,c.index,1),s]);var c=i.exec(r);if(!c)return tuple(l<0?[r,0]:[o+=r.__getslice__(l,null,1),s]);o+=l<0?r.__getslice__(0,c.index,1):r.__getslice__(l,c.index,1),callable(t)?o+=t(Match(c,r,0,len(r),e,e._groupindex)):o+=t,s+=1;l=c.index+len(c[0])}})}});Object.defineProperty(Regex,"pattern",property.call(Regex,Regex._getPattern,Regex._setPattern)),Object.defineProperty(Regex,"flags",property.call(Regex,Regex._getFlags,Regex._setFlags)),Object.defineProperty(Regex,"groups",property.call(Regex,Regex._getGroups,Regex._setGroups)),Object.defineProperty(Regex,"groupindex",property.call(Regex,Regex._getGroupIndex,Regex._setGroupIndex));var PyRegExp=__class__("PyRegExp",[Regex],{__module__:__name__$2,get __init__(){return __get__(this,function(e,t,r){var _=translate(t),n=_[0],a=_[1],i=_[2],o=_[3],s=_[4];r|=a;var l="".join(n);Regex.__init__(e,l,r),e._pypattern=t,e._nsplits=s,e._jsTokens=n,e._capgroups=o,e._groupindex=i})}}),compile=function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;if(t&JSSTRICT)var r=Regex(e,t);else r=PyRegExp(e,t);return r},search=function(e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;return compile(e,r).search(t)},match=function(e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;return compile(e,r).match(t)},fullmatch=function(e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;return compile(e,r).fullmatch(t)},py_split=function(e,t,r,_){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=0;return compile(e,_).py_split(t,r)},findall=function(e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;return compile(e,r).findall(t)},finditer=function(e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;return compile(e,r).finditer(t)},sub=function(e,t,r,_,n){if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=0;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=0;return compile(e,n).sub(t,r,_)},subn=function(e,t,r,_,n){if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=0;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=0;return compile(e,n).subn(t,r,_)},escape=function(e){var t;if(null!==(t=e.replace(/[^A-Za-z:;\d]/g,function(e){return"\\"==e[0]?"\\\\\\\\":"\\\\"+e[0]})))return t;var r=Exception("Failed to escape the passed string");throw r.__cause__=null,r},purge=function(){},modf=function(e){var t=e>=0?1:-1,r=divmod(abs(e),1),_=r[0];return tuple([r[1]*t,_*t])};try{var __language=window.navigator.language}catch(e){var __language="en-US"}for(var __debugGetLanguage=function(){return __language},__adapt__=function(e){__language=e.headers["accept-language"].py_split(",")[0]},__date=new Date(0),__now=new Date,__weekdays=[],__weekdays_long=[],__d=new Date(1467662339080),i=0;i<7;i++){for(var[l,s]of tuple([tuple([__weekdays,"short"]),tuple([__weekdays_long,"long"])]))l.append(__d.toLocaleString(__language,dict([["weekday",s]])).lower());__d.setDate(__d.getDate()+1)}for(var __months=[],__months_long=[],__d=new Date(9466812e5),i=0;i<12;i++){for(var[l,s]of tuple([tuple([__months,"short"]),tuple([__months_long,"long"])]))l.append(__d.toLocaleString(__language,dict([["month",s]])).lower());__d.setMonth(__d.getMonth()+1)}var __lu=dict([["Y",0],["m",1],["d",2],["H",3],["M",4],["S",5]]),_lsplit=function(e,t,r){if(0==r)return[e];var _=e.py_split(t);if(!r)return _;var n=_.slice(0,r,1);return len(n)==len(_)?n:(n.append(t.join(_.__getslice__(r,null,1))),n)},_local_time_tuple=function(e){return tuple([e.getFullYear(),e.getMonth()+1,e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getDay()>0?e.getDay()-1:6,_day_of_year(e,!0),_daylight_in_effect(e),e.getMilliseconds()])},_utc_time_tuple=function(e){return tuple([e.getUTCFullYear(),e.getUTCMonth()+1,e.getUTCDate(),e.getUTCHours(),e.getUTCMinutes(),e.getUTCSeconds(),e.getUTCDay()-1,_day_of_year(e,!1),0,e.getUTCMilliseconds()])},_day_of_year=function(e,t){var r=0;if(e.getHours()+60*e.getTimezoneOffset()/3600<0)r=-1;var _=e.getTime(),n=e.setHours(23);e.setUTCDate(1),e.setUTCMonth(0),e.setUTCHours(0),e.setUTCMinutes(0),e.setUTCSeconds(0);var a=round((n-e)/864e5);if(t||(a+=r),0==a){a=365;e.setTime(e.getTime()-86400);var i=e.getUTCFullYear();if(_is_leap(i))a=366}return e.setTime(_),a},_is_leap=function(e){return 0==__mod__(e,4)&&(0!=__mod__(e,100)||0==__mod__(e,400))},__jan_jun_tz=function(e,t){var r=e.getTime();e.setDate(1);var _=[];for(var n of tuple([0,6]))e.setMonth(n),t?_.append(t(e)):_.append(e.getTimezoneOffset());return e.setTime(r),_},_daylight=function(e){var t=__jan_jun_tz(e);return t[0]!=t[1]?1:0},_daylight_in_effect=function(e){var t=__jan_jun_tz(e);return min(t[0],t[1])==e.getTimezoneOffset()?1:0},_timezone=function(e){var t=__jan_jun_tz(e);return max(t[0],t[1])},__tzn=function(e){try{return str(e).py_split("(")[1].py_split(")")[0]}catch(e){return"n.a."}},_tzname=function(e){var t=__tzn(e),r=[t,t],_=__jan_jun_tz(e,__tzn),n=0;if(!_daylight_in_effect(e))n=1;for(var a of _)a!=t&&(r[n]=a);return tuple(r)},altzone=__now.getTimezoneOffset();if(!_daylight_in_effect(__now))var _jj=__jan_jun_tz(__now),altzone=altzone==_jj[1]?_jj[0]:_jj[1];var altzone=60*altzone,timezone=60*_timezone(__now),daylight=_daylight(__now),tzname=_tzname(__now),time=function(){return Date.now()/1e3},asctime=function(e){return strftime("%a %b %d %H:%M:%S %Y",e)},mktime=function(e){return(new Date(e[0],e[1]-1,e[2],e[3],e[4],e[5],0)-0)/1e3},ctime=function(e){if(!e)e=time();return asctime(localtime(e))},localtime=function(e){if(!e)e=time();return gmtime(e,!0)},gmtime=function(e,t){if(!e)e=time();var r=1e3*e;if(__date.setTime(r),t)var _=_local_time_tuple(__date);else _=_utc_time_tuple(__date);return _.__getslice__(0,9,1)},strptime=function(e,t){if(!t)t="%a %b %d %H:%M:%S %Y";for(var r=(c=tuple([e,t]))[0],_=c[1],n=function(e){var t=function(e){var t=[];if(!e)return tuple(["",""]);for(var r=0;r<len(e)-1;r++){var _=e[r];if("%"==_)break;t.append(_)}return tuple(["".join(t),e.__getslice__(r,null,1)])},r=(a=tuple([null,null,null]))[0],_=a[1],n=a[2];if(e)if("%"==e[0])r=e[1],_=(a=t(e.__getslice__(2,null,1)))[0],n=a[1];else{var a;_=(a=t(e))[0],n=a[1]}return tuple([r,_,n])},a=dict({});r;){var i=(c=n(_))[0],o=c[1];_=c[2];if(""==o){var s=null;if(i){var l=-1;if("Y"==i)l=4;else if("a"==i)l=len(__weekdays[0]);else if("A"==i)l=len(__weekdays_long[0]);else if("b"==i)l=len(__months[0]);else if(__in__(i,tuple(["d","m","H","M","S"])))l=2;if(l>-1)s=[r.__getslice__(0,l,1),r.__getslice__(l,null,1)]}if(!s)s=[r,""]}else s=_lsplit(r,o,1);if(null!=i){var c;r=(c=tuple([s[1],s[0]]))[0];if(a[i]=c[1],""==_)break}else var r=s[1]}var u=[1900,1,1,0,0,0,0,1,-1],f=[],p=!1;for(var[i,g]of a.py_items())if(!__in__(i,f)&&"p"!=i)if(__in__(i,__lu.py_keys()))u[__lu[i]]=int(g);else{if(__in__(i,tuple(["a","A","b","B"])))g=g.lower();if("m"==i&&(f.append("b"),f.append("B")),"a"==i){if(!__in__(g,__weekdays))throw(d=ValueError("Weekday unknown in your locale")).__cause__=null,d;p=!0;u[6]=__weekdays.index(g)}else if("A"==i){if(!__in__(g,__weekdays_long))throw(d=ValueError("Weekday unknown in your locale")).__cause__=null,d;p=!0;u[6]=__weekdays_long.index(g)}else if("b"==i){if(!__in__(g,__months))throw(d=ValueError("Month unknown in your locale")).__cause__=null,d;u[1]=__months.index(g)+1}else if("B"==i){if(!__in__(g,__months_long))throw(d=ValueError("Month unknown in your locale")).__cause__=null,d;u[1]=__months_long.index(g)+1}else if("I"==i){var h=(h=a.p||"am").lower();if(12==(g=int(g)))var g=0;else if(g>12){var d;throw(d=ValueError("time data '"+e+"' does not match format '"+t+"'")).__cause__=null,d}"pm"==h&&(g+=12),u[__lu.H]=g}else"y"==i?u[0]=2e3+int(g):"Z"==i&&__in__(g.lower(),["gmt","utc"])&&(u[-1]=0)}var m=new Date(0);return m.setUTCFullYear(u[0]),m.setUTCMonth(u[1]-1),m.setUTCDate(u[2]),m.setUTCHours(u[3]),u[7]=_day_of_year(m,!0),p||(u[6]=m.getUTCDay()-1),u},strftime=function(e,t){var r=function(e){return e<10?"0"+str(e):e};if(!t)t=localtime();var _=e;for(var n of __lu.py_keys()){var a="%"+n;if(__in__(a,_)){var i=r(t[__lu[n]]);_=_.py_replace(a,i)}}for(var[n,o,s]of tuple([tuple(["b",__months,1]),tuple(["B",__months_long,1]),tuple(["a",__weekdays,6]),tuple(["A",__weekdays_long,6])])){var l=t[s];if(1==s)l=l-1;i=o[l].capitalize(),_=_.py_replace("%"+n,i)}if(__in__("%p",_)){if(t[3]>11)var c="PM";else c="AM";_=_.py_replace("%p",c)}if(__in__("%y",_))_=_.py_replace("%y",str(t[0]).__getslice__(-2,null,1));if(__in__("%I",_)){if(0==(i=t[3]))i=12;else if(i>12)i=i-12;_=_.py_replace("%I",r(i))}return _},_time=Object.freeze({__proto__:null,__debugGetLanguage:__debugGetLanguage,__adapt__:__adapt__,__date:__date,__now:__now,__weekdays:__weekdays,__weekdays_long:__weekdays_long,get __d(){return __d},__months:__months,__months_long:__months_long,__lu:__lu,_lsplit:_lsplit,_local_time_tuple:_local_time_tuple,_utc_time_tuple:_utc_time_tuple,_day_of_year:_day_of_year,_is_leap:_is_leap,__jan_jun_tz:__jan_jun_tz,_daylight:_daylight,_daylight_in_effect:_daylight_in_effect,_timezone:_timezone,__tzn:__tzn,_tzname:_tzname,get altzone(){return altzone},timezone:timezone,daylight:daylight,tzname:tzname,time:time,asctime:asctime,mktime:mktime,ctime:ctime,localtime:localtime,gmtime:gmtime,strptime:strptime,strftime:strftime}),__name__$3="datetime",zfill=function(e,t){return len(e=str(e))<t?__add__(__mul__("0",__sub__(t,__call__(len,null,e))),e):e},rjust=function(e,t){return len(e=str(e))<t?__add__(__mul__(" ",__sub__(t,__call__(len,null,e))),e):e},_cmp=function(e,t){return e==t?0:e>t?1:-1},MINYEAR=1,MAXYEAR=9999,_MAXORDINAL=3652059,_DAYS_IN_MONTH=[-1,31,28,31,30,31,30,31,31,30,31,30,31],_DAYS_BEFORE_MONTH=[-1],dbm=0;for(var dim of _DAYS_IN_MONTH.__getslice__(1,null,1))_DAYS_BEFORE_MONTH.append(dbm),dbm+=dim;var _is_leap$1=function(e){return 0==__mod__(e,4)&&(0!=__mod__(e,100)||0==__mod__(e,400))},_days_before_year=function(e){var t=e-1;return 365*t+Math.floor(t/4)-Math.floor(t/100)+Math.floor(t/400)},_days_in_month=function(e,t){return 2==t&&_is_leap$1(e)?29:_DAYS_IN_MONTH[t]},_days_before_month=function(e,t){return _DAYS_BEFORE_MONTH[t]+(t>2&&_is_leap$1(e))},_ymd2ord=function(e,t,r){_days_in_month(e,t);return _days_before_year(e)+_days_before_month(e,t)+r},_DI400Y=_days_before_year(401),_DI100Y=_days_before_year(101),_DI4Y=_days_before_year(5),_ord2ymd=function(e){var t,r=(t=divmod(e-=1,_DI400Y))[0],_=(e=t[1],400*r+1),n=(t=divmod(e,_DI100Y))[0],a=(e=t[1],(t=divmod(e,_DI4Y))[0]),i=(e=t[1],(t=divmod(e,365))[0]);e=t[1];if(_+=100*n+4*a+i,4==i||4==n)return tuple([_-1,12,31]);var o=3==i&&(24!=a||3==n),s=e+50>>5,l=_DAYS_BEFORE_MONTH[s]+(s>2&&o);return l>e&&(l-=_DAYS_IN_MONTH[s-=1]+(2==s&&o)),tuple([_,s,(e-=l)+1])},_MONTHNAMES=[null,"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],_DAYNAMES=[null,"Mon","Tue","Wed","Thu","Fri","Sat","Sun"],_build_struct_time=function(e,t,r,_,n,a,i){return tuple([e,t,r,_,n,a,__mod__(_ymd2ord(e,t,r)+6,7),_days_before_month(e,t)+r,i])},_format_time=function(e,t,r,_){var n="{}:{}:{}".format(zfill(e,2),zfill(t,2),zfill(r,2));return _&&(n+=".{}".format(zfill(_,6))),n},_wrap_strftime=function(e,t,r){for(var _=null,n=null,a=null,i=[],o=(f=tuple([0,len(t)]))[0],s=f[1];o<s;){var l=t[o];if(o+=1,"%"==l)if(o<s){l=t[o];if(o+=1,"f"==l){if(null===_)_="{}".format(zfill(getattr(e,"microsecond"),6));i.append(_)}else if("z"==l){if(null===n){n="";if(hasattr(e,"utcoffset"))if(null!==(u=e.utcoffset())){var c="+";if(u.days<0){var u=-u;c="-"}var f,p=(f=divmod(u,timedelta(__kwargtrans__({hours:1}))))[0],g=f[1];g=Math.floor(g/timedelta(__kwargtrans__({minutes:1}))),n="{}{}{}".format(c,zfill(p,2),zfill(g,2))}}i.append(n)}else if("Z"==l){if(null===a){a="";if(hasattr(e,"tzname")){var h=e.tzname();if(null!==h)a=h.py_replace("%","%%")}}i.append(a)}else i.append("%"),i.append(l)}else i.append("%");else i.append(l)}i="".join(i);return strftime(i,r)},_check_tzname=function(e){if(null!==e&&!isinstance(e,str)){var t=py_TypeError("tzinfo.tzname() must return None or string, not '{}'".format(py_typeof(e)));throw t.__cause__=null,t}},_check_utc_offset=function(e,t){if(null!==t){var r,_;if(!isinstance(t,timedelta))throw(r=py_TypeError("tzinfo.{}() must return None or timedelta, not '{}'".format(e,py_typeof(t)))).__cause__=null,r;if(t.__mod__(timedelta(__kwargtrans__({minutes:1}))).microseconds||t.microseconds)throw(r=ValueError("tzinfo.{}() must return a whole number of minutes, got {}".format(e,t))).__cause__=null,r;if(!__lt__(__neg__(__call__(timedelta,null,1)),t)||!__lt__(t,__call__(timedelta,null,1)))throw(r=__call__(ValueError,null,__call__((_="{}()={}, must be must be strictly between -timedelta(hours=24) and timedelta(hours=24)").format,_,e,t))).__cause__=null,r}},_check_int_field=function(e){var t=py_typeof(e);if(t==int)return e;if(t!=float){try{e=e.__int__();try{if(py_typeof(e)==int)return e;throw(r=py_TypeError("__int__ returned non-int (type {})".format(py_typeof(e).__name__))).__cause__=null,r}catch(r){}}catch(r){if(!isinstance(r,AttributeError))throw r}var r;throw(r=py_TypeError("an integer is required (got type {})".format(py_typeof(e).__name__))).__cause__=null,r}throw(r=py_TypeError("integer argument expected, got float")).__cause__=null,r},_check_date_fields=function(e,t,r){e=_check_int_field(e),t=_check_int_field(t),r=_check_int_field(r);if(!(MINYEAR<=e&&e<=MAXYEAR))throw(_=ValueError("year must be in {}..{}".format(MINYEAR,MAXYEAR),e)).__cause__=null,_;if(!(1<=t&&t<=12))throw(_=ValueError("month must be in 1..12",t)).__cause__=null,_;var _,n=_days_in_month(e,t);if(!(1<=r&&r<=n))throw(_=ValueError("day must be in 1..{}".format(n),r)).__cause__=null,_;return tuple([e,t,r])},_check_time_fields=function(e,t,r,_){var n;e=_check_int_field(e),t=_check_int_field(t),r=_check_int_field(r),_=_check_int_field(_);if(!(0<=e&&e<=23))throw(n=ValueError("hour must be in 0..23",e)).__cause__=null,n;if(!(0<=t&&t<=59))throw(n=ValueError("minute must be in 0..59",t)).__cause__=null,n;if(!(0<=r&&r<=59))throw(n=ValueError("second must be in 0..59",r)).__cause__=null,n;if(!(0<=_&&_<=999999))throw(n=ValueError("microsecond must be in 0..999999",_)).__cause__=null,n;return tuple([e,t,r,_])},_check_tzinfo_arg=function(e){if(null!==e&&!isinstance(e,tzinfo)){var t=py_TypeError("tzinfo argument must be None or of a tzinfo subclass");throw t.__cause__=null,t}},_cmperror=function(e,t){var r=py_TypeError("can't compare '{}' to '{}'".format(py_typeof(e).__name__,py_typeof(t).__name__));throw r.__cause__=null,r},_divide_and_round=function(e,t){var r=divmod(e,t),_=r[0],n=r[1];return n*=2,((t>0?n>t:n<t)||n==t&&1==__mod__(_,2))&&(_+=1),_},timedelta=__class__("timedelta",[object],{__module__:__name__$3,get __init__(){return __get__(this,function(e,t,r,_,n,a,i,o){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=0;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=0;if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=0;if(void 0===i||null!=i&&i.hasOwnProperty("__kwargtrans__"))i=0;if(void 0===o||null!=o&&o.hasOwnProperty("__kwargtrans__"))o=0;if(arguments.length){var s=arguments.length-1;if(arguments[s]&&arguments[s].hasOwnProperty("__kwargtrans__")){var l=arguments[s--];for(var c in l)switch(c){case"self":e=l[c];break;case"days":t=l[c];break;case"seconds":r=l[c];break;case"microseconds":_=l[c];break;case"milliseconds":n=l[c];break;case"minutes":a=l[c];break;case"hours":i=l[c];break;case"weeks":o=l[c]}}}var u=m=0,f=m;if(r+=60*a+3600*i,_+=1e3*n,isinstance(t+=7*o,float)){var p=(m=modf(t))[0],t=m[1],g=(m=modf(86400*p))[0];f=int(m[1]),u=int(t)}else g=0,u=t;if(isinstance(r,float)){var h=(m=modf(r))[0],r=int(r=m[1]);h+=g}else h=g;u+=t=(m=divmod(r,86400))[0],f+=int(r=m[1]);var d=1e6*h;if(isinstance(_,float)){_=round(_+d),r=(m=divmod(_,1e6))[0],_=m[1];u+=t=(m=divmod(r,86400))[0],f+=r=m[1]}else{_=int(_),r=(m=divmod(_,1e6))[0],_=m[1];u+=t=(m=divmod(r,86400))[0],f+=r=m[1];_=round(_+d)}r=(m=divmod(_,1e6))[0];var m,v=m[1];t=(m=divmod(f+=r,86400))[0],f=m[1];if(abs(u+=t)>999999999){var y=OverflowError(__mod__("timedelta # of days is too large: %d",u));throw y.__cause__=null,y}e._days=u,e._seconds=f,e._microseconds=v})},get __repr__(){return __get__(this,function(e){return e._microseconds?"datetime.timedelta(days={}, seconds={}, microseconds={})".format(e._days,e._seconds,e._microseconds):e._seconds?"datetime.timedelta(days={}, seconds={})".format(e._days,e._seconds):"datetime.timedelta(days={})".format(e._days)})},get __str__(){return __get__(this,function(e){var t,r,_=(t=divmod(e._seconds,60))[0],n=t[1],a=(t=divmod(_,60))[0],i=(_=t[1],"{}:{}:{}".format(a,zfill(_,2),zfill(n,2)));if(e._days)i="{} day{}, ".format(tuple([r=e._days,1!=abs(r)?"s":""]))+i;if(e._microseconds)i=i+".{}".format(zfill(e._microseconds,6));return i})},get total_seconds(){return __get__(this,function(e){return((86400*e.days+e.seconds)*Math.pow(10,6)+e.microseconds)/Math.pow(10,6)})},get _get_days(){return __get__(this,function(e){return e._days})},get _get_seconds(){return __get__(this,function(e){return e._seconds})},get _get_microseconds(){return __get__(this,function(e){return e._microseconds})},get __add__(){return __get__(this,function(e,t){return isinstance(t,timedelta)?timedelta(e._days+t._days,e._seconds+t._seconds,e._microseconds+t._microseconds):NotImplemented})},get __radd__(){return __get__(this,function(e,t){return e.__add__(t)})},get __sub__(){return __get__(this,function(e,t){return isinstance(t,timedelta)?timedelta(e._days-t._days,e._seconds-t._seconds,e._microseconds-t._microseconds):NotImplemented})},get __rsub__(){return __get__(this,function(e,t){return isinstance(t,timedelta)?-e+t:NotImplemented})},get __neg__(){return __get__(this,function(e){return timedelta(-e._days,-e._seconds,-e._microseconds)})},get __pos__(){return __get__(this,function(e){return e})},get __abs__(){return __get__(this,function(e){return e._days<0?__neg__(e):e})},get __mul__(){return __get__(this,function(e,t){if(isinstance(t,int))return timedelta(e._days*t,e._seconds*t,e._microseconds*t);if(isinstance(t,float)){var r=e._to_microseconds(),_=t.as_integer_ratio(),n=_[0],a=_[1];return timedelta(0,0,_divide_and_round(r*n,a))}return NotImplemented})},get __rmul__(){return __get__(this,function(e,t){return e.__mul__(t)})},get _to_microseconds(){return __get__(this,function(e){return 1e6*(86400*e._days+e._seconds)+e._microseconds})},get __floordiv__(){return __get__(this,function(e,t){if(!isinstance(t,tuple([int,timedelta])))return NotImplemented;var r=e._to_microseconds();return isinstance(t,timedelta)?Math.floor(r/t._to_microseconds()):isinstance(t,int)?timedelta(0,0,Math.floor(r/t)):void 0})},get __truediv__(){return __get__(this,function(e,t){if(!isinstance(t,tuple([int,float,timedelta])))return NotImplemented;var r=e._to_microseconds();if(isinstance(t,timedelta))return r/t._to_microseconds();if(isinstance(t,int))return timedelta(0,0,_divide_and_round(r,t));if(isinstance(t,float)){var _=t.as_integer_ratio(),n=_[0],a=_[1];return timedelta(0,0,_divide_and_round(a*r,n))}})},get __mod__(){return __get__(this,function(e,t){if(isinstance(t,timedelta)){var r=__mod__(e._to_microseconds(),t._to_microseconds());return timedelta(0,0,r)}return NotImplemented})},get __divmod__(){return __get__(this,function(e,t){if(isinstance(t,timedelta)){var r=divmod(e._to_microseconds(),t._to_microseconds()),_=r[0],n=r[1];return tuple([_,timedelta(0,0,n)])}return NotImplemented})},get __eq__(){return __get__(this,function(e,t){return!!isinstance(t,timedelta)&&0==e._cmp(t)})},get __le__(){return __get__(this,function(e,t){if(isinstance(t,timedelta))return e._cmp(t)<=0;_cmperror(e,t)})},get __lt__(){return __get__(this,function(e,t){if(isinstance(t,timedelta))return e._cmp(t)<0;_cmperror(e,t)})},get __ge__(){return __get__(this,function(e,t){if(isinstance(t,timedelta))return e._cmp(t)>=0;_cmperror(e,t)})},get __gt__(){return __get__(this,function(e,t){if(isinstance(t,timedelta))return e._cmp(t)>0;_cmperror(e,t)})},get _cmp(){return __get__(this,function(e,t){return _cmp(e._to_microseconds(),t._to_microseconds())})},get __bool__(){return __get__(this,function(e){return 0!=e._days||0!=e._seconds||0!=e._microseconds})}});Object.defineProperty(timedelta,"microseconds",property.call(timedelta,timedelta._get_microseconds)),Object.defineProperty(timedelta,"seconds",property.call(timedelta,timedelta._get_seconds)),Object.defineProperty(timedelta,"days",property.call(timedelta,timedelta._get_days));var _td_min=timedelta(-999999999),_td_max=timedelta(__kwargtrans__({days:999999999,hours:23,minutes:59,seconds:59,microseconds:999999})),_td_resolution=timedelta(__kwargtrans__({microseconds:1}));Object.defineProperty(timedelta,"min",{get:function(){return _td_min}}),Object.defineProperty(timedelta,"max",{get:function(){return _td_max}}),Object.defineProperty(timedelta,"resolution",{get:function(){return _td_resolution}});var date=__class__("date",[object],{__module__:__name__$3,get __init__(){return __get__(this,function(e,t,r,_){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=null;if(arguments.length){var n=arguments.length-1;if(arguments[n]&&arguments[n].hasOwnProperty("__kwargtrans__")){var a=arguments[n--];for(var i in a)switch(i){case"self":e=a[i];break;case"year":t=a[i];break;case"month":r=a[i];break;case"day":_=a[i]}}}var o=_check_date_fields(t,r,_);t=o[0],r=o[1],_=o[2];e._year=t,e._month=r,e._day=_})},get fromtimestamp(){return __getcm__(this,function(e,t){var r=localtime(t),_=r[0],n=r[1],a=r[2];r[3],r[4],r[5],r[6],r[7],r[8];return e(_,n,a)})},get today(){return __getcm__(this,function(e){var t=time();return e.fromtimestamp(t)})},get fromordinal(){return __getcm__(this,function(e,t){var r=_ord2ymd(t);return e(r[0],r[1],r[2])})},get __repr__(){return __get__(this,function(e){return"datetime.date({}, {}, {})".format(e._year,e._month,e._day)})},get ctime(){return __get__(this,function(e){var t=__mod__(e.toordinal(),7)||7;return"{} {} {} 00:00:00 {}".format(_DAYNAMES[t],_MONTHNAMES[e._month],rjust(e._day,2),zfill(e._year,4))})},get strftime(){return __get__(this,function(e,t){return _wrap_strftime(e,t,e.timetuple())})},get __format__(){return __get__(this,function(e,t){if(!isinstance(t,str)){var r=py_TypeError("must be str, not {}".format(py_typeof(t).__name__));throw r.__cause__=null,r}return 0!=len(t)?e.strftime(t):str(e)})},get isoformat(){return __get__(this,function(e){return"{}-{}-{}".format(zfill(e._year,4),zfill(e._month,2),zfill(e._day,2))})},get __str__(){return __get__(this,function(e){return e.isoformat()})},get _get_year(){return __get__(this,function(e){return e._year})},get _get_month(){return __get__(this,function(e){return e._month})},get _get_day(){return __get__(this,function(e){return e._day})},get timetuple(){return __get__(this,function(e){return _build_struct_time(e._year,e._month,e._day,0,0,0,-1)})},get toordinal(){return __get__(this,function(e){return _ymd2ord(e._year,e._month,e._day)})},get py_replace(){return __get__(this,function(e,t,r,_){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=null;if(arguments.length){var n=arguments.length-1;if(arguments[n]&&arguments[n].hasOwnProperty("__kwargtrans__")){var a=arguments[n--];for(var i in a)switch(i){case"self":e=a[i];break;case"year":t=a[i];break;case"month":r=a[i];break;case"day":_=a[i]}}}if(null===t)t=e._year;if(null===r)r=e._month;if(null===_)_=e._day;return date(t,r,_)})},get __eq__(){return __get__(this,function(e,t){return isinstance(t,date)?0==e._cmp(t):NotImplemented})},get __le__(){return __get__(this,function(e,t){return isinstance(t,date)?e._cmp(t)<=0:NotImplemented})},get __lt__(){return __get__(this,function(e,t){return isinstance(t,date)?e._cmp(t)<0:NotImplemented})},get __ge__(){return __get__(this,function(e,t){return isinstance(t,date)?e._cmp(t)>=0:NotImplemented})},get __gt__(){return __get__(this,function(e,t){return isinstance(t,date)?e._cmp(t)>0:NotImplemented})},get _cmp(){return __get__(this,function(e,t){var r,_=(r=tuple([e._year,e._month,e._day]))[0],n=r[1],a=r[2],i=(r=tuple([t._year,t._month,t._day]))[0],o=r[1],s=r[2];return _cmp("{}{}{}".format(zfill(_,4),zfill(n,2),zfill(a,2)),"{}{}{}".format(zfill(i,4),zfill(o,2),zfill(s,2)))})},get __add__(){return __get__(this,function(e,t){if(isinstance(t,timedelta)){var r=e.toordinal()+t.days;if(0<r&&r<=_MAXORDINAL)return date.fromordinal(r);var _=OverflowError("result out of range");throw _.__cause__=null,_}return NotImplemented})},get __radd__(){return __get__(this,function(e,t){return e.__add__(t)})},get __sub__(){return __get__(this,function(e,t){if(isinstance(t,timedelta))return __add__(e,__call__(timedelta,null,__neg__(t.days)));if(isinstance(t,date)){var r=e.toordinal(),_=t.toordinal();return __call__(timedelta,null,__sub__(r,_))}return NotImplemented})},get weekday(){return __get__(this,function(e){return __mod__(e.toordinal()+6,7)})},get isoweekday(){return __get__(this,function(e){return __mod__(e.toordinal(),7)||7})},get isocalendar(){return __get__(this,function(e){var t=e._year,r=_isoweek1monday(t),_=_ymd2ord(e._year,e._month,e._day),n=(i=divmod(_-r,7))[0],a=i[1];if(n<0){var i;r=_isoweek1monday(t-=1),n=(i=divmod(_-r,7))[0],a=i[1]}else if(n>=52&&_>=_isoweek1monday(t+1)){t+=1;n=0}return tuple([t,n+1,a+1])})},resolution:timedelta(__kwargtrans__({days:1}))});Object.defineProperty(date,"day",property.call(date,date._get_day)),Object.defineProperty(date,"month",property.call(date,date._get_month)),Object.defineProperty(date,"year",property.call(date,date._get_year));var _date_class=date,_d_min=date(1,1,1),_d_max=date(9999,12,31);Object.defineProperty(date,"min",{get:function(){return _d_min}}),Object.defineProperty(date,"max",{get:function(){return _d_max}});var tzinfo=__class__("tzinfo",[object],{__module__:__name__$3,get tzname(){return __get__(this,function(e,t){var r=NotImplementedError("tzinfo subclass must override tzname()");throw r.__cause__=null,r})},get utcoffset(){return __get__(this,function(e,t){var r=NotImplementedError("tzinfo subclass must override utcoffset()");throw r.__cause__=null,r})},get dst(){return __get__(this,function(e,t){var r=NotImplementedError("tzinfo subclass must override dst()");throw r.__cause__=null,r})},get fromutc(){return __get__(this,function(e,t){if(!isinstance(t,datetime))throw(n=py_TypeError("fromutc() requires a datetime argument")).__cause__=null,n;if(t.tzinfo!==e)throw(n=ValueError("dt.tzinfo is not self")).__cause__=null,n;var r=t.utcoffset();if(null===r)throw(n=ValueError("fromutc() requires a non-None utcoffset() result")).__cause__=null,n;if(null===(_=t.dst()))throw(n=ValueError("fromutc() requires a non-None dst() result")).__cause__=null,n;var _,n,a=r-_;if(a&&null===(_=(t+=a).dst()))throw(n=ValueError("fromutc(): dt.dst gave inconsistent results; cannot convert")).__cause__=null,n;return t+_})}}),time$1=__class__("time",[object],{__module__:__name__$3,get __init__(){return __get__(this,function(e,t,r,_,n,a){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=0;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=0;if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=null;if(arguments.length){var i=arguments.length-1;if(arguments[i]&&arguments[i].hasOwnProperty("__kwargtrans__")){var o=arguments[i--];for(var s in o)switch(s){case"self":e=o[s];break;case"hour":t=o[s];break;case"minute":r=o[s];break;case"second":_=o[s];break;case"microsecond":n=o[s];break;case"tzinfo":a=o[s]}}}var l=_check_time_fields(t,r,_,n);t=l[0],r=l[1],_=l[2],n=l[3];_check_tzinfo_arg(a),e._hour=t,e._minute=r,e._second=_,e._microsecond=n,e._tzinfo=a})},get _get_hour(){return __get__(this,function(e){return e._hour})},get _get_minute(){return __get__(this,function(e){return e._minute})},get _get_second(){return __get__(this,function(e){return e._second})},get _get_microsecond(){return __get__(this,function(e){return e._microsecond})},get _get_tzinfo(){return __get__(this,function(e){return e._tzinfo})},get __eq__(){return __get__(this,function(e,t){return!!isinstance(t,time$1)&&0==e._cmp(t,__kwargtrans__({allow_mixed:!0}))})},get __le__(){return __get__(this,function(e,t){if(isinstance(t,time$1))return e._cmp(t)<=0;_cmperror(e,t)})},get __lt__(){return __get__(this,function(e,t){if(isinstance(t,time$1))return e._cmp(t)<0;_cmperror(e,t)})},get __ge__(){return __get__(this,function(e,t){if(isinstance(t,time$1))return e._cmp(t)>=0;_cmperror(e,t)})},get __gt__(){return __get__(this,function(e,t){if(isinstance(t,time$1))return e._cmp(t)>0;_cmperror(e,t)})},get _cmp(){return __get__(this,function(e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=!1;if(arguments.length){var _=arguments.length-1;if(arguments[_]&&arguments[_].hasOwnProperty("__kwargtrans__")){var n=arguments[_--];for(var a in n)switch(a){case"self":e=n[a];break;case"other":t=n[a];break;case"allow_mixed":r=n[a]}}}var i=null,o=null;if(e._tzinfo===t._tzinfo)var s=!0;else s=(i=e.utcoffset())==(o=t.utcoffset());if(s)return _cmp(tuple([e._hour,e._minute,e._second,e._microsecond]),tuple([t._hour,t._minute,t._second,t._microsecond]));if(null===i||null===o){if(r)return 2;var l=py_TypeError("cannot compare naive and aware times");throw l.__cause__=null,l}var c=__sub__(__add__(__mul__(e._hour,60),e._minute),__floordiv__(i,__call__(timedelta,null,__kwargtrans__({minutes:1})))),u=__sub__(__add__(__mul__(t._hour,60),t._minute),__floordiv__(o,__call__(timedelta,null,__kwargtrans__({minutes:1}))));return _cmp(tuple([c,e._second,e._microsecond]),tuple([u,t._second,t._microsecond]))})},get _tzstr(){return __get__(this,function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=":";if(null!==(_=e.utcoffset())){if(_.days<0)var r="-",_=-_;else r="+";var n=divmod(_,timedelta(__kwargtrans__({hours:1}))),a=n[0],i=n[1];i=Math.floor(i/timedelta(__kwargtrans__({minutes:1}))),_="{}{}{}{}".format(r,zfill(a,2),t,zfill(i,2))}return _})},get __repr__(){return __get__(this,function(e){if(0!=e._microsecond)var t=", {}, {}".format(e._second,e._microsecond);else if(0!=e._second)t=", {}".format(e._second);else t="";t="datetime.time({}, {}{})".format(e._hour,e._minute,t);if(null!==e._tzinfo)t=t.__getslice__(0,len(t)-1,1)+", tzinfo={}".format(e._tzinfo.__repr__())+")";return t})},get isoformat(){return __get__(this,function(e){var t=_format_time(e._hour,e._minute,e._second,e._microsecond),r=e._tzstr();return r&&(t+=r),t})},get __str__(){return __get__(this,function(e){return e.isoformat()})},get strftime(){return __get__(this,function(e,t){var r=tuple([1900,1,1,e._hour,e._minute,e._second,0,1,-1]);return _wrap_strftime(e,t,r)})},get __format__(){return __get__(this,function(e,t){if(!isinstance(t,str)){var r=py_TypeError(__mod__("must be str, not %s",py_typeof(t).__name__));throw r.__cause__=null,r}return 0!=len(t)?e.strftime(t):str(e)})},get utcoffset(){return __get__(this,function(e){if(null===e._tzinfo)return null;var t=e._tzinfo.utcoffset(null);return _check_utc_offset("utcoffset",t),t})},get tzname(){return __get__(this,function(e){if(null===e._tzinfo)return null;var t=e._tzinfo.tzname(null);return _check_tzname(t),t})},get dst(){return __get__(this,function(e){if(null===e._tzinfo)return null;var t=e._tzinfo.dst(null);return _check_utc_offset("dst",t),t})},get py_replace(){return __get__(this,function(e,t,r,_,n,a){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=null;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=null;if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=!0;if(arguments.length){var i=arguments.length-1;if(arguments[i]&&arguments[i].hasOwnProperty("__kwargtrans__")){var o=arguments[i--];for(var s in o)switch(s){case"self":e=o[s];break;case"hour":t=o[s];break;case"minute":r=o[s];break;case"second":_=o[s];break;case"microsecond":n=o[s];break;case"tzinfo":a=o[s]}}}if(null===t)t=e.hour;if(null===r)r=e.minute;if(null===_)_=e.second;if(null===n)n=e.microsecond;if(!0===a)a=e.tzinfo;return time$1(t,r,_,n,a)})},resolution:timedelta(__kwargtrans__({microseconds:1}))});Object.defineProperty(time$1,"tzinfo",property.call(time$1,time$1._get_tzinfo)),Object.defineProperty(time$1,"microsecond",property.call(time$1,time$1._get_microsecond)),Object.defineProperty(time$1,"second",property.call(time$1,time$1._get_second)),Object.defineProperty(time$1,"minute",property.call(time$1,time$1._get_minute)),Object.defineProperty(time$1,"hour",property.call(time$1,time$1._get_hour));var _time_class=time$1,_tm_min=time$1(0,0,0),_tm_max=time$1(23,59,59,999999);Object.defineProperty(time$1,"min",{get:function(){return _tm_min}}),Object.defineProperty(time$1,"max",{get:function(){return _tm_max}});var datetime=__class__("datetime",[date],{__module__:__name__$3,get __init__(){return __get__(this,function(e,t,r,_,n,a,i,o,s){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=null;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=0;if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=0;if(void 0===i||null!=i&&i.hasOwnProperty("__kwargtrans__"))i=0;if(void 0===o||null!=o&&o.hasOwnProperty("__kwargtrans__"))o=0;if(void 0===s||null!=s&&s.hasOwnProperty("__kwargtrans__"))s=null;if(arguments.length){var l=arguments.length-1;if(arguments[l]&&arguments[l].hasOwnProperty("__kwargtrans__")){var c=arguments[l--];for(var u in c)switch(u){case"self":e=c[u];break;case"year":t=c[u];break;case"month":r=c[u];break;case"day":_=c[u];break;case"hour":n=c[u];break;case"minute":a=c[u];break;case"second":i=c[u];break;case"microsecond":o=c[u];break;case"tzinfo":s=c[u]}}}var f;t=(f=_check_date_fields(t,r,_))[0],r=f[1],_=f[2],n=(f=_check_time_fields(n,a,i,o))[0],a=f[1],i=f[2],o=f[3];_check_tzinfo_arg(s),e._year=t,e._month=r,e._day=_,e._hour=n,e._minute=a,e._second=i,e._microsecond=o,e._tzinfo=s})},get _get_hour(){return __get__(this,function(e){return e._hour})},get _get_minute(){return __get__(this,function(e){return e._minute})},get _get_second(){return __get__(this,function(e){return e._second})},get _get_microsecond(){return __get__(this,function(e){return e._microsecond})},get _get_tzinfo(){return __get__(this,function(e){return e._tzinfo})},get _fromtimestamp(){return __getcm__(this,function(e,t,r,_){var n=(i=modf(t))[0],a=(t=i[1],round(1e6*n));a>=1e6?(t+=1,a-=1e6):a<0&&(t-=1,a+=1e6);var i,o=(i=(r?gmtime:localtime)(t))[0],s=i[1],l=i[2],c=i[3],u=i[4],f=i[5];i[6],i[7],i[8];return e(o,s,l,c,u,f=min(f,59),a,_)})},get fromtimestamp(){return __getcm__(this,function(e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;_check_tzinfo_arg(r);var _=e._fromtimestamp(t,null!==r,r);if(null!==r)_=r.fromutc(_);return _})},get utcfromtimestamp(){return __getcm__(this,function(e,t){return e._fromtimestamp(t,!0,null)})},get now(){return __getcm__(this,function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;var r=time();return e.fromtimestamp(r,t)})},get utcnow(){return __getcm__(this,function(e){var t=time();return e.utcfromtimestamp(t)})},get combine(){return __getcm__(this,function(e,t,r){var _;if(!isinstance(t,_date_class))throw(_=py_TypeError("date argument must be a date instance")).__cause__=null,_;if(!isinstance(r,_time_class))throw(_=py_TypeError("time argument must be a time instance")).__cause__=null,_;return e(t.year,t.month,t.day,r.hour,r.minute,r.second,r.microsecond,r.tzinfo)})},get timetuple(){return __get__(this,function(e){if(null===(t=e.dst()))var t=-1;else if(t)t=1;else t=0;return _build_struct_time(e.year,e.month,e.day,e.hour,e.minute,e.second,t)})},get timestamp(){return __get__(this,function(e){return null===e._tzinfo?mktime(tuple([e.year,e.month,e.day,e.hour,e.minute,e.second,-1,-1,-1]))+e.microsecond/1e6:__call__((t=__sub__(e,_EPOCH)).total_seconds,t);var t})},get utctimetuple(){return __get__(this,function(e){var t=e.utcoffset();if(t)e=__call__(__isub__,null,e,t);var r,_=(r=tuple([e.year,e.month,e.day]))[0],n=r[1],a=r[2],i=(r=tuple([e.hour,e.minute,e.second]))[0],o=r[1],s=r[2];return _build_struct_time(_,n,a,i,o,s,0)})},get date(){return __get__(this,function(e){return date(e._year,e._month,e._day)})},get time(){return __get__(this,function(e){return time$1(e.hour,e.minute,e.second,e.microsecond)})},get timetz(){return __get__(this,function(e){return time$1(e.hour,e.minute,e.second,e.microsecond,e._tzinfo)})},get py_replace(){return __get__(this,function(e,t,r,_,n,a,i,o,s){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;if(void 0===_||null!=_&&_.hasOwnProperty("__kwargtrans__"))_=null;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=null;if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=null;if(void 0===i||null!=i&&i.hasOwnProperty("__kwargtrans__"))i=null;if(void 0===o||null!=o&&o.hasOwnProperty("__kwargtrans__"))o=null;if(void 0===s||null!=s&&s.hasOwnProperty("__kwargtrans__"))s=!0;if(arguments.length){var l=arguments.length-1;if(arguments[l]&&arguments[l].hasOwnProperty("__kwargtrans__")){var c=arguments[l--];for(var u in c)switch(u){case"self":e=c[u];break;case"year":t=c[u];break;case"month":r=c[u];break;case"day":_=c[u];break;case"hour":n=c[u];break;case"minute":a=c[u];break;case"second":i=c[u];break;case"microsecond":o=c[u];break;case"tzinfo":s=c[u]}}}if(null===t)t=e.year;if(null===r)r=e.month;if(null===_)_=e.day;if(null===n)n=e.hour;if(null===a)a=e.minute;if(null===i)i=e.second;if(null===o)o=e.microsecond;if(!0===s)s=e.tzinfo;return datetime(t,r,_,n,a,i,o,s)})},get astimezone(){return __get__(this,function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"tz":t=_[n]}}}if(null===t){if(null===e.tzinfo)throw(g=ValueError("astimezone() requires an aware datetime")).__cause__=null,g;var a=__floordiv__(__sub__(e,_EPOCH),__call__(timedelta,null,__kwargtrans__({seconds:1}))),i=localtime(a),o=datetime(...i.__getslice__(0,6,1));if(len(i)>9){var s=i[10],l=i[9];t=timezone$1(timedelta(__kwargtrans__({seconds:s})),l)}else{var c=__sub__(o,__call__(datetime,null,...__getslice__((f=_time,__call__(f.gmtime,f,a)),0,6,1))),u=daylight&&__gt__(__getitem__(i,8),0);s=__neg__(u?altzone:timezone);if(__eq__(c,__call__(timedelta,null,__kwargtrans__({seconds:s}))))t=__call__(timezone$1,null,c,__getitem__(tzname,u));else t=__call__(timezone$1,null,c)}}else if(!isinstance(t,tzinfo)){throw(g=py_TypeError("tz argument must be an instance of tzinfo")).__cause__=null,g}var f,p=e.tzinfo;if(null===p)throw(g=ValueError("astimezone() requires an aware datetime")).__cause__=null,g;if(t===p)return e;var g,h=e.utcoffset();if(null===h)throw(g=ValueError("astimezone() requires an aware datetime")).__cause__=null,g;var d=function(){var r=__sub__(e,h);return __call__(r.py_replace,r,__kwargtrans__({tzinfo:t}))}();return t.fromutc(d)})},get ctime(){return __get__(this,function(e){var t=__mod__(e.toordinal(),7)||7;return"{} {} {} {}:{}:{} {}".format(_DAYNAMES[t],_MONTHNAMES[e._month],zfill(e._day,2),zfill(e._hour,2),zfill(e._minute,2),zfill(e._second,2),zfill(e._year,4))})},get isoformat(){return __get__(this,function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t="T";var r="{}-{}-{}{}".format(zfill(e._year,4),zfill(e._month,2),zfill(e._day,2),t)+_format_time(e._hour,e._minute,e._second,e._microsecond);if(null!==(n=e.utcoffset())){if(n.days<0)var _="-",n=-n;else _="+";var a=divmod(n,timedelta(__kwargtrans__({hours:1}))),i=a[0],o=a[1];o=Math.floor(o/timedelta(__kwargtrans__({minutes:1})));r+="{}{}:{}".format(_,zfill(i,2),zfill(o,2))}return r})},get __repr__(){return __get__(this,function(e){var t=[e._year,e._month,e._day,e._hour,e._minute,e._second,e._microsecond];0==t[len(t)-1]&&t.py_pop(),0==t[len(t)-1]&&t.py_pop();var r="datetime.datetime({})".format(", ".join(map(str,t)));if(null!==e._tzinfo)r=r.__getslice__(0,len(r)-1,1)+", tzinfo={}".format(e._tzinfo.__repr__())+")";return r})},get __str__(){return __get__(this,function(e){return e.isoformat(__kwargtrans__({sep:" "}))})},get strptime(){return __getcm__(this,function(e,t,r){return e(...strptime(t,r).__getslice__(0,6,1))})},get utcoffset(){return __get__(this,function(e){if(null===e._tzinfo)return null;var t=e._tzinfo.utcoffset(e);return _check_utc_offset("utcoffset",t),t})},get tzname(){return __get__(this,function(e){if(null===e._tzinfo)return null;var t=e._tzinfo.tzname(e);return _check_tzname(t),t})},get dst(){return __get__(this,function(e){if(null===e._tzinfo)return null;var t=e._tzinfo.dst(e);return _check_utc_offset("dst",t),t})},get __eq__(){return __get__(this,function(e,t){return isinstance(t,datetime)?0==e._cmp(t,__kwargtrans__({allow_mixed:!0})):!isinstance(t,date)&&NotImplemented})},get __le__(){return __get__(this,function(e,t){return isinstance(t,datetime)?e._cmp(t)<=0:isinstance(t,date)?void _cmperror(e,t):NotImplemented})},get __lt__(){return __get__(this,function(e,t){return isinstance(t,datetime)?e._cmp(t)<0:isinstance(t,date)?void _cmperror(e,t):NotImplemented})},get __ge__(){return __get__(this,function(e,t){return isinstance(t,datetime)?e._cmp(t)>=0:isinstance(t,date)?void _cmperror(e,t):NotImplemented})},get __gt__(){return __get__(this,function(e,t){return isinstance(t,datetime)?e._cmp(t)>0:isinstance(t,date)?void _cmperror(e,t):NotImplemented})},get _cmp(){return __get__(this,function(e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=!1;var _=null,n=null;if(e._tzinfo===t._tzinfo)var a=!0;else a=(_=e.utcoffset())==(n=t.utcoffset());if(a){var i="{}{}{}{}{}{}{}".format(zfill(e._year,4),zfill(e._month,2),zfill(e._day,2),zfill(e._hour,2),zfill(e._minute,2),zfill(e._second,2),zfill(e._microsecond,6)),o="{}{}{}{}{}{}{}".format(zfill(t._year,4),zfill(t._month,2),zfill(t._day,2),zfill(t._hour,2),zfill(t._minute,2),zfill(t._second,2),zfill(t._microsecond,6));return _cmp(i,o)}if(null===_||null===n){if(r)return 2;var s=py_TypeError("cannot compare naive and aware datetimes");throw s.__cause__=null,s}var l=__sub__(e,t);return l.days<0?-1:l?1:0})},get __add__(){return __get__(this,function(e,t){if(!isinstance(t,timedelta))return NotImplemented;var r,_=__call__(__iadd__,null,_=timedelta(e.toordinal(),__kwargtrans__({hours:e._hour,minutes:e._minute,seconds:e._second,microseconds:e._microsecond})),t),n=(r=divmod(_.seconds,3600))[0],a=r[1],i=(r=divmod(a,60))[0],o=r[1];if(0<_.days&&_.days<=_MAXORDINAL)return datetime.combine(date.fromordinal(_.days),time$1(n,i,o,_.microseconds,__kwargtrans__({tzinfo:e._tzinfo})));var s=OverflowError("result out of range");throw s.__cause__=null,s})},get __radd__(){return __get__(this,function(e,t){return e.__add__(t)})},get __sub__(){return __get__(this,function(e,t){if(!isinstance(t,datetime))return isinstance(t,timedelta)?__add__(e,__neg__(t)):NotImplemented;var r=e.toordinal(),_=t.toordinal(),n=e._second+60*e._minute+3600*e._hour,a=t._second+60*t._minute+3600*t._hour,i=timedelta(r-_,n-a,e._microsecond-t._microsecond);if(e._tzinfo===t._tzinfo)return i;var o=e.utcoffset(),s=t.utcoffset();if(o==s)return i;if(null===o||null===s){var l=py_TypeError("cannot mix naive and timezone-aware time");throw l.__cause__=null,l}return __sub__(__add__(i,s),o)})},resolution:timedelta(__kwargtrans__({microseconds:1}))});Object.defineProperty(datetime,"tzinfo",property.call(datetime,datetime._get_tzinfo)),Object.defineProperty(datetime,"microsecond",property.call(datetime,datetime._get_microsecond)),Object.defineProperty(datetime,"second",property.call(datetime,datetime._get_second)),Object.defineProperty(datetime,"minute",property.call(datetime,datetime._get_minute)),Object.defineProperty(datetime,"hour",property.call(datetime,datetime._get_hour));var _dt_min=datetime(1,1,1),_dt_max=datetime(9999,12,31,23,59,59,999999);Object.defineProperty(datetime,"min",{get:function(){return _dt_min}}),Object.defineProperty(datetime,"max",{get:function(){return _dt_max}});var _isoweek1monday=function(e){var t=_ymd2ord(e,1,1),r=__mod__(t+6,7),_=t-r;return r>3&&(_+=7),_},_Omitted="@#$^&$^",timezone$1=__class__("timezone",[tzinfo],{__module__:__name__$3,get __init__(){return __get__(this,function(e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=_Omitted;if(arguments.length){var _=arguments.length-1;if(arguments[_]&&arguments[_].hasOwnProperty("__kwargtrans__")){var n=arguments[_--];for(var a in n)switch(a){case"self":e=n[a];break;case"offset":t=n[a];break;case"py_name":r=n[a]}}}if(!isinstance(t,timedelta))throw(i=py_TypeError("offset must be a timedelta")).__cause__=null,i;if(r===_Omitted){if(!t)t=e.utc;r=null}else if(!isinstance(r,str)){var i;throw(i=py_TypeError("name must be a string")).__cause__=null,i}if(!__le__(e._minoffset,t)||!__le__(t,e._maxoffset))throw(i=__call__(ValueError,null,"offset must be a timedelta strictly between -timedelta(hours=24) and timedelta(hours=24).")).__cause__=null,i;if(0!=t.microseconds||0!=__mod__(t.seconds,60))throw(i=ValueError("offset must be a timedelta representing a whole number of minutes")).__cause__=null,i;e._offset=t,e._name=r})},get _create(){return __getcm__(this,function(e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=_Omitted;if(arguments.length){var _=arguments.length-1;if(arguments[_]&&arguments[_].hasOwnProperty("__kwargtrans__")){var n=arguments[_--];for(var a in n)switch(a){case"cls":e=n[a];break;case"offset":t=n[a];break;case"py_name":r=n[a]}}}return e(t,r)})},get __eq__(){return __get__(this,function(e,t){return py_typeof(t)==timezone$1&&e._offset==t._offset})},get __repr__(){return __get__(this,function(e){return e===e.utc?"datetime.timezone.utc":null===e._name?"datetime.timezone({})".format(e._offset.__repr__()):"datetime.timezone({}, {})".format(e._offset.__repr__(),e._name.__repr__())})},get __str__(){return __get__(this,function(e){return e.tzname(null)})},get utcoffset(){return __get__(this,function(e,t){if(isinstance(t,datetime)||null===t)return e._offset;var r=py_TypeError("utcoffset() argument must be a datetime instance or None");throw r.__cause__=null,r})},get tzname(){return __get__(this,function(e,t){if(isinstance(t,datetime)||null===t)return null===e._name?e._name_from_offset(e._offset):e._name;var r=py_TypeError("tzname() argument must be a datetime instance or None");throw r.__cause__=null,r})},get dst(){return __get__(this,function(e,t){if(isinstance(t,datetime)||null===t)return null;var r=py_TypeError("dst() argument must be a datetime instance or None");throw r.__cause__=null,r})},get fromutc(){return __get__(this,function(e,t){if(isinstance(t,datetime)){if(t.tzinfo!==e)throw(r=ValueError("fromutc: dt.tzinfo is not self")).__cause__=null,r;return __add__(t,e._offset)}var r;throw(r=py_TypeError("fromutc() argument must be a datetime instance or None")).__cause__=null,r})},_maxoffset:timedelta(__kwargtrans__({hours:23,minutes:59})),_minoffset:__neg__(__call__(timedelta,null,__kwargtrans__({hours:23,minutes:59}))),get _name_from_offset(){return function(e){if(__lt__(e,__call__(timedelta,null,0))){var t="-";e=__neg__(e)}else t="+";var r=__call__(divmod,null,e,__call__(timedelta,null,__kwargtrans__({hours:1}))),_=r[0],n=__floordiv__(r[1],__call__(timedelta,null,__kwargtrans__({minutes:1})));return"UTC{}{}:{}".format(t,zfill(_,2),zfill(n,2))}}}),_tz_utc=timezone$1._create(timedelta(0)),_tz_min=timezone$1._create(timezone$1._minoffset),_tz_max=timezone$1._create(timezone$1._maxoffset);Object.defineProperty(timezone$1,"utc",{get:function(){return _tz_utc}}),Object.defineProperty(timezone$1,"min",{get:function(){return _tz_min}}),Object.defineProperty(timezone$1,"max",{get:function(){return _tz_max}});var _EPOCH=datetime(1970,1,1,__kwargtrans__({tzinfo:timezone$1.utc})),field=function(e,t,r){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=null;if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=!0;return t?t():e},re$1={};__nest__(re$1,"",__module_re__);var __name__$4="electionguard.serializable",JSON_PARSE_ERROR='{"error": "Object could not be parsed due to json issue"}',KEYS_TO_REMOVE=["from_json","from_json_file","from_json_object"],Serializable=__class__("Serializable",[object],{__module__:__name__$4,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){let t=e.__reprfields__.values(),r=[];for(let _ of t)r.push(_+"="+repr(e[_]));return e.__name__+"("+", ".join(r)+")"})},get __eq__(){return __get__(this,function(e,t){let r=e.__comparefields__.values(),_=[],n=[];for(let a of r)_.push(e[a]),n.push(t[a]);return list(_).__eq__(list(n))})},get __ne__(){return __get__(this,function(e,t){let r=e.__comparefields__.values(),_=[],n=[];for(let a of r)_.push(e[a]),n.push(t[a]);return list(_).__ne__(list(n))})},get __lt__(){return __get__(this,function(e,t){let r=e.__comparefields__.values(),_=[],n=[];for(let a of r)_.push(e[a]),n.push(t[a]);return list(_).__lt__(list(n))})},get __le__(){return __get__(this,function(e,t){let r=e.__comparefields__.values(),_=[],n=[];for(let a of r)_.push(e[a]),n.push(t[a]);return list(_).__le__(list(n))})},get __gt__(){return __get__(this,function(e,t){let r=e.__comparefields__.values(),_=[],n=[];for(let a of r)_.push(e[a]),n.push(t[a]);return list(_).__gt__(list(n))})},get __ge__(){return __get__(this,function(e,t){let r=e.__comparefields__.values(),_=[],n=[];for(let a of r)_.push(e[a]),n.push(t[a]);return list(_).__ge__(list(n))})},get to_json(){return __get__(this,function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=!0;return write_json(e,t)})},get to_json_object(){return __get__(this,function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=!0;return write_json_object(e,t)})},get from_json(){return __getcm__(this,function(e,t){return read_json(t,e)})},get from_json_object(){return __getcm__(this,function(e,t){return read_json_object(t,e)})}});for(let e of Serializable.__bases__)__mergefields__(Serializable,e);__mergefields__(Serializable,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var write_json=function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=!0;return dump_json(e,t)},write_json_object=function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=!0;return dump_json_object(e,t)},read_json=function(e,t){return parse_json(e,t)},read_json_object=function(e,t){return parse_json_object(e,t)},__module_electionguard_serializable__=Object.freeze({__proto__:null,JSON_PARSE_ERROR:JSON_PARSE_ERROR,KEYS_TO_REMOVE:KEYS_TO_REMOVE,Serializable:Serializable,write_json:write_json,write_json_object:write_json_object,read_json:read_json,read_json_object:read_json_object}),__name__$5="electionguard.group",mpz=bigInt,Q=mpz(2).pow(256).minus(189),P=mpz("1044388881413152506691752710716624382579964249047383780384233483283953907971553643537729993126875883902173634017777416360502926082946377942955704498542097614841825246773580689398386320439747911160897731551074903967243883427132918813748016269754522343505285898816777211761912392772914485521155521641049273446207578961939840619466145806859275053476560973295158703823395710210329314709715239251736552384080845836048778667318931418338422443891025911884723433084701207771901944593286624979917391350564662632723703007964229849154756196890615252286533089643184902706926081744149289517418249153634178342075381874131646013444796894582106870531535803666254579602632453103741452569793905551901541856173251385047414840392753585581909950158046256810542678368121278509960520957624737942914600310646609792665012858397381435755902851312071248102599442308951327039250818892493767423329663783709190716162023529669217300939783171415808233146823000766917789286154006042281423733706462905243774854543127239500245873582012663666430583862778167369547603016344242729592244544608279405999759391099775667746401633668308698186721172238255007962658564443858927634850415775348839052026675785694826386930175303143450046575460843879941791946313299322976993405829119"),R=P.minus(1).multiply(Q.modInv(P)).mod(P),G$1=mpz("14245109091294741386751154342323521003543059865261911603340669522218159898070093327838595045175067897363301047764229640327930333001123401070596314469603183633790452807428416775717923182949583875381833912370889874572112086966300498607364501764494811956017881198827400327403252039184448888877644781610594801053753235453382508543906993571248387749420874609737451803650021788641249940534081464232937193671929586747339353451021712752406225276255010281004857233043241332527821911604413582442915993833774890228705495787357234006932755876972632840760599399514028393542345035433135159511099877773857622699742816228063106927776147867040336649025152771036361273329385354927395836330206311072577683892664475070720408447257635606891920123791602538518516524873664205034698194561673019535564273204744076336022130453963648114321050173994259620611015189498335966173440411967562175734606706258335095991140827763942280037063180207172918769921712003400007923888084296685269233298371143630883011213745082207405479978418089917768242592557172834921185990876960527013386693909961093302289646193295725135238595082039133488721800071459503353417574248679728577942863659802016004283193163470835709405666994892499382890912238098413819320185166580019604608311466"),ElementModQ=__class__("ElementModQ",[object],{__module__:__name__$5,get __init__(){return __get__(this,function(e,t){e.elem=t})},get to_hex(){return __get__(this,function(e){if(__mod__(len(t=e.elem.toString(16)),2))var t="0"+t;return t})},get to_int(){return __get__(this,function(e){return e.elem})},get is_in_bounds(){return __get__(this,function(e){return 0<=e.elem&&e.elem<Q})},get is_in_bounds_no_zero(){return __get__(this,function(e){return 0<e.elem&&e.elem<Q})},get __ne__(){return __get__(this,function(e,t){return(isinstance(t,ElementModP)||isinstance(t,ElementModQ))&&!eq_elems(e,t)})},get __eq__(){return __get__(this,function(e,t){return(isinstance(t,ElementModP)||isinstance(t,ElementModQ))&&eq_elems(e,t)})},get __str__(){return __get__(this,function(e){return e.elem.toString()})},get toString(){return __get__(this,function(e){return str(e)})}}),ElementModP=__class__("ElementModP",[object],{__module__:__name__$5,get __init__(){return __get__(this,function(e,t){e.elem=t})},get to_hex(){return __get__(this,function(e){if(__mod__(len(t=e.elem.toString(16)),2))var t="0"+t;return t})},get to_int(){return __get__(this,function(e){return e.elem})},get is_in_bounds(){return __get__(this,function(e){return 0<=e.elem&&e.elem<P})},get is_in_bounds_no_zero(){return __get__(this,function(e){return 0<e.elem&&e.elem<P})},get is_valid_residue(){return __get__(this,function(e){var t=pow_p(e,ElementModQ(mpz(Q)))==ONE_MOD_P;return e.is_in_bounds()&&t})},get __ne__(){return __get__(this,function(e,t){return(isinstance(t,ElementModP)||isinstance(t,ElementModQ))&&!eq_elems(e,t)})},get __eq__(){return __get__(this,function(e,t){return(isinstance(t,ElementModP)||isinstance(t,ElementModQ))&&eq_elems(e,t)})},get __str__(){return __get__(this,function(e){return e.elem.toString()})},get toString(){return __get__(this,function(e){return str(e)})}}),ZERO_MOD_Q=ElementModQ(mpz(0)),ONE_MOD_Q=ElementModQ(mpz(1)),TWO_MOD_Q=ElementModQ(mpz(2)),ZERO_MOD_P=ElementModP(mpz(0)),ONE_MOD_P=ElementModP(mpz(1)),TWO_MOD_P=ElementModP(mpz(2)),int_to_q=function(e){var t=int(e);return 0<=t&&t<Q?ElementModQ(mpz(t)):null},int_to_q_unchecked=function(e){var t=mpz(int(e));return ElementModQ(t)},int_to_p_unchecked=function(e){var t=mpz(int(e));return ElementModP(t)},add_q=function(){var e=tuple([].slice.apply(arguments).slice(0)),t=mpz(0);for(var r of e){if(isinstance(r,int))r=int_to_q_unchecked(r);t=t.add(r.elem).mod(Q)}return ElementModQ(t)},a_minus_b_q=function(e,t){if(isinstance(e,int))e=int_to_q_unchecked(e);if(isinstance(t,int))t=int_to_q_unchecked(t);return ElementModQ(e.elem.minus(t.elem).mod(Q))},negate_q=function(e){if(isinstance(e,int))e=int_to_q_unchecked(e);return ElementModQ(Q.minus(e.elem))},a_plus_bc_q=function(e,t,r){if(isinstance(e,int))e=int_to_q_unchecked(e);if(isinstance(t,int))t=int_to_q_unchecked(t);if(isinstance(r,int))r=int_to_q_unchecked(r);return ElementModQ(e.elem.add(t.elem.multiply(r.elem)).mod(Q))},mult_inv_p=function(e){if(isinstance(e,int))e=int_to_p_unchecked(e);return ElementModP(e.elem.modInv(P))},pow_p=function(e,t){if(isinstance(e,int))e=int_to_p_unchecked(e);if(isinstance(t,int))t=int_to_p_unchecked(t);return ElementModP(e.elem.modPow(t.elem,P))},mult_p=function(){var e=tuple([].slice.apply(arguments).slice(0)),t=mpz(1);for(var r of e){if(isinstance(r,int))r=int_to_p_unchecked(r);t=t.multiply(r.elem).mod(P)}return ElementModP(t)},g_pow_p=function(e){return pow_p(ElementModP(mpz(G$1)),e)},rand_q=function(){return int_to_q_unchecked(mpz.randBetween(0,Q-1))},eq_elems=function(e,t){return e.elem.eq(t.elem)},electionguard={};__nest__(electionguard,"serializable",__module_electionguard_serializable__);var __name__$6="decidim.electionguard.utils",serialize=function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=!1;return electionguard.serializable.write_json_object(e,!t)},deserialize_key=function(e){return electionguard.serializable.read_json_object(e,ElementModP)},InvalidElectionDescription=__class__("InvalidElectionDescription",[Exception],{__module__:__name__$6}),MissingJointKey=__class__("MissingJointKey",[Exception],{__module__:__name__$6}),complete_election_description=function(e){var t=dict(e);for(var r of(t.py_update(dict([["contact_information",dict([["address_line",[]],["_name","Organization name"],["email",[dict([["annotation","contact"],["value","contact@example.org"]])]],["phone",[]]])],["election_scope_id","test-election"],["_type","special"],["geopolitical_units",[dict([["object_id","a-place"],["_name","A place"],["_type","county"],["contact_information",dict([["address_line",[]],["_name","Organization name"],["email",[dict([["annotation","contact"],["value","contact@example.org"]])]]])],["phone",[]]])]],["parties",[]],["ballot_styles",[dict([["object_id","ballot-style"],["geopolitical_unit_ids",["a-place"]]])]]])),t.contests))r.electoral_district_id="a-place";return t},get_optional=function(e){return e},get_or_else_optional_func=function(e,t){return null===e?t():e},flatmap_optional=function(e,t){return null===e?null:t(e)},to_ticks=function(e){return int(e.timestamp())},space_between_capitals=function(e){return sub("(\\w)([A-Z])","\\1 \\2",e)},__name__$7="electionguard.singleton",Singleton=__class__("Singleton",[object],{__module__:__name__$7,__instance:null,get get_instance(){return function(){return null===Singleton.__instance&&Singleton(),Singleton.__instance}},get __init__(){return __get__(this,function(e){null===Singleton.__instance&&(Singleton.__instance=e)})}});class ConsoleLogger{constructor(){}debug(e){this.log("debug",e)}warning(e){this.log("warning",e)}info(e){this.log("info",e)}error(e){this.log("error",e)}critical(e){this.log("critical",e)}log(e,t){console.log(e+": "+t)}}var Logger=function(){return new ConsoleLogger},__name__$8="electionguard.logs",ElectionGuardLog=__class__("ElectionGuardLog",[Singleton],{__module__:__name__$8,get __init__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}__super__(ElectionGuardLog,"__init__")(e),e.__logger=Logger()})},get __formatted_message(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":_[n];break;case"message":t=_[n]}}}return t})},get debug(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"message":t=_[n]}}}e.__logger.debug(e.__formatted_message(t))})},get info(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"message":t=_[n]}}}e.__logger.info(e.__formatted_message(t))})},get warn(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"message":t=_[n]}}}e.__logger.warning(e.__formatted_message(t))})},get error(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"message":t=_[n]}}}e.__logger.error(e.__formatted_message(t))})},get critical(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"message":t=_[n]}}}e.__logger.critical(e.__formatted_message(t))})}}),LOG=ElectionGuardLog(),log_warning=function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"msg":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}tuple([].slice.apply(arguments).slice(1,r+1))}else tuple();LOG.warn(e)},log_error=function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"msg":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}tuple([].slice.apply(arguments).slice(1,r+1))}else tuple();LOG.error(e)},__name__$9="electionguard.hash",CryptoHashable=__class__("CryptoHashable",[object],{__module__:__name__$9,get crypto_hash(){return __get__(this,function(e){})}}),CryptoHashCheckable=__class__("CryptoHashCheckable",[object],{__module__:__name__$9,get crypto_hash_with(){return __get__(this,function(e,t){})}}),hash_elems=function(){tuple([].slice.apply(arguments).slice(0));return int_to_q_unchecked(1)},__name__$a="electionguard.election_object_base",ElectionObjectBase=__class__("ElectionObjectBase",[Serializable],{__module__:__name__$a,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})}});for(let e of ElectionObjectBase.__bases__)__mergefields__(ElectionObjectBase,e);__mergefields__(ElectionObjectBase,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var MIN_INDEX=0,MAX_INDEX=4095,get_word=function(e){return e<MIN_INDEX?null:e>MAX_INDEX?null:words[4095&e]},words=["aardvark","abacus","abbey","abbreviation","ability","abolishment","absence","abundance","academics","academy","accelerant","accelerator","accent","acceptance","access","accessory","accident","accommodation","accompanist","accomplishment","accord","accordance","accordion","account","accountability","accountant","accounting","accuracy","achievement","achiever","acknowledgment","acorn","acoustics","acquaintance","acquisition","acre","acrylic","act","action","activation","activity","actor","actress","adaptation","adapter","addition","address","adjective","adjustment","administration","administrator","admire","admission","adobe","adult","adulthood","advance","advancement","advantage","advent","adverb","advertisement","advertising","advice","adviser","advocacy","advocate","affect","affiliate","affinity","afoul","afterlife","aftermath","afternoon","aftershave","afterthought","age","agency","agenda","agent","agony","agreement","agriculture","aid","aide","aim","air","airbag","aircraft","airfare","airfield","airline","airmail","airplane","airport","airspace","albatross","album","alcove","alder","alfalfa","algebra","algorithm","alias","alibi","allergist","alley","alliance","alligator","allocation","allowance","alloy","almanac","almond","alpaca","alpha","alphabet","altar","alteration","alternative","altitude","alto","aluminium","aluminum","amazement","ambassador","amber","ambience","ambiguity","ambition","ambulance","amendment","amenity","amount","amusement","anagram","analog","analogue","analogy","analysis","analyst","analytics","anatomy","ancestor","anchovy","angel","angle","angora","anguish","animal","anime","anise","ankle","anklet","anniversary","announcement","annual","anorak","answer","ant","anteater","antelope","antennae","anterior","anthropology","antibody","anticipation","antique","antiquity","antler","antling","anybody","anyone","anything","anywhere","apartment","ape","apology","app","apparatus","apparel","appeal","appearance","appendix","appetiser","appetite","appetizer","applause","applewood","appliance","application","appointment","appreciation","apprehension","approach","appropriation","approval","apricot","apron","aquarium","aquifer","arcade","arch","archaeology","archeology","archer","architect","architecture","archives","area","arena","argument","arithmetic","ark","arm","armadillo","armchair","armoire","armpit","armrest","arrangement","array","arrest","arrival","arrow","art","artery","arthur","artichoke","article","artifact","artificer","artist","ascend","ascent","ascot","ash","aside","asparagus","aspect","asphalt","assembly","assertion","assessment","asset","assignment","assist","assistance","assistant","associate","association","assumption","assurance","asterisk","astronomy","asymmetry","atelier","athlete","athletics","atmosphere","atom","atrium","attachment","attainment","attempt","attendance","attendant","attention","attic","attitude","attorney","attraction","attribute","auction","audience","audit","auditorium","aunt","authentication","authenticity","author","authorisation","authority","authorization","auto","automation","automaton","autumn","availability","avalanche","avenue","average","avocado","award","awareness","awe","axis","babe","baby","bachelor","back","backbone","backburn","backdrop","background","backpack","backup","backyard","bacon","badge","badger","bafflement","bag","bagel","baggage","bagpipe","bail","bait","bake","baker","bakery","bakeware","balance","balcony","ball","ballet","balloon","balloonist","ballot","ballpark","bamboo","ban","banana","band","bandana","bandanna","bandwidth","bangle","banjo","bank","bankbook","banker","banking","bankruptcy","banner","banquette","bar","barbecue","barbeque","barber","bargain","barge","baritone","bark","barley","barn","barometer","barrage","barrel","barrier","base","baseball","baseboard","baseline","basement","basics","basil","basin","basis","basket","basketball","bass","bassinet","bassoon","bat","bath","bathrobe","bathroom","bathtub","battalion","batter","battery","batting","bay","bayou","beach","bead","beak","beam","bean","beancurd","beanie","beanstalk","bear","beauty","beck","bedrock","bee","beech","beet","beetle","beginner","beginning","begonia","behalf","behavior","behaviour","behest","behold","being","belfry","belief","believer","bell","bellows","belt","bench","bend","benefit","beret","berry","bestseller","bet","beverage","beyond","bias","bicycle","bid","bidder","bidding","bifocals","bijou","bike","bill","billboard","billing","billion","bin","binoculars","biology","biopsy","biosphere","biplane","birch","bird","birdbath","birdcage","birdhouse","birthday","biscuit","bit","bitten","bitter","blackberry","blackbird","blackboard","blackfish","blackness","blade","blame","blank","blanket","blast","blazer","blend","blind","blinker","blister","blizzard","block","blocker","blog","blogger","bloom","bloomer","blossom","blouse","blue","blueberry","blush","boar","board","boat","boatload","boatyard","bob","bobcat","bog","bolero","bolt","bond","bonding","bondsman","bonfire","bongo","bonnet","bonsai","bonus","book","bookcase","bookend","booking","booklet","bookmark","boolean","boom","boon","boost","booster","boot","border","bore","borrower","borrowing","boss","botany","bother","bottle","bottling","bough","boulder","boulevard","boundary","bouquet","bout","boutique","bow","bower","bowl","bowler","bowling","bowtie","boxer","boxspring","boy","boycott","boyfriend","boyhood","boysenberry","brace","bracelet","bracket","brain","brake","bran","branch","brand","brass","bratwurst","bread","breadcrumb","breadfruit","break","breakdown","breakfast","breakpoint","breakthrough","breath","breeze","brewer","bribery","brick","bricklaying","bride","bridge","brief","briefing","briefly","brilliant","brink","brisket","broad","broadcast","broccoli","brochure","broiler","broker","bronco","bronze","brooch","brood","brook","broom","brother","brow","brownie","browser","browsing","brunch","brush","brushfire","brushing","bubble","buck","bucket","buckle","buckwheat","buddy","budget","buffalo","buffer","buffet","bug","buggy","bugle","builder","building","bulb","bulk","bull","bulldozer","bullet","bun","bunch","bungalow","bunghole","bunkhouse","burden","bureau","burglar","burial","burn","burning","burrito","burrow","burst","bus","business","businessman","bustle","butane","butler","butter","butterfly","button","buy","buyer","buying","buzzard","cabana","cabbage","cabin","cabinet","cable","caboose","cacao","cactus","caddy","cadet","cafe","caffeine","caftan","cage","cake","calculation","calculator","calculus","calendar","calf","calico","call","calm","calorie","camel","cameo","camera","camp","campaign","campaigning","campanile","camper","campus","can","canal","candelabra","candidacy","candidate","candle","candy","cane","cannon","canoe","canon","canopy","cantaloupe","canteen","canvas","cap","capability","capacity","cape","caper","capital","capitulation","capon","cappuccino","captain","caption","captor","car","caramel","caravan","carbon","card","cardboard","cardigan","care","career","cargo","caribou","carload","carnation","carnival","carol","carp","carpenter","carpet","carpeting","carport","carriage","carrier","carrot","carry","cart","cartel","carter","cartload","cartoon","cartridge","carving","cascade","case","casement","cash","cashew","cashier","casino","casserole","cassock","cast","castanet","castle","cat","catacomb","catalogue","catalyst","catamaran","catastrophe","catch","catcher","category","caterpillar","cation","catsup","cattle","cauliflower","causal","cause","causeway","caution","cave","caviar","cayenne","ceiling","celebration","celebrity","celeriac","celery","cell","cellar","cello","celsius","cement","census","cent","center","centimeter","centre","centurion","century","ceramic","ceramics","cereal","ceremony","certainty","certificate","certification","chafe","chain","chainstay","chair","chairlift","chairman","chairperson","chaise","chalet","chalice","chalk","challenge","chamber","champagne","champion","championship","chance","chandelier","change","channel","chaos","chap","chapel","chapter","character","chard","charge","charger","charity","charlatan","charm","chart","charter","chasm","chassis","chateau","chatter","check","checkbook","checking","checkout","checkroom","cheddar","cheek","cheer","cheese","cheesecake","cheetah","chef","chem","chemical","chemistry","cherry","chess","chestnut","chicken","chicory","chief","child","childhood","chili","chill","chime","chimpanzee","chin","chino","chip","chipmunk","chivalry","chive","chives","chocolate","choice","choir","choker","choosing","chop","chops","chopstick","chopsticks","chord","chorus","chow","chowder","chrome","chronicle","chrysalis","chub","chuck","chug","churn","chutney","cicada","cilantro","cinder","cinema","cinnamon","circadian","circle","circuit","circulation","circumference","circumstance","cirrus","citizen","citizenship","citron","citrus","city","civilian","civilisation","civilization","claim","clamp","clan","clank","clapboard","clarification","clarinet","clarity","clasp","class","classic","classmate","classroom","clause","clave","clavicle","clavier","claw","clay","cleaner","clearance","clearing","cleat","clef","cleft","clerk","click","client","cliff","climate","climb","clinic","clip","clipboard","clipper","cloak","cloakroom","clock","clockwork","clogs","clone","close","closet","closing","closure","cloth","clothes","clothing","cloud","cloudburst","clove","clover","cloves","club","clue","cluster","clutch","coach","coal","coalition","coast","coaster","coat","cob","cobbler","cobweb","cocktail","cocoa","coconut","cod","code","codepage","codling","codon","cofactor","coffee","coffin","cohesion","cohort","coil","coin","coincidence","coinsurance","cold","coleslaw","coliseum","collaboration","collagen","collapse","collar","collard","collateral","colleague","collection","collector","college","collision","colloquy","colony","color","colt","column","columnist","comb","combination","combine","comeback","comedy","comfort","comfortable","comic","comics","comma","command","commander","comment","commerce","commercial","commission","commitment","committee","commodity","common","commonsense","commotion","communicant","communication","community","commuter","company","comparison","compass","compassion","compassionate","compensation","competence","competition","competitor","complaint","complement","completion","complex","complexity","compliance","complication","complicity","compliment","component","comportment","composer","composite","composition","compost","comprehension","compress","compromise","compulsion","computer","con","concentrate","concept","conception","concern","concert","conclusion","concrete","condition","conditioner","condominium","condor","conduct","conductor","cone","conference","confidence","configuration","conflict","confusion","conga","congo","congress","congressman","conifer","connection","connotation","conscience","consciousness","consensus","consent","consequence","conservation","consideration","consignment","consist","consistency","console","consonant","constant","constellation","constitution","constraint","construction","consul","consulate","consulting","consumer","consumption","contact","container","content","contention","contest","context","continent","continuity","contour","contract","contractor","contrary","contrast","contribution","contributor","control","controller","convection","convenience","convention","conversation","conversion","convert","convertible","cook","cookbook","cookie","cooking","cooperation","coordination","coordinator","cope","copper","copy","copying","copyright","copywriter","coral","cord","corduroy","core","cork","corn","corner","cornerstone","cornflakes","cornmeal","corporal","corporation","corral","corridor","corsage","cosset","cost","costume","cot","cottage","cotton","couch","cough","council","councilor","counsel","counseling","counselling","counsellor","counselor","count","counter","counterpart","countess","country","countryside","county","couple","coupon","courage","court","courthouse","courtroom","cousin","cover","coverage","coverall","cow","cowbell","coyote","crackers","cradle","craft","craftsman","cranberry","crane","cranky","crash","crate","cravat","craw","crawdad","crayfish","crayon","creation","creative","creativity","creator","creature","credential","credenza","credibility","credit","creditor","creek","crepe","crest","crew","crewman","crewmate","crewmember","crewmen","crib","cribbage","cricket","crime","criminal","crisis","crisp","criteria","criterion","critic","criticism","crocodile","crocus","croissant","crook","crop","cross","croup","crow","crowd","crown","cruise","crumb","crunch","crush","crust","cry","crystal","cub","cube","cuckoo","cucumber","cue","cuisine","culture","culvert","cummerbund","cup","cupboard","cupcake","curd","cure","curio","curiosity","curl","curler","currant","currency","current","curriculum","curry","curse","cursor","curtailment","curtain","curve","cushion","custard","custom","customer","cut","cuticle","cutlet","cutover","cutting","cycle","cyclone","cylinder","cymbal","cynic","daffodil","dahlia","daikon","daily","dairy","daisy","damage","dame","dance","dancer","dancing","dandelion","danger","dare","dark","darkness","darn","dart","dash","dashboard","data","database","date","daughter","dawn","day","daybed","daylight","deal","dealing","dearest","debate","debris","debt","debtor","decade","decadence","decency","decimal","decision","deck","declaration","declination","decline","decoder","decoration","decrease","dedication","deduce","deduction","deed","deep","deer","default","defeat","defendant","defender","defense","deficit","definition","degree","delay","deliberation","delight","delivery","demand","democracy","democrat","demur","den","denim","denominator","density","dentist","department","departure","dependency","dependent","deployment","deposit","deposition","depot","depression","depressive","depth","deputy","derby","derivation","derivative","derrick","descendant","descent","description","desert","design","designation","designer","desire","desk","desktop","dessert","destination","destiny","destruction","detail","detection","detective","detector","detention","detour","developer","developing","development","device","dew","diabetes","diadem","diagnosis","diagram","dial","dialect","dialogue","diam","diamond","diaper","diaphragm","diarist","diary","dibble","dick","diction","dictionary","diesel","diet","difference","difficulty","diffuse","dig","digestion","digestive","digger","digging","digit","dignity","dill","dilution","dime","dimension","dimple","diner","dinghy","dining","dinner","dinosaur","dioxide","dip","diploma","diplomacy","direction","directive","director","directory","dirt","disadvantage","disagreement","disaster","discharge","discipline","disclaimer","disclosure","disco","disconnection","discount","discourse","discovery","discrepancy","discretion","discussion","disdain","disembodiment","disengagement","disguise","dish","dishwasher","disk","disparity","dispatch","display","disposal","disposer","disposition","dispute","disregard","disruption","dissemination","dissonance","distance","distinction","distortion","distribution","distributor","district","divan","diver","diversity","divide","dividend","divider","diving","division","doc","dock","doctor","doctorate","doctrine","document","documentary","doe","dog","dogsled","dogwood","doing","doll","dollar","dollop","dolman","dolor","dolphin","domain","dome","donation","donkey","donor","donut","door","doorbell","doorknob","doorpost","doorway","dory","dose","dot","double","doubling","doubt","doubter","dough","doughnut","down","downfall","downgrade","download","downstairs","downtown","downturn","dozen","draft","drag","dragon","dragonfly","dragonfruit","dragster","drain","drainage","drake","drama","drapes","draw","drawbridge","drawer","drawing","dream","dreamer","dredger","dress","dresser","dressing","drill","drink","drinking","drive","driver","driveway","driving","drizzle","drop","drudgery","drum","drummer","dryer","duck","duckling","dud","dude","due","duel","dueling","duffel","dugout","dune","duration","durian","dusk","dust","duster","duty","dwarf","dwell","dwelling","dynamics","dynamo","dynasty","eagle","eaglet","ear","eardrum","earmuffs","earnings","earplug","earring","earrings","earth","earthquake","earthworm","ease","easel","east","eating","eaves","eavesdropper","eclipse","ecliptic","ecology","economics","economy","ecosystem","eddy","edge","edger","edible","editing","edition","editor","editorial","education","eel","effect","effective","effector","efficacy","efficiency","effort","egg","egghead","eggnog","eggplant","ego","elbow","elderberry","election","electricity","electronics","element","elephant","elevation","elevator","eleventh","elf","elicit","eligibility","elimination","elite","elixir","elk","ellipse","elm","elongation","elver","email","emanate","embassy","embossing","emerald","emergence","emergent","emery","emission","emitter","emotion","emphasis","empire","employ","employee","employer","employment","empowerment","emu","enactment","enclave","enclosure","encounter","encouragement","encyclopedia","end","endive","endorsement","endpoint","enemy","energy","enforcement","engagement","engine","engineer","engineering","enigma","enjoyment","enquiry","enrollment","enterprise","entertainment","enthusiasm","entirety","entity","entrance","entree","entrepreneur","entry","envelope","environment","envy","enzyme","epic","episode","epoch","epoxy","equal","equality","equation","equinox","equipment","equity","equivalent","era","eraser","erosion","error","escalator","escape","escort","essay","essence","essential","establishment","estate","estimate","estuary","eternity","ethernet","ethics","evaluation","evaluator","evaporation","eve","evening","event","everybody","everyone","everything","evidence","evocation","evolution","exaggeration","exam","examination","examiner","example","excellence","exception","excerpt","excess","exchange","exclamation","excursion","excuse","executive","executor","exercise","exhaust","exhaustion","exhibit","exhibition","exile","existence","exit","expansion","expectancy","expectation","expedition","expense","experience","experiment","expert","expertise","explanation","exploration","explorer","export","expose","exposition","exposure","expression","extension","extent","exterior","external","extreme","eye","eyeball","eyebrow","eyebrows","eyeglasses","eyelash","eyelashes","eyelid","eyelids","eyeliner","eyestrain","fabric","face","facet","facility","facsimile","fact","factor","factory","faculty","fail","failure","fairness","fairy","fall","fallacy","fame","familiar","familiarity","family","fan","fang","fanlight","farm","farmer","farming","farmland","farrow","fascia","fashion","fat","fate","father","fatigue","faucet","fault","fava","favor","favorite","fawn","fax","fear","feast","feather","feature","federation","fedora","fee","feed","feedback","feeding","feel","feeling","fellow","fen","fence","fencing","fender","fennel","ferret","ferry","ferryboat","fertilizer","festival","few","fiber","fiberglass","fibre","fiction","fiddle","field","fiery","fiesta","fifth","fig","fight","fighter","figure","figurine","file","filing","fill","fillet","filly","film","filter","final","finance","financing","finding","fine","finer","finger","fingerling","fingernail","finish","finisher","fir","fire","fireman","fireplace","firewall","firm","first","fish","fishbone","fisherman","fishery","fishing","fishnet","fit","fitness","fix","fixture","flag","flair","flame","flan","flanker","flare","flash","flat","flatboat","flavor","flax","fleck","fledgling","fleece","flesh","flexibility","flick","flicker","flight","flint","flock","flood","floodplain","floor","flour","flow","flower","fluke","flume","flung","flute","fly","flytrap","foal","foam","fob","focus","fog","fold","folder","folk","folklore","follower","following","fondue","font","food","foodstuffs","fool","foot","footage","football","footnote","footprint","footrest","footstep","footstool","footwear","forage","forager","foray","force","ford","forearm","forebear","forecast","forehead","foreigner","forelimb","forest","forestry","forever","forgery","fork","form","formal","format","formation","former","formula","fort","forte","fortnight","fortress","fortune","forum","foundation","founder","founding","fountain","fourths","fowl","fox","foxglove","fraction","fragrance","frame","framework","fraud","fraudster","freak","freckle","freedom","freelance","freezer","freezing","freight","freighter","frenzy","freon","frequency","fresco","friction","fridge","friend","friendship","fries","fright","fringe","fritter","frock","frog","front","frontier","frost","frosting","frown","fruit","frustration","fry","fuel","fulfillment","full","fun","function","functionality","fund","funding","fundraising","funeral","fur","furnace","furniture","futon","future","gadget","gaffe","gain","gaiters","gale","gallery","galley","gallon","galoshes","gambling","game","gamebird","gaming","gander","gap","garage","garb","garbage","garden","garlic","garment","garter","gas","gasket","gasoline","gasp","gastronomy","gastropod","gate","gateway","gather","gathering","gator","gauge","gauntlet","gavel","gazebo","gazelle","gear","gearshift","geek","gel","gelatin","gelding","gem","gender","gene","general","generation","generator","generosity","genetics","genie","genius","genre","gentleman","geography","geology","geometry","geranium","gerbil","gesture","geyser","ghost","giant","gift","gig","giggle","ginger","gingerbread","ginseng","giraffe","girdle","girl","girlfriend","glacier","gladiolus","glance","gland","glass","glasses","glee","glen","glider","gliding","glimpse","globe","gloom","glory","glove","glow","glucose","glue","glut","glutamate","gnat","gnu","goal","goat","gobbler","goggles","going","gold","goldfish","golf","gondola","gong","good","goodbye","goodie","goodness","goodnight","goodwill","goose","gopher","gorilla","gosling","gossip","governance","government","governor","gown","grace","grade","gradient","graduate","graduation","graffiti","graft","grain","gram","grammar","gran","grand","grandchild","grandfather","grandma","grandmom","grandmother","grandpa","grandparent","grandson","granny","granola","grant","grape","grapefruit","graph","graphic","grasp","grasshopper","grassland","gratitude","gravel","gravitas","gravity","gravy","gray","grease","greatness","greed","green","greenhouse","greens","grenade","grey","grid","grief","grill","grin","grip","gripper","grit","grocery","ground","group","grouper","grouse","grove","growth","grub","guacamole","guarantee","guard","guava","guerrilla","guess","guest","guestbook","guidance","guide","guideline","guilder","guilt","guilty","guinea","guitar","guitarist","gum","gumshoe","gutter","guy","gym","gymnast","gymnastics","gyro","habit","habitat","hacksaw","hackwork","hail","hair","haircut","hake","half","halibut","hall","halloween","hallway","halt","ham","hamburger","hammer","hammock","hamster","hand","handball","handful","handicap","handle","handlebar","handmaiden","handover","handrail","handsaw","hanger","happening","happiness","harald","harbor","harbour","hardboard","hardcover","hardening","hardhat","hardship","hardware","hare","harm","harmonica","harmonise","harmonize","harmony","harp","harpooner","harvest","harvester","hash","hashtag","hassock","haste","hat","hatbox","hatchet","hatchling","haunt","haven","haversack","havoc","hawk","hay","haze","hazel","hazelnut","head","headache","headlight","headline","headphones","headquarters","headrest","health","hearing","hearsay","heart","heartache","heartbeat","hearth","hearthside","heartwood","heat","heater","heating","heaven","heavy","hectare","hedge","hedgehog","heel","heifer","height","heir","heirloom","helicopter","helium","hellcat","hello","helmet","helo","help","hemisphere","hemp","hen","herb","herbs","heritage","hermit","hero","heron","herring","hesitation","hexagon","heyday","hiccups","hide","hierarchy","high","highland","highlight","highway","hike","hiking","hill","hint","hip","hippodrome","hire","hiring","historian","history","hit","hive","hobbit","hobby","hockey","hoe","hog","hold","holder","holiday","home","homeland","hometown","homework","homonym","honesty","honey","honeybee","honeydew","honor","honoree","hood","hoof","hook","hop","hope","hops","horde","horizon","hormone","horn","hornet","horror","horse","horseradish","horst","hose","hosiery","hospice","hospital","hospitality","host","hostel","hostess","hotdog","hotel","hound","hour","hourglass","house","houseboat","household","housewife","housework","housing","hovel","hovercraft","howard","hub","hubcap","hubris","hug","hugger","hull","human","humanity","humidity","hummus","humor","humour","hundred","hunger","hunt","hunter","hunting","hurdle","hurdler","hurricane","hurry","hurt","husband","hut","hutch","hyacinth","hydrant","hydraulics","hydrocarb","hydrocarbon","hydrofoil","hydrogen","hyena","hygienic","hype","hypothesis","ice","iceberg","icebreaker","icecream","icicle","icing","icon","icy","id","idea","ideal","identification","identity","ideology","idiom","igloo","ignorance","ignorant","illegal","illiteracy","illness","illusion","illustration","image","imagination","imbalance","imitation","immortal","impact","impairment","impala","impediment","implement","implementation","implication","import","importance","impostor","impress","impression","imprisonment","impropriety","improvement","impudence","impulse","inability","inauguration","inbox","incandescence","incarnation","incense","incentive","inch","incidence","incident","incision","inclusion","income","incompetence","inconvenience","increase","incubation","independence","independent","index","indication","indicator","indigence","individual","industry","inequality","inevitable","infancy","infant","infection","infiltration","infinite","infix","inflammation","inflation","influence","influx","info","information","infrastructure","infusion","ingrate","ingredient","inhabitant","inheritance","inhibition","inhibitor","initial","initialise","initialize","initiative","injunction","injury","injustice","ink","inlay","inn","innervation","innocence","innocent","innovation","input","inquiry","inscription","insect","insert","inside","insight","insolence","insomnia","inspection","inspector","inspiration","installation","instance","instant","instinct","institute","institution","instruction","instructor","instrument","instrumentalist","instrumentation","insulation","insurance","insurgence","insurrection","integer","integral","integration","integrity","intellect","intelligence","intensity","intent","intention","intentionality","interaction","interchange","interest","interface","interior","interject","interloper","internet","interpretation","interpreter","interval","intervenor","intervention","interview","interviewer","introduction","intuition","invader","invasion","invention","inventor","inventory","inverse","inversion","investigation","investigator","investment","investor","invitation","invite","invoice","involvement","iridescence","iris","iron","ironclad","irony","irrigation","island","isolation","issue","item","itinerary","ivory","jack","jackal","jacket","jackfruit","jade","jaguar","jail","jailhouse","jalapeno","jam","jar","jasmine","jaw","jazz","jealousy","jeans","jeep","jelly","jellybeans","jellyfish","jet","jewel","jeweller","jewellery","jewelry","jicama","jiffy","job","jockey","joey","jogging","joke","jot","journal","journalism","journalist","journey","joy","judge","judgment","judo","jug","juggernaut","juice","julienne","jumbo","jump","jumper","jumpsuit","jungle","junior","junk","junker","junket","jury","justice","jute","kale","kangaroo","karate","kayak","kazoo","kebab","keep","keeper","kendo","kennel","ketch","ketchup","kettle","kettledrum","key","keyboard","keyboarding","keystone","kick","kid","kilogram","kilometer","kilt","kimono","kind","kindness","king","kingdom","kingfish","kiosk","kiss","kit","kitchen","kite","kitsch","kitten","kitty","kiwi","knee","kneejerk","knickers","knife","knight","knitting","knock","knot","knowledge","knuckle","koala","kohlrabi","kumquat","lab","label","labor","laboratory","laborer","labour","labourer","lace","lack","lad","ladder","ladle","lady","ladybug","lag","lake","lamb","lambkin","lament","lamp","lanai","land","landform","landing","landmine","landscape","lane","language","lantern","lap","lapdog","laptop","larch","lard","larder","lark","larva","lasagna","lashes","last","latency","lathe","latitude","latte","latter","laugh","laughter","laundry","lava","law","lawmaker","lawn","lawsuit","lawyer","lay","layer","layout","lead","leader","leadership","leading","leaf","league","leaker","leap","learning","leash","leather","leave","leaver","lecture","leek","leeway","left","leg","legacy","legal","legend","legging","legislation","legislator","legislature","legitimacy","legume","leisure","lemon","lemonade","lemur","lender","lending","length","lens","lentil","leopard","lesson","letter","lettuce","level","lever","leverage","leveret","liability","liar","liberty","library","licence","license","licensing","licorice","lid","lie","lieu","lieutenant","life","lifestyle","lifetime","lift","ligand","light","lighting","lightning","lightscreen","likelihood","likeness","lilac","lily","limb","lime","limestone","limit","limitation","limo","line","linen","liner","linguist","linguistics","lining","link","linkage","linseed","lion","lip","lipid","lipstick","liquid","liquidity","list","listening","listing","literate","literature","litigation","litmus","litter","littleneck","livestock","living","lizard","llama","load","loading","loaf","loafer","loan","lobby","lobster","local","locality","location","lock","locker","locket","locomotive","locust","lode","loft","log","logic","login","logistics","logo","lollipop","loneliness","longboat","longitude","look","lookout","loop","loophole","loquat","loss","lot","lotion","lottery","lounge","louse","lout","love","lox","loyalty","luck","luggage","lumber","lumberman","lunch","luncheonette","lunchmeat","lunchroom","lung","lunge","lute","luxury","lychee","lycra","lye","lynx","lyre","lyrics","lysine","macadamia","macaroni","macaroon","macaw","machine","machinery","macrame","macro","macrofauna","maelstrom","maestro","magazine","magic","magnet","magnitude","maid","maiden","mail","mailbox","mailer","mailing","mailman","main","mainland","mainstream","maintainer","maintenance","major","majority","makeover","maker","makeup","making","male","malice","mall","mallard","mallet","mama","mambo","mammoth","man","manacle","management","manager","manatee","mandarin","mandate","mandolin","mangle","mango","mangrove","manhunt","maniac","manicure","manifestation","manipulation","manner","manor","mansard","mansion","mantel","mantle","mantua","manufacturer","manufacturing","many","map","maple","mapping","maracas","marathon","marble","march","mare","margarine","margin","mariachi","marimba","marines","marionberry","mark","marker","market","marketer","marketing","marketplace","marksman","markup","marmalade","marriage","marsh","marshland","marshmallow","marten","mascara","mask","masonry","mass","massage","mast","master","masterpiece","mastoid","mat","match","matchmaker","mate","material","maternity","math","mathematics","matrix","matter","mattock","mattress","max","maximum","maybe","mayonnaise","mayor","meadow","meal","mean","meander","meaning","means","meantime","measure","measurement","meat","meatball","meatloaf","mecca","mechanic","mechanism","med","medal","media","median","medication","medicine","medium","meet","meeting","melatonin","melody","melon","member","membership","membrane","meme","memo","memorial","memory","men","mention","mentor","menu","merchandise","merchant","mercury","meridian","meringue","merit","mess","message","messenger","messy","metabolite","metal","metaphor","meteor","meteorology","meter","methane","method","methodology","metric","metro","metronome","mezzanine","microlending","microphone","microwave","midden","middle","middleman","midline","midnight","midwife","might","migrant","migration","mile","mileage","milepost","milestone","military","milk","milkshake","mill","millennium","millet","millimeter","million","millisecond","millstone","mime","mimosa","min","mincemeat","mind","mine","mineral","mineshaft","mini","minibus","minimalism","minimum","mining","minion","minister","mink","minnow","minor","minority","mint","minute","miracle","mirror","misfit","misnomer","misplacement","misreading","miss","missile","mission","mist","mistake","mister","misunderstand","miter","mitten","mix","mixer","mixture","moat","mob","mobile","mobility","moccasins","mocha","mochi","mode","model","modeling","modem","modernist","modernity","modification","molar","molasses","molding","mole","molecule","mom","moment","money","monger","monitor","monitoring","monk","monkey","monocle","monopoly","monsoon","monster","month","monument","mood","moody","moon","moonlight","moonscape","moonshine","moose","mop","morale","morning","morsel","mortal","mortality","mortgage","mortise","mosquito","most","motel","moth","mother","motion","motivation","motive","motor","motorboat","motorcar","motorcycle","mound","mountain","mouse","mouser","mousse","moustache","mouton","movement","mover","movie","mower","mozzarella","mud","muffin","mug","mukluk","mule","multimedia","muscat","muscle","museum","mushroom","music","musician","muskrat","mussel","mustache","mustard","mutation","mutt","mutton","mystery","myth","mythology","nail","name","naming","napkin","narrative","nasal","nation","nationality","native","nature","navigation","necessity","necklace","necktie","nectar","nectarine","need","needle","neglect","negotiation","neighbor","neighborhood","neighbour","neighbourhood","neon","neonate","nephew","nerve","nest","nestling","nestmate","net","netball","netbook","network","networking","neuron","news","newsletter","newspaper","newsprint","newsstand","nexus","nibble","nicety","niche","nick","nickel","nickname","niece","night","nightclub","nightgown","nightingale","nightlife","nightlight","nightmare","ninja","nit","nitrogen","nobody","nod","node","noir","noise","nonconformist","nondisclosure","nonsense","noodle","noodles","noon","norm","normal","normalisation","normalization","north","nose","notation","note","notebook","notepad","nothing","notice","notion","notoriety","nougat","noun","nourishment","novel","nudge","number","numeracy","numeric","nurse","nursery","nursing","nurture","nut","nutmeg","nutrient","nutrition","nylon","nymph","oak","oar","oasis","oat","oatmeal","oats","obedience","obi","object","objection","objective","obligation","oboe","observation","observatory","obsession","obsidian","obstacle","occasion","occupation","occurrence","ocean","ocelot","octagon","octave","octavo","octet","octopus","odometer","odyssey","oeuvre","offence","offense","offer","offering","office","officer","official","offset","oil","okra","oldie","oleo","olive","omega","omelet","omission","omnivore","oncology","onion","online","onset","opening","opera","operating","operation","operator","opinion","opossum","opponent","opportunist","opportunity","opposite","opposition","optimal","optimisation","optimist","optimization","option","orange","orangutan","orator","orchard","orchestra","orchid","order","ordinary","ordination","ore","oregano","organ","organisation","organising","organization","organizing","orient","orientation","origin","original","originality","ornament","osmosis","osprey","ostrich","other","otter","ottoman","ounce","outback","outcome","outfielder","outfit","outhouse","outlaw","outlay","outlet","outline","outlook","output","outrage","outrigger","outrun","outset","outside","oval","oven","overcharge","overclocking","overcoat","overexertion","overflight","overhead","overheard","overload","overnighter","overshoot","oversight","overview","owl","owner","ownership","ox","oxford","oxygen","oyster","ozone","pace","pacemaker","pack","package","packaging","packet","pad","paddle","paddock","page","pail","pain","paint","painter","painting","paintwork","pair","pajamas","palace","palate","palm","pamphlet","pan","pancake","pancreas","panda","panel","panic","pannier","panpipe","pansy","panther","pantry","pants","pantsuit","pantyhose","papa","papaya","paper","paperback","paperwork","parable","parachute","parade","paradise","paragraph","paramedic","parameter","paranoia","parcel","parchment","pard","pardon","parent","parenthesis","parenting","park","parka","parking","parliament","parole","parrot","parser","parsley","parsnip","part","participant","participation","particle","particular","partner","partnership","partridge","party","pass","passage","passbook","passenger","passing","passion","passive","passport","password","past","pasta","paste","pastry","pasture","pat","patch","pate","patent","patentee","path","pathology","pathway","patience","patient","patina","patio","patrimony","patriot","patrol","patroller","patrolling","patron","pattern","patty","pattypan","pause","pavement","pavilion","paw","pawnshop","pay","payee","payment","payoff","pea","peace","peach","peacoat","peacock","peak","peanut","pear","pearl","peasant","pecan","pedal","peek","peen","peer","pegboard","pelican","pelt","pen","penalty","pence","pencil","pendant","pendulum","penguin","penicillin","peninsula","pennant","penny","pension","pentagon","peony","people","pepper","pepperoni","percent","percentage","perception","perch","perennial","perfection","performance","perfume","period","periodical","peripheral","permafrost","permission","permit","persimmon","person","personal","personality","personnel","perspective","pest","pet","petal","petition","petitioner","petticoat","pew","pharmacist","phase","pheasant","phenomenon","phenotype","pheromone","philanthropy","philosopher","philosophy","phone","phosphate","photo","photograph","photographer","photography","phrase","phrasing","physical","physics","physiology","pianist","piano","piccolo","pick","pickax","pickaxe","picket","pickle","pickup","picnic","picture","picturesque","pie","piece","pier","piety","pig","pigeon","piglet","pigpen","pigsty","pike","pilaf","pile","pilgrim","pilgrimage","pill","pillar","pillbox","pillow","pilot","pimple","pin","pinafore","pine","pineapple","pinecone","ping","pink","pinkie","pinot","pinstripe","pint","pinto","pinworm","pioneer","pipe","pipeline","piracy","pirate","pistol","pit","pita","pitch","pitcher","pitching","pith","pizza","place","placebo","placement","placode","plagiarism","plain","plaintiff","plan","plane","planet","planning","plant","plantation","planter","planula","plaster","plasterboard","plastic","plate","platelet","platform","platinum","platter","platypus","play","player","playground","playroom","playwright","plea","pleasure","pleat","pledge","plenty","plier","pliers","plight","plot","plough","plover","plow","plowman","plug","plugin","plum","plumber","plume","plunger","plywood","pneumonia","pocket","pocketbook","pod","podcast","poem","poet","poetry","poignance","point","poison","poisoning","poker","pole","polenta","police","policeman","policy","polish","politician","politics","poll","polliwog","pollutant","pollution","polo","polyester","polyp","pomegranate","pomelo","pompom","poncho","pond","pony","pool","poor","pop","popcorn","poppy","popsicle","popularity","population","populist","porcelain","porch","porcupine","pork","porpoise","port","porter","portfolio","porthole","portion","portrait","position","possession","possibility","possible","post","postage","postbox","poster","postfix","pot","potato","potential","pottery","pouch","poultry","pound","pounding","poverty","powder","power","practice","practitioner","prairie","praise","precedence","precedent","precipitation","precision","predecessor","preface","preference","prefix","prejudice","prelude","premeditation","premier","premise","premium","preoccupation","preparation","prescription","presence","present","presentation","preservation","preserves","presidency","president","press","pressroom","pressure","prestige","presume","pretzel","prevalence","prevention","prey","price","pricing","pride","primary","primate","prince","princess","principal","principle","print","printer","printing","prior","priority","prison","prisoner","privacy","private","privilege","prize","prizefight","probability","probation","probe","problem","procedure","proceedings","process","processing","processor","proctor","procurement","produce","producer","product","production","productivity","profession","professional","professor","profile","profit","progenitor","program","programme","programming","progress","progression","prohibition","project","promenade","promise","promotion","prompt","pronoun","proof","propaganda","propane","property","prophet","proponent","proportion","proposal","proposition","proprietor","prose","prosecution","prosecutor","prospect","prosperity","prostanoid","prostrate","protection","protein","protest","protocol","providence","provider","province","provision","prow","proximal","proximity","prune","pruner","psychology","pub","public","publication","publicity","publisher","publishing","pudding","puddle","puffin","pug","puggle","pulley","pulse","puma","pump","pumpernickel","pumpkin","pumpkinseed","pun","punch","punctuation","punishment","pup","pupa","pupil","puppet","puppy","purchase","purity","purple","purpose","purr","purse","pursuit","push","put","puzzle","pyramid","quadrant","quail","qualification","quality","quantity","quart","quarter","quartet","quartz","queen","query","quest","question","questioner","questionnaire","quiche","quicksand","quiet","quill","quilt","quince","quinoa","quit","quiver","quota","quotation","quote","rabbit","raccoon","race","racer","racing","rack","radar","radiator","radio","radish","raffle","raft","rag","rage","raid","rail","railing","railroad","railway","raiment","rain","rainbow","raincoat","rainmaker","rainstorm","rainy","raise","raisin","rake","rally","ram","rambler","ramen","ramie","ranch","rancher","range","ranger","rank","rap","raspberry","rat","rate","ratepayer","rating","ratio","rationale","rations","raven","ravioli","rawhide","ray","rayon","razor","reach","reactant","reaction","read","reader","readiness","reading","real","reality","realization","realm","reamer","rear","reason","reasoning","rebel","rebellion","reboot","recall","receipt","receiver","reception","receptor","recess","recession","recipe","recipient","reciprocity","reclamation","recliner","recognition","recollection","record","recorder","recording","recovery","recreation","recruit","rectangle","red","redesign","redirect","rediscovery","reduction","reef","refectory","reference","referendum","reflection","reform","refreshments","refrigerator","refuge","refund","refusal","refuse","regard","regime","region","regionalism","register","registration","registry","regret","regulation","regulator","reindeer","reject","relation","relationship","relative","relaxation","relay","release","reliability","relief","religion","relish","reluctance","remains","remark","reminder","remnant","remote","removal","renaissance","rent","reorganisation","reorganization","repair","reparation","repayment","repeat","replacement","replica","replication","reply","report","reporter","reporting","repository","representation","representative","reprocessing","republic","republican","reputation","request","requirement","resale","rescue","research","researcher","resemblance","reservation","reserve","reservoir","reset","residence","resident","residue","resist","resistance","resolution","resolve","resort","resource","respect","respite","response","responsibility","rest","restaurant","restoration","restriction","restroom","restructuring","result","resume","retailer","retention","rethinking","retina","retirement","retouching","retreat","retrospect","retrospective","return","reunion","reveal","revelation","revenant","revenge","revenue","reversal","reverse","review","revival","revolution","reward","rhetoric","rhinoceros","rhubarb","rhyme","rhythm","rib","ribbon","rice","riddle","ride","rider","ridge","riding","rifle","right","rim","ring","riot","rip","ripple","rise","riser","risk","rite","ritual","river","riverbed","rivulet","road","roadway","roar","roast","robe","robin","robot","robotics","rock","rocker","rocket","rod","role","roll","roller","romaine","romance","roof","room","roommate","rooster","root","rope","rose","rosemary","roster","rostrum","rotation","round","roundabout","route","router","routine","row","rowboat","rowing","rubbish","rubric","ruby","ruckus","rudiment","ruffle","rug","rugby","ruin","rule","ruler","ruling","rum","rumor","run","runaway","runner","running","runway","rush","rust","rutabaga","rye","sabre","sac","sack","saddle","sadness","safari","safe","safeguard","safety","saffron","sage","sail","sailboat","sailing","sailor","saint","sake","salad","salami","salary","sale","salesman","salmon","salon","saloon","salsa","salt","salute","sample","samurai","sanction","sanctity","sanctuary","sand","sandal","sandbar","sandpaper","sandwich","sanity","sardine","sari","sarong","sash","satellite","satin","satire","satisfaction","sauce","saucer","sauerkraut","sausage","savage","savannah","saving","savings","savior","saviour","savory","saw","saxophone","scaffold","scale","scallion","scallops","scalp","scam","scanner","scarecrow","scarf","scenario","scene","scenery","scent","schedule","scheduling","schema","scheme","scholar","scholarship","school","schoolhouse","schooner","science","scientist","scimitar","scissors","scooter","scope","score","scorn","scorpion","scotch","scout","scow","scrambled","scrap","scraper","scratch","screamer","screen","screening","screenwriting","screwdriver","scrim","scrip","script","scrutiny","sculpting","sculptural","sculpture","sea","seabass","seafood","seagull","seal","seaplane","search","seashore","seaside","season","seat","seaweed","second","secrecy","secret","secretariat","secretary","section","sectional","sector","security","sediment","seed","seeder","seeker","seep","segment","seizure","selection","self","seller","selling","semantics","semester","semicircle","semicolon","seminar","senate","senator","sender","senior","sense","sensibility","sensitive","sensitivity","sensor","sentence","sentencing","sentiment","sepal","separation","sequel","sequence","serial","series","serum","serval","servant","server","service","servitude","sesame","session","set","setback","setting","settlement","settler","severity","sewer","shack","shackle","shade","shadow","shadowbox","shakedown","shaker","shallot","shallows","shame","shampoo","shanty","shape","share","shareholder","shark","shaw","shawl","shear","shearling","sheath","shed","sheep","sheet","shelf","shell","shelter","sherbet","sherry","shield","shift","shin","shine","shingle","ship","shipper","shipping","shipyard","shirt","shirtdress","shoat","shock","shoe","shoehorn","shoelace","shoemaker","shoes","shoestring","shofar","shoot","shootdown","shop","shopper","shopping","shore","shoreline","short","shortage","shorts","shortwave","shot","shoulder","shout","shovel","show","shower","shred","shrimp","shrine","shutdown","sibling","sick","sickness","side","sideboard","sideburns","sidecar","sidestream","sidewalk","siding","siege","sigh","sight","sightseeing","sign","signal","signature","signet","significance","signify","signup","silence","silica","silicon","silk","silkworm","sill","silly","silo","silver","similarity","simple","simplicity","singer","singing","singular","sink","sinuosity","sip","sir","sister","sitar","site","situation","size","skate","skating","skean","skeleton","ski","skiing","skill","skin","skirt","skull","skullcap","skunk","sky","skylight","skyline","skyscraper","skywalk","slang","slapstick","slash","slate","slaw","sled","sledge","sleep","sleepiness","sleeping","sleet","sleuth","slice","slide","slider","slime","slip","slipper","slippers","slope","slot","sloth","slump","smell","smelting","smile","smith","smock","smog","smoke","smoking","smolt","smuggling","snack","snail","snake","snakebite","snap","snarl","sneaker","sneakers","sneeze","sniffle","snob","snorer","snow","snowboarding","snowflake","snowman","snowmobiling","snowplow","snowstorm","snowsuit","snuck","snug","snuggle","soap","soccer","socialism","socialist","society","sociology","sock","socks","soda","sofa","softball","softdrink","softening","software","soil","soldier","sole","solicitation","solicitor","solidarity","solidity","soliloquy","solitaire","solution","solvency","sombrero","somebody","someone","someplace","somersault","something","somewhere","son","sonar","sonata","song","songbird","sonnet","soot","sophomore","soprano","sorbet","sorghum","sorrel","sorrow","sort","soul","soulmate","sound","soundness","soup","source","sourwood","sousaphone","south","southeast","souvenir","sow","soy","soybean","space","spacing","spade","spaghetti","span","spandex","sparerib","spark","sparrow","spasm","spat","spatula","spawn","speaker","speakerphone","speaking","spear","spec","special","specialist","specialty","species","specification","spectacle","spectacles","spectrum","speculation","speech","speed","speedboat","spell","spelling","spelt","spending","sphere","sphynx","spice","spider","spiderling","spike","spill","spinach","spine","spiral","spirit","spit","spite","spleen","splendor","split","spokesman","spokeswoman","sponge","sponsor","sponsorship","spool","spoon","spork","sport","sportsman","spot","spotlight","spouse","sprag","sprat","spray","spread","spreadsheet","spree","spring","sprinkles","sprinter","sprout","spruce","spud","spume","spur","spy","spyglass","square","squash","squatter","squeegee","squid","squirrel","stab","stability","stable","stack","stacking","stadium","staff","stag","stage","stain","stair","staircase","stake","stalk","stall","stallion","stamen","stamina","stamp","stance","stand","standard","standing","standoff","standpoint","star","starboard","start","starter","state","statement","statin","station","statistic","statistics","statue","status","statute","stay","steak","stealth","steam","steamroller","steel","steeple","stem","stench","stencil","step","stepdaughter","stepmother","stepson","stereo","stew","steward","stick","sticker","stiletto","still","stimulation","stimulus","sting","stinger","stitch","stitcher","stock","stockings","stole","stomach","stone","stonework","stool","stop","stopsign","stopwatch","storage","store","storey","storm","story","storyboard","stot","stove","strait","strand","stranger","strap","strategy","straw","strawberry","strawman","stream","street","streetcar","strength","stress","stretch","strife","strike","string","strip","stripe","strobe","stroke","structure","strudel","struggle","stucco","student","studio","study","stuff","stumbling","stump","stupidity","sturgeon","sty","style","styling","stylus","sub","subcomponent","subconscious","subcontractor","subgroup","subject","submarine","submitter","subprime","subroutine","subscription","subsection","subset","subsidence","subsidiary","subsidy","substance","substitution","subtitle","suburb","subway","success","succotash","suede","suet","sugar","suggestion","suit","suitcase","suite","sulfur","sultan","sum","summary","summer","summit","sun","sunbeam","sunbonnet","sundae","sunday","sundial","sunflower","sunglasses","sunlamp","sunlight","sunrise","sunroom","sunset","sunshine","superiority","supermarket","supernatural","supervision","supervisor","supper","supplement","supplier","supply","support","supporter","suppression","supreme","surface","surfboard","surge","surgeon","surgery","surname","surplus","surprise","surround","surroundings","surrounds","survey","survival","survivor","sushi","suspect","suspenders","suspension","sustainment","sustenance","swallow","swamp","swan","swanling","swath","sweat","sweater","sweatshirt","sweatshop","sweatsuit","sweets","swell","swim","swimming","swimsuit","swine","swing","switch","switchboard","switching","swivel","sword","swordfight","swordfish","sycamore","symbol","symmetry","sympathy","symptom","syndicate","syndrome","synergy","synonym","synthesis","syrup","system","tab","tabby","tabernacle","table","tablecloth","tablet","tabletop","tachometer","tackle","taco","tactics","tactile","tadpole","tag","tail","tailbud","tailor","tailspin","takeover","tale","talent","talk","talking","tamale","tambour","tambourine","tan","tandem","tangerine","tank","tanker","tankful","tap","tape","tapioca","target","taro","tarragon","tart","task","tassel","taste","tatami","tattler","tattoo","tavern","tax","taxi","taxicab","taxpayer","tea","teacher","teaching","team","teammate","teapot","tear","tech","technician","technique","technology","tectonics","teen","teenager","teepee","telephone","telescreen","teletype","television","tell","teller","temp","temper","temperature","tempo","temporary","temptation","temptress","tenant","tendency","tender","tenement","tenet","tennis","tenor","tension","tensor","tent","tentacle","tenth","tepee","teriyaki","term","terminal","termination","terminology","termite","terrace","terracotta","terrapin","terrarium","territory","test","testament","testimonial","testimony","testing","text","textbook","textual","texture","thanks","thaw","theater","theft","theme","theory","therapist","therapy","thermals","thermometer","thermostat","thesis","thickness","thief","thigh","thing","thinking","thirst","thistle","thorn","thought","thousand","thread","threat","threshold","thrift","thrill","throat","throne","thrust","thug","thumb","thump","thunder","thunderbolt","thunderhead","thunderstorm","thyme","tiara","tic","tick","ticket","tide","tie","tiger","tights","tile","till","tilt","timbale","timber","time","timeline","timeout","timer","timetable","timing","timpani","tin","tinderbox","tinkle","tintype","tip","tire","tissue","titanium","title","toad","toast","toaster","today","toe","toffee","tofu","tog","toga","toilet","tolerance","tolerant","toll","tomatillo","tomato","tomb","tomography","tomorrow","ton","tonality","tone","tongue","tonic","tonight","tool","toot","tooth","toothbrush","toothpaste","toothpick","top","topic","topsail","toque","toreador","tornado","torso","torte","tortellini","tortilla","tortoise","total","tote","touch","tour","tourism","tourist","tournament","towel","tower","town","townhouse","township","toy","trace","track","tracking","tracksuit","tract","tractor","trade","trader","trading","tradition","traffic","trafficker","tragedy","trail","trailer","trailpatrol","train","trainer","training","trait","tram","trance","transaction","transcript","transfer","transit","transition","translation","transmission","transom","transparency","transport","trap","trapdoor","trash","travel","traveler","tray","treasure","treasury","treat","treatment","treaty","tree","trek","trellis","tremor","trench","trend","triad","trial","triangle","tribe","tributary","trick","trigger","trigonometry","trillion","trim","trinket","trip","tripod","tritone","triumph","trolley","trombone","troop","trooper","trophy","trouble","trousers","trout","trove","trowel","truck","trumpet","trunk","trust","trustee","truth","try","tsunami","tub","tuba","tube","tuber","tug","tugboat","tuition","tulip","tumbler","tummy","tuna","tune","tunic","tunnel","turban","turf","turkey","turmeric","turn","turning","turnip","turnover","turnstile","turret","turtle","tusk","tussle","tutu","tuxedo","tweet","tweezers","twig","twilight","twine","twins","twist","twister","twitter","type","typeface","typewriter","typhoon","ukulele","ultimatum","umbrella","unblinking","uncertainty","uncle","underestimate","underground","underneath","underpass","understanding","understatement","undertaker","underwear","underweight","underwire","underwriting","unemployment","unibody","uniform","uniformity","union","unique","unit","unity","universe","university","update","upgrade","uplift","upper","upstairs","upward","urge","urgency","urn","usage","use","user","usher","usual","utensil","utilisation","utility","utilization","vacation","vacuum","vagrant","valance","valentine","validate","validity","valley","valuable","value","vampire","van","vane","vanilla","vanity","variability","variable","variant","variation","variety","vascular","vase","vault","vaulting","veal","vector","vegetable","vegetarian","vegetation","vehicle","veil","vein","veldt","vellum","velocity","velodrome","velvet","vendor","veneer","vengeance","venison","venom","venti","venture","venue","veranda","verb","verdict","verification","vermicelli","vernacular","verse","version","vertigo","verve","vessel","vest","vestment","vet","veteran","veterinarian","veto","viability","vibe","vibraphone","vibration","vibrissae","vice","vicinity","victim","victory","video","view","viewer","vignette","villa","village","vine","vinegar","vineyard","vintage","vintner","vinyl","viola","violet","violin","virtue","virus","visa","viscose","vise","vision","visit","visitor","visor","vista","visual","vitality","vitamin","vitro","vivo","vixen","vodka","vogue","voice","void","vol","volatility","volcano","volleyball","volume","volunteer","vote","voter","voting","voyage","vulture","wad","wafer","waffle","wage","wagon","waist","waistband","wait","waiter","waiting","waitress","waiver","wake","walk","walker","walking","walkway","wall","wallaby","wallet","walnut","walrus","wannabe","want","war","warden","wardrobe","warlock","warlord","warming","warmth","warning","warrant","warren","warrior","wasabi","wash","washbasin","washcloth","washer","washtub","wasp","waste","wastebasket","wasting","watch","watcher","watchmaker","water","watercress","waterfall","waterfront","watermelon","waterskiing","waterspout","waterwheel","wave","waveform","wax","way","weakness","wealth","weapon","wear","weasel","weather","web","webinar","webmail","webpage","website","wedding","wedge","weeder","weedkiller","week","weekend","weekender","weight","weird","welcome","welfare","well","west","western","wetland","wetsuit","whack","whale","wharf","wheat","wheel","whey","whip","whirlpool","whirlwind","whisker","whiskey","whisper","whistle","white","whole","wholesale","wholesaler","whorl","wick","widget","widow","width","wife","wifi","wild","wildebeest","wilderness","wildlife","will","willow","win","wind","windage","window","windscreen","windshield","wine","winery","wing","wingman","wingtip","wink","winner","winter","wire","wiretap","wiring","wisdom","wiseguy","wish","wisteria","wit","witch","withdrawal","witness","wok","wolf","woman","wombat","wonder","wont","wood","woodchuck","woodland","woodshed","woodwind","wool","woolens","word","wording","work","workbench","worker","workforce","workhorse","working","workout","workplace","workshop","world","worm","worry","worth","wound","wrap","wraparound","wrapper","wrapping","wreck","wrecker","wren","wrench","wrestler","wriggler","wrinkle","wrist","writer","writing","wrong","xylophone","yacht","yahoo","yak","yam","yang","yard","yarn","yawl","year","yeast","yellow","yesterday","yew","yin","yoga","yogurt","yoke","yolk","young","youngster","yourself","youth","yoyo","yurt","zebra","zebrafish","zen","zephyr","zero","ziggurat","zinc","zipper","zither","zombie","zone","zoo","zoologist","zoology","zucchini"],DEFAULT_SEPERATOR="-",get_rotating_tracker_hash=function(e,t,r){return hash_elems(e,t,r)},tracker_hash_to_words=function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=DEFAULT_SEPERATOR;var r=e.to_bytes(),_=[];for(var n of range(0,len(r),4)){var a=r[n],i=r[n+1],o=r[n+2],s=r[n+3],l=get_word(16*a+(i>>4)),c=[format((15&i)>>0,"1X"),format((240&o)>>4,"1X"),format((15&o)>>0,"1X"),format((240&s)>>4,"1X"),format((15&s)>>0,"1X")];if(null===l)return null;_.append(l),_.append("".join(c))}return t.join(_)},__name__$b="enum",Enum=__class__("Enum",[object],{__module__:__name__$b}),unique=function(e){return e},__name__$c="electionguard.proof",ProofUsage=__class__("ProofUsage",[Enum],{__module__:__name__$c,Unknown:"Unknown",SecretValue:"Prove knowledge of secret value",SelectionLimit:"Prove value within selection's limit",SelectionValue:"Prove selection's value (0 or 1)"}),Proof=__class__("Proof",[Serializable],{__module__:__name__$c,_name:"Proof",usage:ProofUsage.Unknown,get __init__(){return __get__(this,function(e){object.__setattr__(e,"_name",space_between_capitals(e.__class__.__name__))})}}),__name__$d="electionguard.nonces",Nonces=__class__("Nonces",[object],{__module__:__name__$d,get __init__(){return __get__(this,function(e,t){var r=tuple([].slice.apply(arguments).slice(2));len(r)>0?e.__seed=hash_elems(t,...r):e.__seed=t})},get py_get(){return __get__(this,function(e,t){return e.get_with_headers(t)})},get get_slice(){return __get__(this,function(e,t,r){return function(){for(var _=[],n=t;n<r;n++)_.append(e.py_get(n));return _}()})},get __len__(){return __get__(this,function(e){var t=py_TypeError("Nonces does not have finite length");throw t.__cause__=null,t})},get get_with_headers(){return __get__(this,function(e,t){var r=tuple([].slice.apply(arguments).slice(2));if(t<0){var _=py_TypeError("Nonces do not support negative indices.");throw _.__cause__=null,_}return hash_elems(e.__seed,t,...r)})}}),__dlog_cache=dict([[ONE_MOD_P,0]]),__dlog_max_elem=ONE_MOD_P,__dlog_max_exp=0,discrete_log=function(e){return __in__(e,__dlog_cache)?__dlog_cache[e]:__discrete_log_internal(e)},__discrete_log_internal=async function(e){for(var t=int_to_p_unchecked(G$1);e!=__dlog_max_elem;)__dlog_max_exp+=1,__dlog_max_elem=mult_p(t,__dlog_max_elem),__dlog_cache[__dlog_max_elem]=__dlog_max_exp;return __dlog_cache[__dlog_max_elem]},__name__$e="electionguard.elgamal",ElGamalKeyPair=__class__("ElGamalKeyPair",[object],{__module__:__name__$e,get __init__(){return __get__(this,function(e,t,r){e.secret_key=t,e.public_key=r})}}),ElGamalCiphertext=__class__("ElGamalCiphertext",[object],{__module__:__name__$e,get __init__(){return __get__(this,function(e,t,r){e.pad=t,e.data=r})},get tuple(){return __get__(this,function(e){return[e.pad,e.data]})},get decrypt_known_product(){return __get__(this,function(e,t){return discrete_log(mult_p(e.data,mult_inv_p(t)))})},get decrypt(){return __get__(this,function(e,t){return e.decrypt_known_product(pow_p(e.pad,t))})},get decrypt_known_nonce(){return __get__(this,function(e,t,r){return e.decrypt_known_product(pow_p(t,r))})},get partial_decrypt(){return __get__(this,function(e,t){return pow_p(e.pad,t)})},get crypto_hash(){return __get__(this,function(e){return hash_elems(e.pad,e.data)})}}),elgamal_encrypt=function(e,t,r){return t==ZERO_MOD_Q?(log_error("ElGamal encryption requires a non-zero nonce"),null):flatmap_optional(int_to_q(e),function(e){return ElGamalCiphertext(g_pow_p(t),mult_p(g_pow_p(e),pow_p(r,t)))})},elgamal_add=function(){var e=tuple([].slice.apply(arguments).slice(0)),t=e[0];for(var r of e.__getslice__(1,null,1))t=ElGamalCiphertext(mult_p(t.pad,r.pad),mult_p(t.data,r.data));return t},__name__$f="electionguard.chaum_pedersen",DisjunctiveChaumPedersenProof=__class__("DisjunctiveChaumPedersenProof",[Proof],{__module__:__name__$f,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},usage:ProofUsage.SelectionValue,get __init__(){return __get__(this,function(e,t,r,_,n,a,i,o,s,l){if(arguments.length){var c=arguments.length-1;if(arguments[c]&&arguments[c].hasOwnProperty("__kwargtrans__")){var u=arguments[c--];for(var f in u)switch(f){case"self":e=u[f];break;case"proof_zero_pad":t=u[f];break;case"proof_zero_data":r=u[f];break;case"proof_one_pad":_=u[f];break;case"proof_one_data":n=u[f];break;case"proof_zero_challenge":a=u[f];break;case"proof_one_challenge":i=u[f];break;case"challenge":o=u[f];break;case"proof_zero_response":s=u[f];break;case"proof_one_response":l=u[f]}}}e.proof_zero_pad=t,e.proof_zero_data=r,e.proof_one_pad=_,e.proof_one_data=n,e.proof_zero_challenge=a,e.proof_one_challenge=i,e.challenge=o,e.proof_zero_response=s,e.proof_one_response=l})},get is_valid(){return __get__(this,function(e,t,r,_){if(arguments.length){var n=arguments.length-1;if(arguments[n]&&arguments[n].hasOwnProperty("__kwargtrans__")){var a=arguments[n--];for(var i in a)switch(i){case"self":e=a[i];break;case"message":t=a[i];break;case"k":r=a[i];break;case"q":_=a[i]}}}var o=t.tuple(),s=o[0],l=o[1],c=e.proof_zero_pad,u=e.proof_zero_data,f=e.proof_one_pad,p=e.proof_one_data,g=e.proof_zero_challenge,h=e.proof_one_challenge,d=e.challenge,m=e.proof_zero_response,v=e.proof_one_response,y=s.is_valid_residue(),w=l.is_valid_residue(),b=c.is_valid_residue(),k=u.is_valid_residue(),P=f.is_valid_residue(),O=p.is_valid_residue(),x=g.is_in_bounds(),I=h.is_in_bounds(),j=m.is_in_bounds(),S=v.is_in_bounds(),E=add_q(g,h)==d&&d==hash_elems(_,s,l,c,u,f,p),B=g_pow_p(m)==mult_p(c,pow_p(s,g)),z=g_pow_p(v)==mult_p(f,pow_p(s,h)),q=pow_p(r,m)==mult_p(u,pow_p(l,g)),A=mult_p(g_pow_p(h),pow_p(r,v))==mult_p(p,pow_p(l,h)),N=y&&w&&b&&k&&P&&O&&x&&I&&j&&S&&E&&B&&z&&q&&A;return N||log_warning("found an invalid Disjunctive Chaum-Pedersen proof: "+str(dict([["in_bounds_alpha",y],["in_bounds_beta",w],["in_bounds_a0",b],["in_bounds_b0",k],["in_bounds_a1",P],["in_bounds_b1",O],["in_bounds_c0",x],["in_bounds_c1",I],["in_bounds_v0",j],["in_bounds_v1",S],["consistent_c",E],["consistent_gv0",B],["consistent_gv1",z],["consistent_kv0",q],["consistent_gc1kv1",A],["k",r],["proof",e]]))),N})}});for(let e of DisjunctiveChaumPedersenProof.__bases__)__mergefields__(DisjunctiveChaumPedersenProof,e);__mergefields__(DisjunctiveChaumPedersenProof,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var ChaumPedersenProof=__class__("ChaumPedersenProof",[Proof],{__module__:__name__$f,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},usage:ProofUsage.SecretValue,get __init__(){return __get__(this,function(e,t,r,_,n){if(arguments.length){var a=arguments.length-1;if(arguments[a]&&arguments[a].hasOwnProperty("__kwargtrans__")){var i=arguments[a--];for(var o in i)switch(o){case"self":e=i[o];break;case"pad":t=i[o];break;case"data":r=i[o];break;case"challenge":_=i[o];break;case"response":n=i[o]}}}e.pad=t,e.data=r,e.challenge=_,e.response=n})},get is_valid(){return __get__(this,function(e,t,r,_,n){if(arguments.length){var a=arguments.length-1;if(arguments[a]&&arguments[a].hasOwnProperty("__kwargtrans__")){var i=arguments[a--];for(var o in i)switch(o){case"self":e=i[o];break;case"message":t=i[o];break;case"k":r=i[o];break;case"m":_=i[o];break;case"q":n=i[o]}}}var s=t.tuple(),l=s[0],c=s[1],u=e.pad,f=e.data,p=e.challenge,g=e.response,h=l.is_valid_residue(),d=c.is_valid_residue(),m=r.is_valid_residue(),v=_.is_valid_residue(),y=u.is_valid_residue(),w=f.is_valid_residue(),b=p.is_in_bounds(),k=g.is_in_bounds(),P=n.is_in_bounds(),O=p==hash_elems(n,l,c,u,f,_),x=k&&y&&b&&k&&g_pow_p(g)==mult_p(u,pow_p(r,p)),I=h&&w&&b&&k&&pow_p(l,g)==mult_p(f,pow_p(_,p)),j=h&&d&&m&&v&&y&&w&&b&&k&&P&&O&&x&&I;return j||log_warning("found an invalid Chaum-Pedersen proof: "+str(dict([["in_bounds_alpha",h],["in_bounds_beta",d],["in_bounds_k",m],["in_bounds_m",v],["in_bounds_a",y],["in_bounds_b",w],["in_bounds_c",b],["in_bounds_v",k],["in_bounds_q",P],["same_c",O],["consistent_gv",x],["consistent_av",I],["k",r],["q",n],["proof",e]]))),j})}});for(let e of ChaumPedersenProof.__bases__)__mergefields__(ChaumPedersenProof,e);__mergefields__(ChaumPedersenProof,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var ConstantChaumPedersenProof=__class__("ConstantChaumPedersenProof",[Proof],{__module__:__name__$f,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},usage:ProofUsage.SelectionLimit,get __init__(){return __get__(this,function(e,t,r,_,n,a){if(arguments.length){var i=arguments.length-1;if(arguments[i]&&arguments[i].hasOwnProperty("__kwargtrans__")){var o=arguments[i--];for(var s in o)switch(s){case"self":e=o[s];break;case"pad":t=o[s];break;case"data":r=o[s];break;case"challenge":_=o[s];break;case"response":n=o[s];break;case"constant":a=o[s]}}}e.pad=t,e.data=r,e.challenge=_,e.response=n,e.constant=a})},get is_valid(){return __get__(this,function(e,t,r,_){if(arguments.length){var n=arguments.length-1;if(arguments[n]&&arguments[n].hasOwnProperty("__kwargtrans__")){var a=arguments[n--];for(var i in a)switch(i){case"self":e=a[i];break;case"message":t=a[i];break;case"k":r=a[i];break;case"q":_=a[i]}}}var o=t.tuple(),s=o[0],l=o[1],c=e.pad,u=e.data,f=e.challenge,p=e.response,g=e.constant,h=s.is_valid_residue(),d=l.is_valid_residue(),m=c.is_valid_residue(),v=u.is_valid_residue(),y=f.is_in_bounds(),w=p.is_in_bounds(),b=int_to_q(g);if(null===b)var k=ZERO_MOD_Q,P=!1;else k=b,P=!0;var O=0<=g&&g<1e9,x=f==hash_elems(_,s,l,c,u),I=w&&m&&h&&y&&g_pow_p(p)==mult_p(c,pow_p(s,f)),j=P&&mult_p(g_pow_p(mult_p(f,k)),pow_p(r,p))==mult_p(u,pow_p(l,f)),S=h&&d&&m&&v&&y&&w&&x&&P&&O&&I&&j;return S||log_warning("found an invalid Constant Chaum-Pedersen proof: "+str(dict([["in_bounds_alpha",h],["in_bounds_beta",d],["in_bounds_a",m],["in_bounds_b",v],["in_bounds_c",y],["in_bounds_v",w],["in_bounds_constant",P],["sane_constant",O],["same_c",x],["consistent_gv",I],["consistent_kv",j],["k",r],["proof",e]]))),S})}});for(let e of ConstantChaumPedersenProof.__bases__)__mergefields__(ConstantChaumPedersenProof,e);__mergefields__(ConstantChaumPedersenProof,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var make_disjunctive_chaum_pedersen=function(e,t,r,_,n,a){if(arguments.length){var i=arguments.length-1;if(arguments[i]&&arguments[i].hasOwnProperty("__kwargtrans__")){var o=arguments[i--];for(var s in o)switch(s){case"message":e=o[s];break;case"r":t=o[s];break;case"k":r=o[s];break;case"q":_=o[s];break;case"seed":n=o[s];break;case"plaintext":a=o[s]}}}return 0==a?make_disjunctive_chaum_pedersen_zero(e,t,r,_,n):make_disjunctive_chaum_pedersen_one(e,t,r,_,n)},make_disjunctive_chaum_pedersen_zero=function(e,t,r,_,n){if(arguments.length){var a=arguments.length-1;if(arguments[a]&&arguments[a].hasOwnProperty("__kwargtrans__")){var i=arguments[a--];for(var o in i)switch(o){case"message":e=i[o];break;case"r":t=i[o];break;case"k":r=i[o];break;case"q":_=i[o];break;case"seed":n=i[o]}}}var s,l=(s=e.tuple())[0],c=s[1],u=(s=Nonces(n,"disjoint-chaum-pedersen-proof").get_slice(0,3))[0],f=s[1],p=s[2],g=g_pow_p(p),h=pow_p(r,p),d=negate_q(u),m=mult_p(g_pow_p(f),pow_p(l,d)),v=mult_p(pow_p(r,f),g_pow_p(u),pow_p(c,d)),y=hash_elems(_,l,c,g,h,m,v),w=a_minus_b_q(y,u),b=a_plus_bc_q(p,w,t);return DisjunctiveChaumPedersenProof(g,h,m,v,w,u,y,b,f)},make_disjunctive_chaum_pedersen_one=function(e,t,r,_,n){if(arguments.length){var a=arguments.length-1;if(arguments[a]&&arguments[a].hasOwnProperty("__kwargtrans__")){var i=arguments[a--];for(var o in i)switch(o){case"message":e=i[o];break;case"r":t=i[o];break;case"k":r=i[o];break;case"q":_=i[o];break;case"seed":n=i[o]}}}var s,l=(s=e.tuple())[0],c=s[1],u=(s=Nonces(n,"disjoint-chaum-pedersen-proof").get_slice(0,3))[0],f=s[1],p=s[2],g=negate_q(u),h=mult_p(g_pow_p(f),pow_p(l,g)),d=mult_p(pow_p(r,f),pow_p(c,g)),m=g_pow_p(p),v=pow_p(r,p),y=hash_elems(_,l,c,h,d,m,v),w=a_minus_b_q(y,u),b=a_plus_bc_q(p,w,t);return DisjunctiveChaumPedersenProof(h,d,m,v,u,w,y,f,b)},make_constant_chaum_pedersen=function(e,t,r,_,n,a){if(arguments.length){var i=arguments.length-1;if(arguments[i]&&arguments[i].hasOwnProperty("__kwargtrans__")){var o=arguments[i--];for(var s in o)switch(s){case"message":e=o[s];break;case"constant":t=o[s];break;case"r":r=o[s];break;case"k":_=o[s];break;case"seed":n=o[s];break;case"hash_header":a=o[s]}}}var l=e.tuple(),c=l[0],u=l[1],f=Nonces(n,"constant-chaum-pedersen-proof").py_get(0),p=g_pow_p(f),g=pow_p(_,f),h=hash_elems(a,c,u,p,g),d=a_plus_bc_q(f,h,r);return ConstantChaumPedersenProof(p,g,h,d,t)},__name__$g="electionguard.ballot",_list_eq=function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"list1":e=_[n];break;case"list2":t=_[n]}}}return sorted(e,__kwargtrans__({key:function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"x":e=r[_]}}}return e.object_id}}))==sorted(t,__kwargtrans__({key:function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"x":e=r[_]}}}return e.object_id}}))},ExtendedData=__class__("ExtendedData",[object],{__module__:__name__$g,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})}});for(let e of ExtendedData.__bases__)__mergefields__(ExtendedData,e);__mergefields__(ExtendedData,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var PlaintextBallotSelection=__class__("PlaintextBallotSelection",[ElectionObjectBase],{__module__:__name__$g,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["vote",str],["is_placeholder_selection",bool],["extended_data",ExtendedData]],is_placeholder_selection:field(__kwargtrans__({py_default:!1})),extended_data:field(__kwargtrans__({py_default:null})),get is_valid(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"expected_object_id":t=_[n]}}}if(e.object_id!=t)return log_warning("{}{}{}{}{}".format(t,e.object_id)),!1;var a=e.to_int();return!(a<0||a>1)||(log_warning("{}{}".format(str(e))),!1)})},get to_int(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}var n=str(e.vote).lower();if(null===(a=dict([["y",1],["yes",1],["true",1],["on",1],["1",1],["n",0],["no",0],["f",0],["false",0],["off",0],["0",0]]).py_get(n))){log_warning("{}{}{}".format(n));var a=0}return a})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return isinstance(t,PlaintextBallotSelection)&&e.object_id==t.object_id&&e.vote==t.vote&&e.is_placeholder_selection==t.is_placeholder_selection&&e.extended_data==t.extended_data})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return!e.__eq__(t)})}});for(let e of PlaintextBallotSelection.__bases__)__mergefields__(PlaintextBallotSelection,e);__mergefields__(PlaintextBallotSelection,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var CiphertextSelection=__class__("CiphertextSelection",[object],{__module__:__name__$g}),CiphertextBallotSelection=__class__("CiphertextBallotSelection",[ElectionObjectBase,CiphertextSelection,CryptoHashCheckable],{__module__:__name__$g,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["description_hash",ElementModQ],["ciphertext",ElGamalCiphertext],["crypto_hash",ElementModQ],["is_placeholder_selection",bool],["nonce",Nonces],["proof",Proof],["extended_data",ExtendedData]],is_placeholder_selection:field(__kwargtrans__({py_default:!1})),nonce:field(__kwargtrans__({py_default:null})),proof:field(__kwargtrans__({py_default:null})),extended_data:field(__kwargtrans__({py_default:null})),get is_valid_encryption(){return __get__(this,function(e,t,r,_){if(arguments.length){var n=arguments.length-1;if(arguments[n]&&arguments[n].hasOwnProperty("__kwargtrans__")){var a=arguments[n--];for(var i in a)switch(i){case"self":a[i];break;case"seed_hash":a[i];break;case"elgamal_public_key":a[i];break;case"crypto_extended_base_hash":a[i]}}}return!0})},get crypto_hash_with(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"seed_hash":t=_[n]}}}return _ciphertext_ballot_selection_crypto_hash_with(e.object_id,t,e.ciphertext)})}});for(let e of CiphertextBallotSelection.__bases__)__mergefields__(CiphertextBallotSelection,e);__mergefields__(CiphertextBallotSelection,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var _ciphertext_ballot_selection_crypto_hash_with=function(e,t,r){if(arguments.length){var _=arguments.length-1;if(arguments[_]&&arguments[_].hasOwnProperty("__kwargtrans__")){var n=arguments[_--];for(var a in n)switch(a){case"object_id":e=n[a];break;case"seed_hash":t=n[a];break;case"ciphertext":r=n[a]}}}return hash_elems(e,t,r.crypto_hash())},make_ciphertext_ballot_selection=function(e,t,r,_,n,a,i,o,s,l,c,u){if(void 0===o||null!=o&&o.hasOwnProperty("__kwargtrans__"))o=!1;if(void 0===s||null!=s&&s.hasOwnProperty("__kwargtrans__"))s=null;if(void 0===l||null!=l&&l.hasOwnProperty("__kwargtrans__"))l=null;if(void 0===c||null!=c&&c.hasOwnProperty("__kwargtrans__"))c=null;if(void 0===u||null!=u&&u.hasOwnProperty("__kwargtrans__"))u=null;if(arguments.length){var f=arguments.length-1;if(arguments[f]&&arguments[f].hasOwnProperty("__kwargtrans__")){var p=arguments[f--];for(var g in p)switch(g){case"object_id":e=p[g];break;case"description_hash":t=p[g];break;case"ciphertext":r=p[g];break;case"elgamal_public_key":_=p[g];break;case"crypto_extended_base_hash":n=p[g];break;case"proof_seed":a=p[g];break;case"selection_representation":i=p[g];break;case"is_placeholder_selection":o=p[g];break;case"nonce":s=p[g];break;case"crypto_hash":l=p[g];break;case"proof":c=p[g];break;case"extended_data":u=p[g]}}}if(null===l)l=_ciphertext_ballot_selection_crypto_hash_with(e,t,r);if(null===c)c=flatmap_optional(s,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var o=arguments[t--];for(var s in o)switch(s){case"n":e=o[s]}}}return make_disjunctive_chaum_pedersen(r,e,_,n,a,i)});return CiphertextBallotSelection(__kwargtrans__({object_id:e,description_hash:t,ciphertext:r,is_placeholder_selection:o,nonce:s,crypto_hash:l,proof:c,extended_data:u}))},PlaintextBallotContest=__class__("PlaintextBallotContest",[ElectionObjectBase],{__module__:__name__$g,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["ballot_selections",[PlaintextBallotSelection]]],ballot_selections:field(__kwargtrans__({default_factory:function(){if(arguments.length){var e=arguments.length-1;if(arguments[e]&&arguments[e].hasOwnProperty("__kwargtrans__"))arguments[e--]}return[]}})),get is_valid(){return __get__(this,function(e,t,r,_,n){if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=null;if(arguments.length){var a=arguments.length-1;if(arguments[a]&&arguments[a].hasOwnProperty("__kwargtrans__")){var i=arguments[a--];for(var o in i)switch(o){case"self":e=i[o];break;case"expected_object_id":t=i[o];break;case"expected_number_selections":r=i[o];break;case"expected_number_elected":_=i[o];break;case"votes_allowed":n=i[o]}}}if(e.object_id!=t)return log_warning("{}{}{}{}{}".format(t,e.object_id)),!1;if(len(e.ballot_selections)>r)return log_warning("{}{}{}{}{}".format(r,len(e.ballot_selections))),!1;var s=0,l=0;for(var c of e.ballot_selections){var u=c.to_int();l+=u,u>=1&&(s+=1)}return s>_?(log_warning("{}{}{}{}{}".format(_,s)),!1):!(null!==n&&l>n)||(log_warning("{}{}{}{}{}".format(n,l)),!1)})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return isinstance(t,PlaintextBallotContest)&&_list_eq(e.ballot_selections,t.ballot_selections)})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return!e.__eq__(t)})}});for(let e of PlaintextBallotContest.__bases__)__mergefields__(PlaintextBallotContest,e);__mergefields__(PlaintextBallotContest,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var CiphertextBallotContest=__class__("CiphertextBallotContest",[ElectionObjectBase,CryptoHashCheckable],{__module__:__name__$g,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["description_hash",ElementModQ],["ballot_selections",[CiphertextBallotSelection]],["crypto_hash",ElementModQ],["nonce",Nonces],["proof",Proof]],nonce:null,proof:null,get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return isinstance(t,CiphertextBallotContest)&&e.object_id==t.object_id&&_list_eq(e.ballot_selections,t.ballot_selections)&&e.description_hash==t.description_hash&&e.crypto_hash==t.crypto_hash&&e.nonce==t.nonce&&e.proof==t.proof})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return!e.__eq__(t)})},get aggregate_nonce(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return _ciphertext_ballot_contest_aggregate_nonce(e.object_id,e.ballot_selections)})},get crypto_hash_with(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"seed_hash":t=_[n]}}}return _ciphertext_ballot_context_crypto_hash(e.object_id,e.ballot_selections,t)})},get elgamal_accumulate(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return _ciphertext_ballot_elgamal_accumulate(e.ballot_selections)})},get is_valid_encryption(){return __get__(this,function(e,t,r,_){if(arguments.length){var n=arguments.length-1;if(arguments[n]&&arguments[n].hasOwnProperty("__kwargtrans__")){var a=arguments[n--];for(var i in a)switch(i){case"self":a[i];break;case"seed_hash":a[i];break;case"elgamal_public_key":a[i];break;case"crypto_extended_base_hash":a[i]}}}return!0})}});for(let e of CiphertextBallotContest.__bases__)__mergefields__(CiphertextBallotContest,e);__mergefields__(CiphertextBallotContest,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var _ciphertext_ballot_elgamal_accumulate=function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"ballot_selections":e=r[_]}}}return elgamal_add(...function(){var t=[];for(var r of e)t.append(r.ciphertext);return t}())},_ciphertext_ballot_context_crypto_hash=function(e,t,r){if(arguments.length){var _=arguments.length-1;if(arguments[_]&&arguments[_].hasOwnProperty("__kwargtrans__")){var n=arguments[_--];for(var a in n)switch(a){case"object_id":e=n[a];break;case"ballot_selections":t=n[a];break;case"seed_hash":r=n[a]}}}if(0==len(t))return log_warning("{}{}{}".format(e)),ZERO_MOD_Q;var i=function(){var e=[];for(var r of t)e.append(r.crypto_hash);return e}();return hash_elems(e,r,...i)},_ciphertext_ballot_contest_aggregate_nonce=function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"object_id":e=_[n];break;case"ballot_selections":t=_[n]}}}var a=list();for(var i of t){if(null===i.nonce)return log_warning("{}{}{}".format(e)),null;a.append(i.nonce)}return add_q(...a)},make_ciphertext_ballot_contest=function(e,t,r,_,n,a,i,o,s,l){if(void 0===o||null!=o&&o.hasOwnProperty("__kwargtrans__"))o=null;if(void 0===s||null!=s&&s.hasOwnProperty("__kwargtrans__"))s=null;if(void 0===l||null!=l&&l.hasOwnProperty("__kwargtrans__"))l=null;if(arguments.length){var c=arguments.length-1;if(arguments[c]&&arguments[c].hasOwnProperty("__kwargtrans__")){var u=arguments[c--];for(var f in u)switch(f){case"object_id":e=u[f];break;case"description_hash":t=u[f];break;case"ballot_selections":r=u[f];break;case"elgamal_public_key":_=u[f];break;case"crypto_extended_base_hash":n=u[f];break;case"proof_seed":a=u[f];break;case"number_elected":i=u[f];break;case"crypto_hash":o=u[f];break;case"proof":s=u[f];break;case"nonce":l=u[f]}}}if(null===o)o=_ciphertext_ballot_context_crypto_hash(e,r,t);var p=_ciphertext_ballot_contest_aggregate_nonce(e,r);if(null===s)s=flatmap_optional(p,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var o=arguments[t--];for(var s in o)switch(s){case"ag":e=o[s]}}}return make_constant_chaum_pedersen(__kwargtrans__({message:_ciphertext_ballot_elgamal_accumulate(r),constant:i,r:e,k:_,seed:a,hash_header:n}))});return CiphertextBallotContest(__kwargtrans__({object_id:e,description_hash:t,ballot_selections:r,nonce:l,crypto_hash:o,proof:s}))},PlaintextBallot=__class__("PlaintextBallot",[ElectionObjectBase],{__module__:__name__$g,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["ballot_style",str],["contests",[PlaintextBallotContest]]],get is_valid(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"expected_ballot_style_id":t=_[n]}}}return e.ballot_style==t||(log_warning("{}{}{}{}{}{}{}".format(e.object_id,t,e.ballot_style)),!1)})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return isinstance(t,PlaintextBallot)&&e.ballot_style==t.ballot_style&&_list_eq(e.contests,t.contests)})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return!e.__eq__(t)})}});for(let e of PlaintextBallot.__bases__)__mergefields__(PlaintextBallot,e);__mergefields__(PlaintextBallot,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var CiphertextBallot=__class__("CiphertextBallot",[ElectionObjectBase,CryptoHashCheckable],{__module__:__name__$g,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["ballot_style",str],["description_hash",ElementModQ],["previous_tracking_hash",ElementModQ],["contests",[CiphertextBallotContest]],["tracking_hash",[ElementModQ]],["timestamp",int],["crypto_hash",ElementModQ],["nonce",[ElementModQ]]],get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return isinstance(t,CiphertextBallot)&&e.object_id==t.object_id&&e.ballot_style==t.ballot_style&&e.description_hash==t.description_hash&&e.previous_tracking_hash==t.previous_tracking_hash&&_list_eq(e.contests,t.contests)&&e.tracking_hash==t.tracking_hash&&e.timestamp==t.timestamp&&e.crypto_hash==t.crypto_hash&&e.nonce==t.nonce})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return!e.__eq__(t)})},get nonce_seed(){return function(e,t,r){if(arguments.length){var _=arguments.length-1;if(arguments[_]&&arguments[_].hasOwnProperty("__kwargtrans__")){var n=arguments[_--];for(var a in n)switch(a){case"description_hash":e=n[a];break;case"object_id":t=n[a];break;case"nonce":r=n[a]}}}return hash_elems(e,t,r)}},get hashed_ballot_nonce(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return null===e.nonce?(log_warning("{}{}{}".format(e.object_id)),null):e.nonce_seed(e.description_hash,e.object_id,e.nonce)})},get get_tracker_code(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return e.tracking_hash?tracker_hash_to_words(e.tracking_hash):null})},get crypto_hash_with(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"seed_hash":t=_[n]}}}if(0==len(e.contests))return log_warning("{}{}{}".format(e.object_id)),ZERO_MOD_Q;var a=function(){var t=[];for(var r of e.contests)t.append(r.crypto_hash);return t}();return hash_elems(e.object_id,t,...a)})},get is_valid_encryption(){return __get__(this,function(e,t,r,_){if(arguments.length){var n=arguments.length-1;if(arguments[n]&&arguments[n].hasOwnProperty("__kwargtrans__")){var a=arguments[n--];for(var i in a)switch(i){case"self":a[i];break;case"seed_hash":a[i];break;case"elgamal_public_key":a[i];break;case"crypto_extended_base_hash":a[i]}}}return!0})}});for(let e of CiphertextBallot.__bases__)__mergefields__(CiphertextBallot,e);__mergefields__(CiphertextBallot,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var BallotBoxState=__class__("BallotBoxState",[Enum],{__module__:__name__$g,CAST:1,SPOILED:2,UNKNOWN:999}),CiphertextAcceptedBallot=__class__("CiphertextAcceptedBallot",[CiphertextBallot],{__module__:__name__$g,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return isinstance(t,CiphertextAcceptedBallot)&&__super__(CiphertextAcceptedBallot,"__eq__")(e,e,t)&&e.state==t.state})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return!e.__eq__(t)})}});for(let e of CiphertextAcceptedBallot.__bases__)__mergefields__(CiphertextAcceptedBallot,e);__mergefields__(CiphertextAcceptedBallot,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var make_ciphertext_ballot=function(e,t,r,_,n,a,i,o){if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=null;if(void 0===i||null!=i&&i.hasOwnProperty("__kwargtrans__"))i=null;if(void 0===o||null!=o&&o.hasOwnProperty("__kwargtrans__"))o=null;if(arguments.length){var s=arguments.length-1;if(arguments[s]&&arguments[s].hasOwnProperty("__kwargtrans__")){var l=arguments[s--];for(var c in l)switch(c){case"object_id":e=l[c];break;case"ballot_style":t=l[c];break;case"description_hash":r=l[c];break;case"previous_tracking_hash":_=l[c];break;case"contests":n=l[c];break;case"nonce":a=l[c];break;case"timestamp":i=l[c];break;case"tracking_hash":o=l[c]}}}0==len(n)&&log_warning("{}".format());var u=function(){var e=[];for(var t of n)e.append(t.crypto_hash);return e}(),f=hash_elems(e,r,...u);i=null===i?to_ticks(datetime.now()):i;if(null===_)_=r;if(null===o)o=get_rotating_tracker_hash(_,i,f);return CiphertextBallot(__kwargtrans__({object_id:e,ballot_style:t,description_hash:r,previous_tracking_hash:_,contests:n,tracking_hash:o,timestamp:i,nonce:a,crypto_hash:f}))},__name__$h="electionguard.election",ElectionType=unique(__class__("ElectionType",[Enum],{__module__:__name__$h,unknown:0,general:1,partisan_primary_closed:2,partisan_primary_open:3,primary:4,runoff:5,special:6,other:7})),ReportingUnitType=unique(__class__("ReportingUnitType",[Enum],{__module__:__name__$h,unknown:0,ballot_batch:1,ballot_style_area:2,borough:3,city:4,city_council:5,combined_precinct:6,congressional:7,country:8,county:9,county_council:10,drop_box:11,judicial:12,municipality:13,polling_place:14,precinct:15,school:16,special:17,split_precinct:18,state:19,state_house:20,state_senate:21,township:22,utility:23,village:24,vote_center:25,ward:26,water:27,other:28})),VoteVariationType=unique(__class__("VoteVariationType",[Enum],{__module__:__name__$h,unknown:0,one_of_m:1,approval:2,borda:3,cumulative:4,majority:5,n_of_m:6,plurality:7,proportional:8,range:9,rcv:10,super_majority:11,other:12})),AnnotatedString=__class__("AnnotatedString",[Serializable,CryptoHashable],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},annotation:field(__kwargtrans__({py_default:""})),value:field(__kwargtrans__({py_default:""})),get crypto_hash(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return hash_elems(e.annotation,e.value)})}});for(let e of AnnotatedString.__bases__)__mergefields__(AnnotatedString,e);__mergefields__(AnnotatedString,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var Language=__class__("Language",[Serializable,CryptoHashable],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},language:field(__kwargtrans__({py_default:"en"})),get crypto_hash(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return hash_elems(e.value,e.language)})}});for(let e of Language.__bases__)__mergefields__(Language,e);__mergefields__(Language,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var InternationalizedText=__class__("InternationalizedText",[Serializable,CryptoHashable],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},text:field(__kwargtrans__({default_factory:function(){if(arguments.length){var e=arguments.length-1;if(arguments[e]&&arguments[e].hasOwnProperty("__kwargtrans__"))arguments[e--]}return[]}})),get crypto_hash(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return hash_elems(e.text)})}});for(let e of InternationalizedText.__bases__)__mergefields__(InternationalizedText,e);__mergefields__(InternationalizedText,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var ContactInformation=__class__("ContactInformation",[Serializable,CryptoHashable],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},address_line:field(__kwargtrans__({py_default:null})),email:field(__kwargtrans__({py_default:null})),phone:field(__kwargtrans__({py_default:null})),_name:field(__kwargtrans__({py_default:null})),get crypto_hash(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return hash_elems(e._name,e.address_line,e.email,e.phone)})}});for(let e of ContactInformation.__bases__)__mergefields__(ContactInformation,e);__mergefields__(ContactInformation,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var GeopoliticalUnit=__class__("GeopoliticalUnit",[ElectionObjectBase,CryptoHashable],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["_name",str],["_type",ReportingUnitType],["contact_information",ContactInformation]],contact_information:field(__kwargtrans__({py_default:null})),get crypto_hash(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return hash_elems(e.object_id,e._name,str(e._type._name),e.contact_information)})}});for(let e of GeopoliticalUnit.__bases__)__mergefields__(GeopoliticalUnit,e);__mergefields__(GeopoliticalUnit,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var BallotStyle=__class__("BallotStyle",[ElectionObjectBase,CryptoHashable],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["geopolitical_unit_ids",[str]],["party_ids","Optional"],["image_uri",str]],geopolitical_unit_ids:field(__kwargtrans__({py_default:null})),party_ids:field(__kwargtrans__({py_default:null})),image_uri:field(__kwargtrans__({py_default:null})),get crypto_hash(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return hash_elems(e.object_id,e.geopolitical_unit_ids,e.party_ids,e.image_uri)})}});for(let e of BallotStyle.__bases__)__mergefields__(BallotStyle,e);__mergefields__(BallotStyle,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var Party=__class__("Party",[ElectionObjectBase,CryptoHashable],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["ballot_name",InternationalizedText],["abbreviation",str],["color",str],["logo_uri",str]],ballot_name:field(__kwargtrans__({py_default:InternationalizedText()})),abbreviation:field(__kwargtrans__({py_default:null})),color:field(__kwargtrans__({py_default:null})),logo_uri:field(__kwargtrans__({py_default:null})),get get_party_id(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return e.object_id})},get crypto_hash(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return hash_elems(e.object_id,e.ballot_name,e.abbreviation,e.color,e.logo_uri)})}});for(let e of Party.__bases__)__mergefields__(Party,e);__mergefields__(Party,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var Candidate=__class__("Candidate",[ElectionObjectBase,CryptoHashable],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["ballot_name",InternationalizedText],["party_id",str],["image_uri",str],["is_write_in",bool]],ballot_name:field(__kwargtrans__({py_default:InternationalizedText()})),party_id:field(__kwargtrans__({py_default:null})),image_uri:field(__kwargtrans__({py_default:null})),is_write_in:field(__kwargtrans__({py_default:null})),get get_candidate_id(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return e.object_id})},get crypto_hash(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return hash_elems(e.object_id,e.ballot_name,e.party_id,e.image_uri)})}});for(let e of Candidate.__bases__)__mergefields__(Candidate,e);__mergefields__(Candidate,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var SelectionDescription=__class__("SelectionDescription",[ElectionObjectBase,CryptoHashable],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["candidate_id",str],["sequence_order",int]],get crypto_hash(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return hash_elems(e.object_id,e.sequence_order,e.candidate_id)})}});for(let e of SelectionDescription.__bases__)__mergefields__(SelectionDescription,e);__mergefields__(SelectionDescription,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var ContestDescription=__class__("ContestDescription",[ElectionObjectBase,CryptoHashable],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["electoral_district_id",str],["sequence_order",int],["vote_variation",VoteVariationType],["number_elected",int],["votes_allowed","Optional"],["_name",str],["ballot_selections",[SelectionDescription]],["ballot_title",str],["ballot_subtitle",str]],ballot_selections:field(__kwargtrans__({default_factory:function(){if(arguments.length){var e=arguments.length-1;if(arguments[e]&&arguments[e].hasOwnProperty("__kwargtrans__"))arguments[e--]}return[]}})),ballot_title:field(__kwargtrans__({py_default:null})),ballot_subtitle:field(__kwargtrans__({py_default:null})),get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return isinstance(t,ContestDescription)&&e.electoral_district_id==t.electoral_district_id&&e.sequence_order==t.sequence_order&&e.votes_allowed==t.votes_allowed&&e.number_elected==t.number_elected&&e.votes_allowed==t.votes_allowed&&e._name==t._name&&_list_eq(e.ballot_selections,t.ballot_selections)&&e.ballot_title==t.ballot_title&&e.ballot_subtitle==t.ballot_subtitle})},get crypto_hash(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return hash_elems(e.object_id,e.sequence_order,e.electoral_district_id,str(e.vote_variation._name),e.ballot_title,e.ballot_subtitle,e._name,e.number_elected,e.votes_allowed,e.ballot_selections)})},get is_valid(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}var n=e.number_elected<=len(e.ballot_selections),a=null===e.votes_allowed||e.number_elected<=e.votes_allowed,i=set(),o=set(),s=set(),l=len(e.ballot_selections);for(var c of e.ballot_selections)__in__(c.object_id,o)||o.add(c.object_id),__in__(c.sequence_order,s)||s.add(c.sequence_order),__in__(c.candidate_id,i)||i.add(c.candidate_id);var u=len(i)==l,f=len(o)==l,p=len(s)==l,g=n&&a&&u&&f&&p;return g||log_warning("Contest %s failed validation check: %s",e.object_id,str(dict([["contest_has_valid_number_elected",n],["contest_has_valid_votes_allowed",a],["selections_have_valid_candidate_ids",u],["selections_have_valid_selection_ids",f],["selections_have_valid_sequence_ids",p]]))),g})}});for(let e of ContestDescription.__bases__)__mergefields__(ContestDescription,e);__mergefields__(ContestDescription,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var CandidateContestDescription=__class__("CandidateContestDescription",[ContestDescription],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},primary_party_ids:field(__kwargtrans__({default_factory:function(){if(arguments.length){var e=arguments.length-1;if(arguments[e]&&arguments[e].hasOwnProperty("__kwargtrans__"))arguments[e--]}return[]}}))});for(let e of CandidateContestDescription.__bases__)__mergefields__(CandidateContestDescription,e);__mergefields__(CandidateContestDescription,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var ReferendumContestDescription=__class__("ReferendumContestDescription",[ContestDescription],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})}});for(let e of ReferendumContestDescription.__bases__)__mergefields__(ReferendumContestDescription,e);__mergefields__(ReferendumContestDescription,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var ContestDescriptionWithPlaceholders=__class__("ContestDescriptionWithPlaceholders",[ContestDescription],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},placeholder_selections:field(__kwargtrans__({default_factory:function(){if(arguments.length){var e=arguments.length-1;if(arguments[e]&&arguments[e].hasOwnProperty("__kwargtrans__"))arguments[e--]}return[]}})),get is_valid(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return __super__(ContestDescriptionWithPlaceholders,"is_valid")(e)&&len(e.placeholder_selections)==e.number_elected})},get is_placeholder(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"selection":t=_[n]}}}return __in__(t,e.placeholder_selections)})},get selection_for(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"selection_id":t=_[n]}}}var a=list(filter(function(e){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"i":e=_[n]}}}return e.object_id==t},e.ballot_selections));if(any(a))return a[0];var i=list(filter(function(e){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"i":e=_[n]}}}return e.object_id==t},e.placeholder_selections));return any(i)?i[0]:null})}});for(let e of ContestDescriptionWithPlaceholders.__bases__)__mergefields__(ContestDescriptionWithPlaceholders,e);__mergefields__(ContestDescriptionWithPlaceholders,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var ElectionDescription=__class__("ElectionDescription",[Serializable,CryptoHashable],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["election_scope_id",str],["_type",ElectionType],["start_date",datetime],["end_date",datetime],["geopolitical_units",[GeopoliticalUnit]],["parties",[Party]],["candidates",[Candidate]],["contests",[ContestDescription]],["ballot_styles",[BallotStyle]],["_name",str],["contact_information",ContactInformation]],_name:field(__kwargtrans__({py_default:null})),contact_information:field(__kwargtrans__({py_default:null})),get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}return isinstance(t,ElectionDescription)&&e.election_scope_id==t.election_scope_id&&e._type==t._type&&e.start_date==t.start_date&&e.end_date==t.end_date&&_list_eq(e.geopolitical_units,t.geopolitical_units)&&_list_eq(e.parties,t.parties)&&_list_eq(e.candidates,t.candidates)&&_list_eq(e.contests,t.contests)&&_list_eq(e.ballot_styles,t.ballot_styles)&&e._name==t._name&&e.contact_information==t.contact_information})},get crypto_hash(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}return hash_elems(e.election_scope_id,str(e._type._name),to_ticks(e.start_date),to_ticks(e.end_date),e._name,e.contact_information,e.geopolitical_units,e.parties,e.contests,e.ballot_styles)})},get is_valid(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}var n=set(),a=set(),i=set(),o=set(),s=set();set();for(var l of e.geopolitical_units)__in__(l.object_id,n)||n.add(l.object_id);var c=len(n)==len(e.geopolitical_units),u=!0;for(var f of e.ballot_styles){if(__in__(f.object_id,a)||a.add(f.object_id),null===f.geopolitical_unit_ids){u=!1;break}for(var p of f.geopolitical_unit_ids)u=u&&__in__(p,n)}var g=len(a)==len(e.ballot_styles)&&u;for(var h of e.parties)__in__(h.object_id,i)||i.add(h.object_id);var d=len(i)==len(e.parties),m=!0;for(var v of e.candidates){__in__(v.object_id,o)||o.add(v.object_id);m=m&&(null===v.party_id||__in__(v.party_id,i))}var y=len(o)==len(e.candidates),w=y&&m,b=!0,k=!0,P=!0,O=set();for(var x of e.contests){b=b&&x.is_valid();__in__(x.object_id,s)||s.add(x.object_id),__in__(x.sequence_order,O)||O.add(x.sequence_order);k=k&&__in__(x.electoral_district_id,n);if(isinstance(x,CandidateContestDescription)){var I=cast(CandidateContestDescription,x);if(null!==I.primary_party_ids)for(var j of I.primary_party_ids)P=P&&__in__(j,i)}}var S=len(s)==len(e.contests),E=len(O)==len(e.contests),B=S&&E&&b&&k&&P,z=c&&g&&d&&w&&B;return z||log_warning("Election failed validation check: is_valid: %s",str(dict([["geopolitical_units_valid",c],["ballot_styles_valid",g],["ballot_styles_have_valid_gp_unit_ids",u],["parties_valid",d],["candidates_valid",w],["candidates_have_valid_length",y],["candidates_have_valid_party_ids",m],["contests_valid",B],["contests_have_valid_object_ids",S],["contests_have_valid_sequence_ids",E],["contests_validate_their_properties",b],["contests_have_valid_electoral_district_id",k],["candidate_contests_have_valid_party_ids",P]]))),z})}});for(let e of ElectionDescription.__bases__)__mergefields__(ElectionDescription,e);__mergefields__(ElectionDescription,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var InternalElectionDescription=__class__("InternalElectionDescription",[object],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},description:null,geopolitical_units:field(__kwargtrans__({init:!1})),contests:field(__kwargtrans__({init:!1})),ballot_styles:field(__kwargtrans__({init:!1})),description_hash:field(__kwargtrans__({init:!1})),get __init__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"description":t=_[n]}}}e.description_hash=t.crypto_hash(),e.geopolitical_units=t.geopolitical_units,e.ballot_styles=t.ballot_styles,e.contests=e._generate_contests_with_placeholders(t)})},get contest_for(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"contest_id":t=_[n]}}}var a=list(filter(function(e){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"i":e=_[n]}}}return e.object_id==t},e.contests));return any(a)?a[0]:null})},get get_ballot_style(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"ballot_style_id":t=_[n]}}}return list(filter(function(e){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"i":e=_[n]}}}return e.object_id==t},e.ballot_styles))[0]})},get get_contests_for(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"ballot_style_id":t=_[n]}}}var a=e.get_ballot_style(t);if(null===a.geopolitical_unit_ids)return list();var i=function(){var e=[];for(var t of a.geopolitical_unit_ids)e.append(t);return e}();return list(filter(function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"i":e=r[_]}}}return __in__(e.electoral_district_id,i)},e.contests))})},get _generate_contests_with_placeholders(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":_[n];break;case"description":t=_[n]}}}var a=list();for(var i of t.contests){var o=generate_placeholder_selections_from(i,i.number_elected);a.append(contest_description_with_placeholders_from(i,o))}return a})}});for(let e of InternalElectionDescription.__bases__)__mergefields__(InternalElectionDescription,e);__mergefields__(InternalElectionDescription,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var ElectionConstants=__class__("ElectionConstants",[Serializable],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},large_prime:P,small_prime:Q,cofactor:R,generator:G$1});for(let e of ElectionConstants.__bases__)__mergefields__(ElectionConstants,e);__mergefields__(ElectionConstants,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var CiphertextElectionContext=__class__("CiphertextElectionContext",[Serializable],{__module__:__name__$h,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"self":e=r[_]}}}let n=e.__reprfields__.values(),a=[];for(let t of n)a.push(t+"="+repr(e[t]));return e.__name__+"("+", ".join(a)+")"})},get __eq__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__eq__(list(o))})},get __ne__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ne__(list(o))})},get __lt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__lt__(list(o))})},get __le__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__le__(list(o))})},get __gt__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__gt__(list(o))})},get __ge__(){return __get__(this,function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;case"other":t=_[n]}}}let a=e.__comparefields__.values(),i=[],o=[];for(let r of a)i.push(e[r]),o.push(t[r]);return list(i).__ge__(list(o))})},_types:[["number_of_guardians",int],["quorum",int],["elgamal_public_key",ElementModP],["description_hash",ElementModQ],["crypto_base_hash",ElementModQ],["crypto_extended_base_hash",ElementModQ]]});for(let e of CiphertextElectionContext.__bases__)__mergefields__(CiphertextElectionContext,e);__mergefields__(CiphertextElectionContext,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var make_ciphertext_election_context=function(e,t,r,_){if(arguments.length){var n=arguments.length-1;if(arguments[n]&&arguments[n].hasOwnProperty("__kwargtrans__")){var a=arguments[n--];for(var i in a)switch(i){case"number_of_guardians":e=a[i];break;case"quorum":t=a[i];break;case"elgamal_public_key":r=a[i];break;case"description_hash":_=a[i]}}}var o=hash_elems(P,Q,G$1,e,t,_),s=hash_elems(o,r);return CiphertextElectionContext(__kwargtrans__({number_of_guardians:e,quorum:t,elgamal_public_key:r,description_hash:_,crypto_base_hash:o,crypto_extended_base_hash:s}))},contest_description_with_placeholders_from=function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"description":e=_[n];break;case"placeholders":t=_[n]}}}return ContestDescriptionWithPlaceholders(__kwargtrans__({object_id:e.object_id,electoral_district_id:e.electoral_district_id,sequence_order:e.sequence_order,vote_variation:e.vote_variation,number_elected:e.number_elected,votes_allowed:e.votes_allowed,_name:e._name,ballot_selections:e.ballot_selections,ballot_title:e.ballot_title,ballot_subtitle:e.ballot_subtitle,placeholder_selections:t}))},generate_placeholder_selection_from=function(e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"contest":e=_[n];break;case"use_sequence_id":t=_[n]}}}var a=function(){var t=[];for(var r of e.ballot_selections)t.append(r.sequence_order);return t}();if(null===t)t=max(...a)+1;else if(__in__(t,a))return log_warning("{}{}{}".format(t)),null;var i=str(e.object_id)+"-"+str(t);return SelectionDescription(__kwargtrans__({object_id:str(i)+"-placeholder",candidate_id:str(i)+"-candidate",sequence_order:t}))},generate_placeholder_selections_from=function(e,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"contest":e=_[n];break;case"count":t=_[n]}}}for(var a=max(function(){var t=[];for(var r of e.ballot_selections)t.append(r.sequence_order);return t}()),i=list(),o=0;o<t;o++){var s=a+1+o;i.append(get_optional(generate_placeholder_selection_from(e,s)))}return i},__name__$i="electionguard.election_builder",ElectionBuilder=__class__("ElectionBuilder",[object],{__module__:__name__$i,get __init__(){return __get__(this,function(e){var t=dict();if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var _=arguments[r--];for(var n in _)switch(n){case"self":e=_[n];break;default:t[n]=_[n]}delete t.__kwargtrans__}var a=tuple([].slice.apply(arguments).slice(1,r+1))}else a=tuple();let i=e.__initfields__.values();for(let t of a)e[i.next().value]=t;for(let r of t.py_keys())e[r]=t[r]})},get __repr__(){return __get__(this,function(e){let t=e.__reprfields__.values(),r=[];for(let _ of t)r.push(_+"="+repr(e[_]));return e.__name__+"("+", ".join(r)+")"})},get __eq__(){return __get__(this,function(e,t){let r=e.__comparefields__.values(),_=[],n=[];for(let a of r)_.push(e[a]),n.push(t[a]);return list(_).__eq__(list(n))})},get __ne__(){return __get__(this,function(e,t){let r=e.__comparefields__.values(),_=[],n=[];for(let a of r)_.push(e[a]),n.push(t[a]);return list(_).__ne__(list(n))})},get __lt__(){return __get__(this,function(e,t){let r=e.__comparefields__.values(),_=[],n=[];for(let a of r)_.push(e[a]),n.push(t[a]);return list(_).__lt__(list(n))})},get __le__(){return __get__(this,function(e,t){let r=e.__comparefields__.values(),_=[],n=[];for(let a of r)_.push(e[a]),n.push(t[a]);return list(_).__le__(list(n))})},get __gt__(){return __get__(this,function(e,t){let r=e.__comparefields__.values(),_=[],n=[];for(let a of r)_.push(e[a]),n.push(t[a]);return list(_).__gt__(list(n))})},get __ge__(){return __get__(this,function(e,t){let r=e.__comparefields__.values(),_=[],n=[];for(let a of r)_.push(e[a]),n.push(t[a]);return list(_).__ge__(list(n))})},internal_description:field(__kwargtrans__({init:!1})),elgamal_public_key:field(__kwargtrans__({py_default:null})),get __init__(){return __get__(this,function(e,t,r,_){e.number_of_guardians=t,e.quorum=r,e.description=_,e.internal_description=InternalElectionDescription(e.description)})},get set_public_key(){return __get__(this,function(e,t){return e.elgamal_public_key=t,e})},get build(){return __get__(this,function(e){return e.description.is_valid()?null===e.elgamal_public_key?null:tuple([e.internal_description,make_ciphertext_election_context(e.number_of_guardians,e.quorum,get_optional(e.elgamal_public_key),e.description.crypto_hash())]):null})}});for(let e of ElectionBuilder.__bases__)__mergefields__(ElectionBuilder,e);__mergefields__(ElectionBuilder,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});var __name__$j="decidim.electionguard.common",Context=__class__("Context",[object],{__module__:__name__$j,get build_election(){return __get__(this,function(e,t){if(e.election=ElectionDescription.from_json_object(complete_election_description(t.description),ElectionDescription),!e.election.is_valid()){var r=InvalidElectionDescription();throw r.__cause__=null,r}e.number_of_guardians=len(t.trustees),e.quorum=t.scheme.parameters.quorum,e.election_builder=ElectionBuilder(e.number_of_guardians,e.quorum,e.election)})}}),ElectionStep=__class__("ElectionStep",[object],{__module__:__name__$j,get __init__(){return __get__(this,function(e){e.next_step=null})},get skip_message(){return __get__(this,function(e,t){return e.message_type!=t})},get process_message(){return __get__(this,function(e,t,r,_){var n=NotImplementedError();throw n.__cause__=null,n})}}),Wrapper=__class__("Wrapper",[object],{__module__:__name__$j,get __init__(){return __get__(this,function(e,t,r){e.context=t,e.step=r})},get skip_message(){return __get__(this,function(e,t){return e.step.skip_message(t)})},get process_message(){return __get__(this,function(e,t,r){if(!e.step.skip_message(t)){var _=e.step.process_message(t,r,e.context);return e.step.next_step&&(e.step=e.step.next_step),_}})}}),selection_from=function(e,t,r){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=!1;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=!1;if(arguments.length){var _=arguments.length-1;if(arguments[_]&&arguments[_].hasOwnProperty("__kwargtrans__")){var n=arguments[_--];for(var a in n)switch(a){case"description":e=n[a];break;case"is_placeholder":t=n[a];break;case"is_affirmative":r=n[a]}}}return PlaintextBallotSelection(__kwargtrans__({object_id:e.object_id,vote:str(r),is_placeholder_selection:t}))},contest_from=function(e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var _ in r)switch(_){case"description":e=r[_]}}}var n=list();for(var a of e.ballot_selections)n.append(selection_from(a));return PlaintextBallotContest(__kwargtrans__({object_id:e.object_id,ballot_selections:n}))},encrypt_selection=function(e,t,r,_,n,a,i){if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=!1;if(void 0===i||null!=i&&i.hasOwnProperty("__kwargtrans__"))i=!0;if(arguments.length){var o=arguments.length-1;if(arguments[o]&&arguments[o].hasOwnProperty("__kwargtrans__")){var s=arguments[o--];for(var l in s)switch(l){case"selection":e=s[l];break;case"selection_description":t=s[l];break;case"elgamal_public_key":r=s[l];break;case"crypto_extended_base_hash":_=s[l];break;case"nonce_seed":n=s[l];break;case"is_placeholder":a=s[l];break;case"should_verify_proofs":i=s[l]}}}if(!e.is_valid(t.object_id))return log_warning("{}{}".format(e)),null;var c=t.crypto_hash(),u=Nonces(c,n),f=u.py_get(t.sequence_order),p=u.py_get(t.sequence_order+1),g=e.to_int(),h=elgamal_encrypt(g,f,r);if(null===h)return null;var d=make_ciphertext_ballot_selection(__kwargtrans__({object_id:e.object_id,description_hash:c,ciphertext:get_optional(h),elgamal_public_key:r,crypto_extended_base_hash:_,proof_seed:p,selection_representation:g,is_placeholder_selection:a,nonce:f}));return null===d.proof?null:i?d.is_valid_encryption(c,r,_)?d:(log_warning("{}{}".format(d.object_id)),null):d},encrypt_contest=function(e,t,r,_,n,a){if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=!0;if(arguments.length){var i=arguments.length-1;if(arguments[i]&&arguments[i].hasOwnProperty("__kwargtrans__")){var o=arguments[i--];for(var s in o)switch(s){case"contest":e=o[s];break;case"contest_description":t=o[s];break;case"elgamal_public_key":r=o[s];break;case"crypto_extended_base_hash":_=o[s];break;case"nonce_seed":n=o[s];break;case"should_verify_proofs":a=o[s]}}}if(!e.is_valid(t.object_id,len(t.ballot_selections),t.number_elected,t.votes_allowed))return log_warning("{}{}".format(e)),null;if(!t.is_valid())return log_warning("{}{}".format(t)),null;var l=t.crypto_hash(),c=Nonces(l,n),u=c.py_get(t.sequence_order),f=c.py_get(t.sequence_order+1),p=list(),g=0;for(var h of t.ballot_selections){var d=!1,m=null;for(var v of e.ballot_selections)if(v.object_id==h.object_id){d=!0;g+=v.to_int();m=encrypt_selection(v,h,r,_,u);break}if(!d)m=encrypt_selection(selection_from(h),h,r,_,u);if(null===m)return null;p.append(get_optional(m))}for(var y of t.placeholder_selections){var w=!1;if(g<t.number_elected){w=!0;g+=1}if(null===(m=encrypt_selection(__kwargtrans__({selection:selection_from(__kwargtrans__({description:y,is_placeholder:!0,is_affirmative:w})),selection_description:y,elgamal_public_key:r,crypto_extended_base_hash:_,nonce_seed:u,is_placeholder:!0,should_verify_proofs:!0}))))return null;p.append(get_optional(m))}null!==t.votes_allowed&&g<t.votes_allowed&&log_warning("mismatching selection count: only n-of-m style elections are currently supported");var b=make_ciphertext_ballot_contest(__kwargtrans__({object_id:e.object_id,description_hash:l,ballot_selections:p,elgamal_public_key:r,crypto_extended_base_hash:_,proof_seed:f,number_elected:t.number_elected,nonce:u}));return null===b||null===b.proof?null:a?b.is_valid_encryption(l,r,_)?b:(log_warning("{}{}".format(b.object_id)),null):b},encrypt_ballot=function(e,t,r,_,n,a){if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=null;if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=!0;if(arguments.length){var i=arguments.length-1;if(arguments[i]&&arguments[i].hasOwnProperty("__kwargtrans__")){var o=arguments[i--];for(var s in o)switch(s){case"ballot":e=o[s];break;case"election_metadata":t=o[s];break;case"context":r=o[s];break;case"seed_hash":_=o[s];break;case"nonce":n=o[s];break;case"should_verify_proofs":a=o[s]}}}var l=t.get_ballot_style(e.ballot_style);if(!e.is_valid(l.object_id))return log_warning("{}{}".format(e)),null;var c=get_or_else_optional_func(n,function(){if(arguments.length){var e=arguments.length-1;if(arguments[e]&&arguments[e].hasOwnProperty("__kwargtrans__"))arguments[e--]}return rand_q()}),u=CiphertextBallot.nonce_seed(t.description_hash,e.object_id,c),f=list();for(var p of t.get_contests_for(e.ballot_style)){var g=null;for(var h of e.contests)if(h.object_id==p.object_id){g=h;break}if(!g)g=contest_from(p);var d=encrypt_contest(g,p,r.elgamal_public_key,r.crypto_extended_base_hash,u);if(null===d)return null;f.append(get_optional(d))}var m=make_ciphertext_ballot(e.object_id,e.ballot_style,t.description_hash,_,f,c);return m.tracking_hash?a?m.is_valid_encryption(t.description_hash,r.elgamal_public_key,r.crypto_extended_base_hash)?m:null:m:null},__name__$k="decidim.electionguard.voter",VoterContext=__class__("VoterContext",[Context],{__module__:__name__$k,has_joint_key:!1}),ProcessCreateElection=__class__("ProcessCreateElection",[ElectionStep],{__module__:__name__$k,message_type:"create_election",get process_message(){return __get__(this,function(e,t,r,_){_.build_election(r),e.next_step=ProcessJointElectionKey()})}}),ProcessJointElectionKey=__class__("ProcessJointElectionKey",[ElectionStep],{__module__:__name__$k,message_type:"joint_election_key",get process_message(){return __get__(this,function(e,t,r,_){var n=deserialize_key(r.joint_election_key);_.election_builder.set_public_key(get_optional(n));var a=get_optional(_.election_builder.build());_.election_metadata=a[0],_.election_context=a[1],_.has_joint_key=!0})}}),Voter=__class__("Voter",[Wrapper],{__module__:__name__$k,get __init__(){return __get__(this,function(e,t){__super__(Voter,"__init__")(e,VoterContext(),ProcessCreateElection()),e.ballot_id=t})},get encrypt(){return __get__(this,function(e,t){if(!e.context.has_joint_key){var r=MissingJointKey();throw r.__cause__=null,r}var _=e.context.election.ballot_styles[0].object_id,n=[];for(var a of e.context.election_metadata.get_contests_for(_)){var i=function(){var e=[];for(var r of a.ballot_selections)e.append(selection_from(r,!1,__in__(r.object_id,t[a.object_id])));return e}();n.append(PlaintextBallotContest(__kwargtrans__({ballot_id:a.object_id,selections:i})))}var o=PlaintextBallot(__kwargtrans__({ballot_id:e.ballot_id,ballot_style:_,contests:n}));return serialize(encrypt_ballot(o,e.context.election_metadata,e.context.election_context,ElementModQ(0),null,!0))})}}),create_election_test_message=function(){return dict([["scheme",dict([["name","electionguard"],["parameters",dict([["quorum",2]])]])],["trustees",[dict([["name","alicia"],["public_key","..."]]),dict([["name","bob"],["public_key","..."]]),dict([["name","clara"],["public_key","..."]])]],["description",dict([["_name",dict([["text",[dict([["value","Test election"],["language","en"]])]]])],["start_date","2021-03-01T08:00:00-05:00"],["end_date","2021-03-01T20:00:00-05:00"],["candidates",[dict([["object_id","question1-yes"],["ballot_name",dict([["text",[dict([["value","Yes"],["language","en"]])]]])]]),dict([["object_id","question1-no"],["ballot_name",dict([["text",[dict([["value","No"],["language","en"]])]]])]]),dict([["object_id","question2-first-project"],["ballot_name",dict([["text",[dict([["value","First project"],["language","en"]])]]])]]),dict([["object_id","question2-second-project"],["ballot_name",dict([["text",[dict([["value","Second project"],["language","en"]])]]])]]),dict([["object_id","question2-third-project"],["ballot_name",dict([["text",[dict([["value","Third project"],["language","en"]])]]])]]),dict([["object_id","question2-fourth-project"],["ballot_name",dict([["text",[dict([["value","Fourth project"],["language","en"]])]]])]])]],["contests",[dict([["@type","ReferendumContest"],["object_id","question1"],["sequence_order",0],["vote_variation","one_of_m"],["_name","Question 1"],["number_elected",1],["minimum_elected",1],["ballot_title",dict([["text",[dict([["value","Do you agree?"],["language","en"]])]]])],["ballot_subtitle",dict([["text",[dict([["value","Choose 'Yes' or 'No'"],["language","en"]])]]])],["ballot_selections",[dict([["object_id","question1-yes-selection"],["sequence_order",0],["candidate_id","question1-yes"]]),dict([["object_id","question1-no-selection"],["sequence_order",1],["candidate_id","question1-no"]])]]]),dict([["@type","CandidateContest"],["object_id","question2"],["sequence_order",1],["vote_variation","n_of_m"],["_name","Question 2"],["number_elected",2],["minimum_elected",0],["ballot_title",dict([["text",[dict([["value","Choose the projects that you like"],["language","en"]])]]])],["ballot_subtitle",dict([["text",[dict([["value","You can select at most two projects"],["language","en"]])]]])],["ballot_selections",[dict([["object_id","question2-first-project-selection"],["sequence_order",0],["candidate_id","question2-first-project"]]),dict([["object_id","question2-second-project-selection"],["sequence_order",1],["candidate_id","question2-second-project"]]),dict([["object_id","question2-third-project-selection"],["sequence_order",2],["candidate_id","question2-third-project"]]),dict([["object_id","question2-fourth-project-selection"],["sequence_order",3],["candidate_id","question2-fourth-project"]])]]])]]])]])},joint_election_key_test_message=function(){return dict([["joint_election_key","0nOW5bz3DrLecByUXW2H/WsK87OyCSeUVJf8Y4Vn4q923ofId84xnfglP9Dbz7unATSCrfP6xpuJ3f8vk5occs4yvnv4HR83lqqP+/yyCajVqQLSgMTpUTi/lh5fA4qe7ndVbg5twOPNDgcHVCUTici6xh7hdPmVo92a6nP4AAmA8y1l8VqTF8WrWAPm1PeILHOTpj0xRhNhAeg/SYxIu61mmkJ2MNch/T0xDFk1YlcT4+WZzYkI+oGb41ZKtrmu5IpXBzbUf0YiRW/6MnqIK2VOf9sTRGLh+bK841KL9EPR4cNyoymP/kfvnoauHuHDuvclKClC0izGbUsovFG2cz/r6FjvelMt9eVc9ccNA0/grjM8whdkDYpQtaQynTHxMD3OCyqW2mcFEzFPWmhLP9kmRE43sBTCQtYdJ+lip+urpAw+y6+L1RraykGzg5NVhm2Pa8UV34522YB4lhsOU7b/Do9WdtvWxReY+HJOIMJwaROgybn0eV4v+E13q0WJDK31JA/o7IHIPGlRVbkcb6/0qrDbho0pCRgjQAtQ6i3JxRXpMDAEblWP5h38qJHQwpmIl9v9b1i5RVBge4LhxQXAAatvrZcPI4QZUmvtpXXJ7jP2KBGUbVmmsFKrmTO/7u76nydqmg3yFbDywfr9wg3PCLBUUx5WWil0TmVdeNE="]])},__name__$l="tests.test_voter",TestVoter=__class__("TestVoter",[object],{__module__:__name__$l,get setUp(){return __get__(this,function(e){e.voter=Voter("a-voter")})},get test_cast_vote(){return __get__(this,function(e){e.voter.process_message("create_election",create_election_test_message()),e.voter.process_message("joint_election_key",joint_election_key_test_message());var t=e.voter.encrypt(dict([["question1",["question1-no-selection"]],["question2",["question2-first-project-selection","question2-fourth-project-selection"]]]));print(JSON.stringify(t))})}});exports.TestVoter=TestVoter,exports.Voter=Voter,exports.bigInt=bigInt,Object.defineProperty(exports,"__esModule",{value:!0})});