var bigInt=function(undefined){"use strict";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET="0123456789abcdefghijklmnopqrstuvwxyz",supportsNativeBigInt="function"==typeof BigInt,pow;function Integer(_,e,t,r){return void 0===_?Integer[0]:void 0!==e&&(10!=+e||t)?parseBase(_,e,t,r):parseValue(_)}function BigInteger(_,e){this.value=_,this.sign=e,this.isSmall=!1}function SmallInteger(_){this.value=_,this.sign=_<0,this.isSmall=!0}function NativeBigInt(_){this.value=_}function isPrecise(_){return-MAX_INT<_&&_<MAX_INT}function smallToArray(_){return _<1e7?[_]:_<1e14?[_%1e7,Math.floor(_/1e7)]:[_%1e7,Math.floor(_/1e7)%1e7,Math.floor(_/1e14)]}function arrayToSmall(_){trim(_);var e=_.length;if(e<4&&compareAbs(_,MAX_INT_ARR)<0)switch(e){case 0:return 0;case 1:return _[0];case 2:return _[0]+_[1]*BASE;default:return _[0]+(_[1]+_[2]*BASE)*BASE}return _}function trim(_){for(var e=_.length;0===_[--e];);_.length=e+1}function createArray(_){for(var e=new Array(_),t=-1;++t<_;)e[t]=0;return e}function truncate(_){return _>0?Math.floor(_):Math.ceil(_)}function add(_,e){var t,r,n=_.length,i=e.length,o=new Array(n),a=0,s=BASE;for(r=0;r<i;r++)a=(t=_[r]+e[r]+a)>=s?1:0,o[r]=t-a*s;for(;r<n;)a=(t=_[r]+a)===s?1:0,o[r++]=t-a*s;return a>0&&o.push(a),o}function addAny(_,e){return _.length>=e.length?add(_,e):add(e,_)}function addSmall(_,e){var t,r,n=_.length,i=new Array(n),o=BASE;for(r=0;r<n;r++)t=_[r]-o+e,e=Math.floor(t/o),i[r]=t-e*o,e+=1;for(;e>0;)i[r++]=e%o,e=Math.floor(e/o);return i}function subtract(_,e){var t,r,n=_.length,i=e.length,o=new Array(n),a=0,s=BASE;for(t=0;t<i;t++)(r=_[t]-a-e[t])<0?(r+=s,a=1):a=0,o[t]=r;for(t=i;t<n;t++){if(!((r=_[t]-a)<0)){o[t++]=r;break}r+=s,o[t]=r}for(;t<n;t++)o[t]=_[t];return trim(o),o}function subtractAny(_,e,t){var r;return compareAbs(_,e)>=0?r=subtract(_,e):(r=subtract(e,_),t=!t),"number"==typeof(r=arrayToSmall(r))?(t&&(r=-r),new SmallInteger(r)):new BigInteger(r,t)}function subtractSmall(_,e,t){var r,n,i=_.length,o=new Array(i),a=-e,s=BASE;for(r=0;r<i;r++)n=_[r]+a,a=Math.floor(n/s),n%=s,o[r]=n<0?n+s:n;return"number"==typeof(o=arrayToSmall(o))?(t&&(o=-o),new SmallInteger(o)):new BigInteger(o,t)}function multiplyLong(_,e){var t,r,n,i,o=_.length,a=e.length,s=createArray(o+a),l=BASE;for(n=0;n<o;++n){i=_[n];for(var u=0;u<a;++u)t=i*e[u]+s[n+u],r=Math.floor(t/l),s[n+u]=t-r*l,s[n+u+1]+=r}return trim(s),s}function multiplySmall(_,e){var t,r,n=_.length,i=new Array(n),o=BASE,a=0;for(r=0;r<n;r++)t=_[r]*e+a,a=Math.floor(t/o),i[r]=t-a*o;for(;a>0;)i[r++]=a%o,a=Math.floor(a/o);return i}function shiftLeft(_,e){for(var t=[];e-- >0;)t.push(0);return t.concat(_)}function multiplyKaratsuba(_,e){var t=Math.max(_.length,e.length);if(t<=30)return multiplyLong(_,e);t=Math.ceil(t/2);var r=_.slice(t),n=_.slice(0,t),i=e.slice(t),o=e.slice(0,t),a=multiplyKaratsuba(n,o),s=multiplyKaratsuba(r,i),l=addAny(addAny(a,shiftLeft(subtract(subtract(multiplyKaratsuba(addAny(n,r),addAny(o,i)),a),s),t)),shiftLeft(s,2*t));return trim(l),l}function useKaratsuba(_,e){return-.012*_-.012*e+15e-6*_*e>0}function multiplySmallAndArray(_,e,t){return new BigInteger(_<BASE?multiplySmall(e,_):multiplyLong(e,smallToArray(_)),t)}function square(_){var e,t,r,n,i=_.length,o=createArray(i+i),a=BASE;for(r=0;r<i;r++){t=0-(n=_[r])*n;for(var s=r;s<i;s++)e=n*_[s]*2+o[r+s]+t,t=Math.floor(e/a),o[r+s]=e-t*a;o[r+i]=t}return trim(o),o}function divMod1(_,e){var t,r,n,i,o,a,s,l=_.length,u=e.length,p=BASE,c=createArray(e.length),f=e[u-1],m=Math.ceil(p/(2*f)),d=multiplySmall(_,m),g=multiplySmall(e,m);for(d.length<=l&&d.push(0),g.push(0),f=g[u-1],r=l-u;r>=0;r--){for(t=p-1,d[r+u]!==f&&(t=Math.floor((d[r+u]*p+d[r+u-1])/f)),n=0,i=0,a=g.length,o=0;o<a;o++)n+=t*g[o],s=Math.floor(n/p),i+=d[r+o]-(n-s*p),n=s,i<0?(d[r+o]=i+p,i=-1):(d[r+o]=i,i=0);for(;0!==i;){for(t-=1,n=0,o=0;o<a;o++)(n+=d[r+o]-p+g[o])<0?(d[r+o]=n+p,n=0):(d[r+o]=n,n=1);i+=n}c[r]=t}return d=divModSmall(d,m)[0],[arrayToSmall(c),arrayToSmall(d)]}function divMod2(_,e){for(var t,r,n,i,o,a=_.length,s=e.length,l=[],u=[],p=BASE;a;)if(u.unshift(_[--a]),trim(u),compareAbs(u,e)<0)l.push(0);else{n=u[(r=u.length)-1]*p+u[r-2],i=e[s-1]*p+e[s-2],r>s&&(n=(n+1)*p),t=Math.ceil(n/i);do{if(compareAbs(o=multiplySmall(e,t),u)<=0)break;t--}while(t);l.push(t),u=subtract(u,o)}return l.reverse(),[arrayToSmall(l),arrayToSmall(u)]}function divModSmall(_,e){var t,r,n,i,o=_.length,a=createArray(o),s=BASE;for(n=0,t=o-1;t>=0;--t)n=(i=n*s+_[t])-(r=truncate(i/e))*e,a[t]=0|r;return[a,0|n]}function divModAny(_,e){var t,r=parseValue(e);if(supportsNativeBigInt)return[new NativeBigInt(_.value/r.value),new NativeBigInt(_.value%r.value)];var n,i=_.value,o=r.value;if(0===o)throw new Error("Cannot divide by zero");if(_.isSmall)return r.isSmall?[new SmallInteger(truncate(i/o)),new SmallInteger(i%o)]:[Integer[0],_];if(r.isSmall){if(1===o)return[_,Integer[0]];if(-1==o)return[_.negate(),Integer[0]];var a=Math.abs(o);if(a<BASE){n=arrayToSmall((t=divModSmall(i,a))[0]);var s=t[1];return _.sign&&(s=-s),"number"==typeof n?(_.sign!==r.sign&&(n=-n),[new SmallInteger(n),new SmallInteger(s)]):[new BigInteger(n,_.sign!==r.sign),new SmallInteger(s)]}o=smallToArray(a)}var l=compareAbs(i,o);if(-1===l)return[Integer[0],_];if(0===l)return[Integer[_.sign===r.sign?1:-1],Integer[0]];n=(t=i.length+o.length<=200?divMod1(i,o):divMod2(i,o))[0];var u=_.sign!==r.sign,p=t[1],c=_.sign;return"number"==typeof n?(u&&(n=-n),n=new SmallInteger(n)):n=new BigInteger(n,u),"number"==typeof p?(c&&(p=-p),p=new SmallInteger(p)):p=new BigInteger(p,c),[n,p]}function compareAbs(_,e){if(_.length!==e.length)return _.length>e.length?1:-1;for(var t=_.length-1;t>=0;t--)if(_[t]!==e[t])return _[t]>e[t]?1:-1;return 0}function isBasicPrime(_){var e=_.abs();return!e.isUnit()&&(!!(e.equals(2)||e.equals(3)||e.equals(5))||!(e.isEven()||e.isDivisibleBy(3)||e.isDivisibleBy(5))&&(!!e.lesser(49)||void 0))}function millerRabinTest(_,e){for(var t,r,n,i=_.prev(),o=i,a=0;o.isEven();)o=o.divide(2),a++;_:for(r=0;r<e.length;r++)if(!_.lesser(e[r])&&!(n=bigInt(e[r]).modPow(o,_)).isUnit()&&!n.equals(i)){for(t=a-1;0!=t;t--){if((n=n.square().mod(_)).isUnit())return!1;if(n.equals(i))continue _}return!1}return!0}BigInteger.prototype=Object.create(Integer.prototype),SmallInteger.prototype=Object.create(Integer.prototype),NativeBigInt.prototype=Object.create(Integer.prototype),BigInteger.prototype.add=function(_){var e=parseValue(_);if(this.sign!==e.sign)return this.subtract(e.negate());var t=this.value,r=e.value;return e.isSmall?new BigInteger(addSmall(t,Math.abs(r)),this.sign):new BigInteger(addAny(t,r),this.sign)},BigInteger.prototype.plus=BigInteger.prototype.add,SmallInteger.prototype.add=function(_){var e=parseValue(_),t=this.value;if(t<0!==e.sign)return this.subtract(e.negate());var r=e.value;if(e.isSmall){if(isPrecise(t+r))return new SmallInteger(t+r);r=smallToArray(Math.abs(r))}return new BigInteger(addSmall(r,Math.abs(t)),t<0)},SmallInteger.prototype.plus=SmallInteger.prototype.add,NativeBigInt.prototype.add=function(_){return new NativeBigInt(this.value+parseValue(_).value)},NativeBigInt.prototype.plus=NativeBigInt.prototype.add,BigInteger.prototype.subtract=function(_){var e=parseValue(_);if(this.sign!==e.sign)return this.add(e.negate());var t=this.value,r=e.value;return e.isSmall?subtractSmall(t,Math.abs(r),this.sign):subtractAny(t,r,this.sign)},BigInteger.prototype.minus=BigInteger.prototype.subtract,SmallInteger.prototype.subtract=function(_){var e=parseValue(_),t=this.value;if(t<0!==e.sign)return this.add(e.negate());var r=e.value;return e.isSmall?new SmallInteger(t-r):subtractSmall(r,Math.abs(t),t>=0)},SmallInteger.prototype.minus=SmallInteger.prototype.subtract,NativeBigInt.prototype.subtract=function(_){return new NativeBigInt(this.value-parseValue(_).value)},NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract,BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)},SmallInteger.prototype.negate=function(){var _=this.sign,e=new SmallInteger(-this.value);return e.sign=!_,e},NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value)},BigInteger.prototype.abs=function(){return new BigInteger(this.value,!1)},SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))},NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value)},BigInteger.prototype.multiply=function(_){var e,t=parseValue(_),r=this.value,n=t.value,i=this.sign!==t.sign;if(t.isSmall){if(0===n)return Integer[0];if(1===n)return this;if(-1===n)return this.negate();if((e=Math.abs(n))<BASE)return new BigInteger(multiplySmall(r,e),i);n=smallToArray(e)}return useKaratsuba(r.length,n.length)?new BigInteger(multiplyKaratsuba(r,n),i):new BigInteger(multiplyLong(r,n),i)},BigInteger.prototype.times=BigInteger.prototype.multiply,SmallInteger.prototype._multiplyBySmall=function(_){return isPrecise(_.value*this.value)?new SmallInteger(_.value*this.value):multiplySmallAndArray(Math.abs(_.value),smallToArray(Math.abs(this.value)),this.sign!==_.sign)},BigInteger.prototype._multiplyBySmall=function(_){return 0===_.value?Integer[0]:1===_.value?this:-1===_.value?this.negate():multiplySmallAndArray(Math.abs(_.value),this.value,this.sign!==_.sign)},SmallInteger.prototype.multiply=function(_){return parseValue(_)._multiplyBySmall(this)},SmallInteger.prototype.times=SmallInteger.prototype.multiply,NativeBigInt.prototype.multiply=function(_){return new NativeBigInt(this.value*parseValue(_).value)},NativeBigInt.prototype.times=NativeBigInt.prototype.multiply,BigInteger.prototype.square=function(){return new BigInteger(square(this.value),!1)},SmallInteger.prototype.square=function(){var _=this.value*this.value;return isPrecise(_)?new SmallInteger(_):new BigInteger(square(smallToArray(Math.abs(this.value))),!1)},NativeBigInt.prototype.square=function(_){return new NativeBigInt(this.value*this.value)},BigInteger.prototype.divmod=function(_){var e=divModAny(this,_);return{quotient:e[0],remainder:e[1]}},NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod,BigInteger.prototype.divide=function(_){return divModAny(this,_)[0]},NativeBigInt.prototype.over=NativeBigInt.prototype.divide=SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide,BigInteger.prototype.mod=function(_){return divModAny(this,_)[1]},NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod,BigInteger.prototype.pow=function(_){var e,t,r,n=parseValue(_),i=this.value,o=n.value;if(0===o)return Integer[1];if(0===i)return Integer[0];if(1===i)return Integer[1];if(-1===i)return n.isEven()?Integer[1]:Integer[-1];if(n.sign)return Integer[0];if(!n.isSmall)throw new Error("The exponent "+n.toString()+" is too large.");if(this.isSmall&&isPrecise(e=Math.pow(i,o)))return new SmallInteger(truncate(e));for(t=this,r=Integer[1];!0&o&&(r=r.times(t),--o),0!==o;)o/=2,t=t.square();return r},SmallInteger.prototype.pow=BigInteger.prototype.pow,supportsNativeBigInt&&(pow=eval("(a,b)=>a**b")),NativeBigInt.prototype.pow=function(_){var e=parseValue(_),t=this.value,r=e.value;return r===BigInt(0)?Integer[1]:t===BigInt(0)?Integer[0]:t===BigInt(1)?Integer[1]:t===BigInt(-1)?e.isEven()?Integer[1]:Integer[-1]:e.isNegative()?new NativeBigInt(BigInt(0)):new NativeBigInt(pow(t,r))},BigInteger.prototype.modPow=function(_,e){if(_=parseValue(_),(e=parseValue(e)).isZero())throw new Error("Cannot take modPow with modulus 0");for(var t=Integer[1],r=this.mod(e);_.isPositive();){if(r.isZero())return Integer[0];_.isOdd()&&(t=t.multiply(r).mod(e)),_=_.divide(2),r=r.square().mod(e)}return t},NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow,BigInteger.prototype.compareAbs=function(_){var e=parseValue(_),t=this.value,r=e.value;return e.isSmall?1:compareAbs(t,r)},SmallInteger.prototype.compareAbs=function(_){var e=parseValue(_),t=Math.abs(this.value),r=e.value;return e.isSmall?t===(r=Math.abs(r))?0:t>r?1:-1:-1},NativeBigInt.prototype.compareAbs=function(_){var e=this.value,t=parseValue(_).value;return(e=e>=0?e:-e)===(t=t>=0?t:-t)?0:e>t?1:-1},BigInteger.prototype.compare=function(_){if(_===1/0)return-1;if(_===-1/0)return 1;var e=parseValue(_),t=this.value,r=e.value;return this.sign!==e.sign?e.sign?1:-1:e.isSmall?this.sign?-1:1:compareAbs(t,r)*(this.sign?-1:1)},BigInteger.prototype.compareTo=BigInteger.prototype.compare,SmallInteger.prototype.compare=function(_){if(_===1/0)return-1;if(_===-1/0)return 1;var e=parseValue(_),t=this.value,r=e.value;return e.isSmall?t==r?0:t>r?1:-1:t<0!==e.sign?t<0?-1:1:t<0?1:-1},SmallInteger.prototype.compareTo=SmallInteger.prototype.compare,NativeBigInt.prototype.compare=function(_){if(_===1/0)return-1;if(_===-1/0)return 1;var e=this.value,t=parseValue(_).value;return e===t?0:e>t?1:-1},NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare,BigInteger.prototype.equals=function(_){return 0===this.compare(_)},NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals,BigInteger.prototype.notEquals=function(_){return 0!==this.compare(_)},NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals,BigInteger.prototype.greater=function(_){return this.compare(_)>0},NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater,BigInteger.prototype.lesser=function(_){return this.compare(_)<0},NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser,BigInteger.prototype.greaterOrEquals=function(_){return this.compare(_)>=0},NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals,BigInteger.prototype.lesserOrEquals=function(_){return this.compare(_)<=0},NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals,BigInteger.prototype.isEven=function(){return 0==(1&this.value[0])},SmallInteger.prototype.isEven=function(){return 0==(1&this.value)},NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)},BigInteger.prototype.isOdd=function(){return 1==(1&this.value[0])},SmallInteger.prototype.isOdd=function(){return 1==(1&this.value)},NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)},BigInteger.prototype.isPositive=function(){return!this.sign},SmallInteger.prototype.isPositive=function(){return this.value>0},NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive,BigInteger.prototype.isNegative=function(){return this.sign},SmallInteger.prototype.isNegative=function(){return this.value<0},NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative,BigInteger.prototype.isUnit=function(){return!1},SmallInteger.prototype.isUnit=function(){return 1===Math.abs(this.value)},NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1)},BigInteger.prototype.isZero=function(){return!1},SmallInteger.prototype.isZero=function(){return 0===this.value},NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0)},BigInteger.prototype.isDivisibleBy=function(_){var e=parseValue(_);return!e.isZero()&&(!!e.isUnit()||(0===e.compareAbs(2)?this.isEven():this.mod(e).isZero()))},NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy,BigInteger.prototype.isPrime=function(_){var e=isBasicPrime(this);if(e!==undefined)return e;var t=this.abs(),r=t.bitLength();if(r<=64)return millerRabinTest(t,[2,325,9375,28178,450775,9780504,1795265022]);for(var n=Math.log(2)*r.toJSNumber(),i=Math.ceil(!0===_?2*Math.pow(n,2):n),o=[],a=0;a<i;a++)o.push(bigInt(a+2));return millerRabinTest(t,o)},NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime,BigInteger.prototype.isProbablePrime=function(_){var e=isBasicPrime(this);if(e!==undefined)return e;for(var t=this.abs(),r=_===undefined?5:_,n=[],i=0;i<r;i++)n.push(bigInt.randBetween(2,t.minus(2)));return millerRabinTest(t,n)},NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime,BigInteger.prototype.modInv=function(_){for(var e,t,r,n=bigInt.zero,i=bigInt.one,o=parseValue(_),a=this.abs();!a.isZero();)e=o.divide(a),t=n,r=o,n=i,o=a,i=t.subtract(e.multiply(i)),a=r.subtract(e.multiply(a));if(!o.isUnit())throw new Error(this.toString()+" and "+_.toString()+" are not co-prime");return-1===n.compare(0)&&(n=n.add(_)),this.isNegative()?n.negate():n},NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv,BigInteger.prototype.next=function(){var _=this.value;return this.sign?subtractSmall(_,1,this.sign):new BigInteger(addSmall(_,1),this.sign)},SmallInteger.prototype.next=function(){var _=this.value;return _+1<MAX_INT?new SmallInteger(_+1):new BigInteger(MAX_INT_ARR,!1)},NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1))},BigInteger.prototype.prev=function(){var _=this.value;return this.sign?new BigInteger(addSmall(_,1),!0):subtractSmall(_,1,this.sign)},SmallInteger.prototype.prev=function(){var _=this.value;return _-1>-MAX_INT?new SmallInteger(_-1):new BigInteger(MAX_INT_ARR,!0)},NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1))};for(var powersOfTwo=[1];2*powersOfTwo[powersOfTwo.length-1]<=BASE;)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(_){return Math.abs(_)<=BASE}function bitwise(_,e,t){e=parseValue(e);for(var r=_.isNegative(),n=e.isNegative(),i=r?_.not():_,o=n?e.not():e,a=0,s=0,l=null,u=null,p=[];!i.isZero()||!o.isZero();)a=(l=divModAny(i,highestPower2))[1].toJSNumber(),r&&(a=highestPower2-1-a),s=(u=divModAny(o,highestPower2))[1].toJSNumber(),n&&(s=highestPower2-1-s),i=l[0],o=u[0],p.push(t(a,s));for(var c=0!==t(r?1:0,n?1:0)?bigInt(-1):bigInt(0),f=p.length-1;f>=0;f-=1)c=c.multiply(highestPower2).add(bigInt(p[f]));return c}BigInteger.prototype.shiftLeft=function(_){var e=parseValue(_).toJSNumber();if(!shift_isSmall(e))throw new Error(String(e)+" is too large for shifting.");if(e<0)return this.shiftRight(-e);var t=this;if(t.isZero())return t;for(;e>=powers2Length;)t=t.multiply(highestPower2),e-=powers2Length-1;return t.multiply(powersOfTwo[e])},NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft,BigInteger.prototype.shiftRight=function(_){var e,t=parseValue(_).toJSNumber();if(!shift_isSmall(t))throw new Error(String(t)+" is too large for shifting.");if(t<0)return this.shiftLeft(-t);for(var r=this;t>=powers2Length;){if(r.isZero()||r.isNegative()&&r.isUnit())return r;r=(e=divModAny(r,highestPower2))[1].isNegative()?e[0].prev():e[0],t-=powers2Length-1}return(e=divModAny(r,powersOfTwo[t]))[1].isNegative()?e[0].prev():e[0]},NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight,BigInteger.prototype.not=function(){return this.negate().prev()},NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not,BigInteger.prototype.and=function(_){return bitwise(this,_,function(_,e){return _&e})},NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and,BigInteger.prototype.or=function(_){return bitwise(this,_,function(_,e){return _|e})},NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or,BigInteger.prototype.xor=function(_){return bitwise(this,_,function(_,e){return _^e})},NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(_){var e=_.value,t="number"==typeof e?e|LOBMASK_I:"bigint"==typeof e?e|BigInt(LOBMASK_I):e[0]+e[1]*BASE|LOBMASK_BI;return t&-t}function integerLogarithm(_,e){if(e.compareTo(_)<=0){var t=integerLogarithm(_,e.square(e)),r=t.p,n=t.e,i=r.multiply(e);return i.compareTo(_)<=0?{p:i,e:2*n+1}:{p:r,e:2*n}}return{p:bigInt(1),e:0}}function max(_,e){return _=parseValue(_),e=parseValue(e),_.greater(e)?_:e}function min(_,e){return _=parseValue(_),e=parseValue(e),_.lesser(e)?_:e}function gcd(_,e){if(_=parseValue(_).abs(),e=parseValue(e).abs(),_.equals(e))return _;if(_.isZero())return e;if(e.isZero())return _;for(var t,r,n=Integer[1];_.isEven()&&e.isEven();)t=min(roughLOB(_),roughLOB(e)),_=_.divide(t),e=e.divide(t),n=n.multiply(t);for(;_.isEven();)_=_.divide(roughLOB(_));do{for(;e.isEven();)e=e.divide(roughLOB(e));_.greater(e)&&(r=e,e=_,_=r),e=e.subtract(_)}while(!e.isZero());return n.isUnit()?_:_.multiply(n)}function lcm(_,e){return _=parseValue(_).abs(),e=parseValue(e).abs(),_.divide(gcd(_,e)).multiply(e)}function randBetween(_,e){var t=min(_=parseValue(_),e=parseValue(e)),r=max(_,e).subtract(t).add(1);if(r.isSmall)return t.add(Math.floor(Math.random()*r));for(var n=toBase(r,BASE).value,i=[],o=!0,a=0;a<n.length;a++){var s=o?n[a]:BASE,l=truncate(Math.random()*s);i.push(l),l<s&&(o=!1)}return t.add(Integer.fromArray(i,BASE,!1))}BigInteger.prototype.bitLength=function(){var _=this;return _.compareTo(bigInt(0))<0&&(_=_.negate().subtract(bigInt(1))),0===_.compareTo(bigInt(0))?bigInt(0):bigInt(integerLogarithm(_,bigInt(2)).e).add(bigInt(1))},NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;var parseBase=function(_,e,t,r){t=t||DEFAULT_ALPHABET,_=String(_),r||(_=_.toLowerCase(),t=t.toLowerCase());var n,i=_.length,o=Math.abs(e),a={};for(n=0;n<t.length;n++)a[t[n]]=n;for(n=0;n<i;n++){if("-"!==(u=_[n])&&(u in a&&a[u]>=o)){if("1"===u&&1===o)continue;throw new Error(u+" is not a valid digit in base "+e+".")}}e=parseValue(e);var s=[],l="-"===_[0];for(n=l?1:0;n<_.length;n++){var u;if((u=_[n])in a)s.push(parseValue(a[u]));else{if("<"!==u)throw new Error(u+" is not a valid character");var p=n;do{n++}while(">"!==_[n]&&n<_.length);s.push(parseValue(_.slice(p+1,n)))}}return parseBaseFromArray(s,e,l)};function parseBaseFromArray(_,e,t){var r,n=Integer[0],i=Integer[1];for(r=_.length-1;r>=0;r--)n=n.add(_[r].times(i)),i=i.times(e);return t?n.negate():n}function stringify(_,e){return _<(e=e||DEFAULT_ALPHABET).length?e[_]:"<"+_+">"}function toBase(_,e){if((e=bigInt(e)).isZero()){if(_.isZero())return{value:[0],isNegative:!1};throw new Error("Cannot convert nonzero numbers to base 0.")}if(e.equals(-1)){if(_.isZero())return{value:[0],isNegative:!1};if(_.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-_.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var t=Array.apply(null,Array(_.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);return t.unshift([1]),{value:[].concat.apply([],t),isNegative:!1}}var r=!1;if(_.isNegative()&&e.isPositive()&&(r=!0,_=_.abs()),e.isUnit())return _.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(_.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:r};for(var n,i=[],o=_;o.isNegative()||o.compareAbs(e)>=0;){o=(n=o.divmod(e)).quotient;var a=n.remainder;a.isNegative()&&(a=e.minus(a).abs(),o=o.next()),i.push(a.toJSNumber())}return i.push(o.toJSNumber()),{value:i.reverse(),isNegative:r}}function toBaseString(_,e,t){var r=toBase(_,e);return(r.isNegative?"-":"")+r.value.map(function(_){return stringify(_,t)}).join("")}function parseStringValue(_){if(isPrecise(+_)){var e=+_;if(e===truncate(e))return supportsNativeBigInt?new NativeBigInt(BigInt(e)):new SmallInteger(e);throw new Error("Invalid integer: "+_)}var t="-"===_[0];t&&(_=_.slice(1));var r=_.split(/e/i);if(r.length>2)throw new Error("Invalid integer: "+r.join("e"));if(2===r.length){var n=r[1];if("+"===n[0]&&(n=n.slice(1)),(n=+n)!==truncate(n)||!isPrecise(n))throw new Error("Invalid integer: "+n+" is not a valid exponent.");var i=r[0],o=i.indexOf(".");if(o>=0&&(n-=i.length-o-1,i=i.slice(0,o)+i.slice(o+1)),n<0)throw new Error("Cannot include negative exponent part for integers");_=i+=new Array(n+1).join("0")}if(!/^([0-9][0-9]*)$/.test(_))throw new Error("Invalid integer: "+_);if(supportsNativeBigInt)return new NativeBigInt(BigInt(t?"-"+_:_));for(var a=[],s=_.length,l=LOG_BASE,u=s-l;s>0;)a.push(+_.slice(u,s)),(u-=l)<0&&(u=0),s-=l;return trim(a),new BigInteger(a,t)}function parseNumberValue(_){if(supportsNativeBigInt)return new NativeBigInt(BigInt(_));if(isPrecise(_)){if(_!==truncate(_))throw new Error(_+" is not an integer.");return new SmallInteger(_)}return parseStringValue(_.toString())}function parseValue(_){return"number"==typeof _?parseNumberValue(_):"string"==typeof _?parseStringValue(_):"bigint"==typeof _?new NativeBigInt(_):_}BigInteger.prototype.toArray=function(_){return toBase(this,_)},SmallInteger.prototype.toArray=function(_){return toBase(this,_)},NativeBigInt.prototype.toArray=function(_){return toBase(this,_)},BigInteger.prototype.toString=function(_,e){if(_===undefined&&(_=10),10!==_)return toBaseString(this,_,e);for(var t,r=this.value,n=r.length,i=String(r[--n]);--n>=0;)t=String(r[n]),i+="0000000".slice(t.length)+t;return(this.sign?"-":"")+i},SmallInteger.prototype.toString=function(_,e){return _===undefined&&(_=10),10!=_?toBaseString(this,_,e):String(this.value)},NativeBigInt.prototype.toString=SmallInteger.prototype.toString,NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()},BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)},BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf,SmallInteger.prototype.valueOf=function(){return this.value},SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf,NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};for(var i=0;i<1e3;i++)Integer[i]=parseValue(i),i>0&&(Integer[-i]=parseValue(-i));return Integer.one=Integer[1],Integer.zero=Integer[0],Integer.minusOne=Integer[-1],Integer.max=max,Integer.min=min,Integer.gcd=gcd,Integer.lcm=lcm,Integer.isInstance=function(_){return _ instanceof BigInteger||_ instanceof SmallInteger||_ instanceof NativeBigInt},Integer.randBetween=randBetween,Integer.fromArray=function(_,e,t){return parseBaseFromArray(_.map(parseValue),parseValue(e||10),t)},Integer}();"undefined"!=typeof module&&module.hasOwnProperty("exports")&&(module.exports=bigInt),"function"==typeof define&&define.amd&&define("big-integer",[],function(){return bigInt});import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";var __name__="__future__";export var all_feature_names=[];var election={},election_builder={};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import*as __module_election_builder__ from"./election_builder.js";__nest__(election_builder,"",__module_election_builder__);import*as __module_election__ from"./election.js";__nest__(election,"",__module_election__);var __name__="__main__";import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{flatmap_optional,to_ticks}from"./utils.js";import{get_rotating_tracker_hash,tracker_hash_to_words}from"./tracker.js";import{log_warning}from"./logs.js";import{CryptoHashCheckable,hash_elems}from"./hash.js";import{ElementModP,ElementModQ,ZERO_MOD_Q,add_q}from"./group.js";import{ElGamalCiphertext,elgamal_add}from"./elgamal.js";import{ElectionObjectBase}from"./election_object_base.js";import{ConstantChaumPedersenProof,DisjunctiveChaumPedersenProof,make_constant_chaum_pedersen,make_disjunctive_chaum_pedersen}from"./chaum_pedersen.js";import{Any,List,Optional,Protocol,Sequence,runtime_checkable}from"./typing.js";import{Enum}from"./enum.js";import{util}from"./distutils.js";import{datetime}from"./datetime.js";import{dataclass,field,py_replace}from"./dataclasses.js";var __name__="ballot";export var _list_eq=function(_,e){return sorted(_,__kwargtrans__({key:function(_){return _.object_id}}))==sorted(e,__kwargtrans__({key:function(_){return _.object_id}}))};export var ExtendedData=__class__("ExtendedData",[object],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})}});for(let _ of ExtendedData.__bases__)__mergefields__(ExtendedData,_);__mergefields__(ExtendedData,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var PlaintextBallotSelection=__class__("PlaintextBallotSelection",[ElectionObjectBase],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},is_placeholder_selection:field(__kwargtrans__({py_default:!1})),extended_data:field(__kwargtrans__({py_default:null})),get is_valid(){return __get__(this,function(_,e){if(_.object_id!=e)return log_warning("{}{}{}{}{}".format(e,_.object_id)),!1;var t=_.to_int();return!(t<0||t>1)||(log_warning("{}{}".format(str(_))),!1)})},get to_int(){return __get__(this,function(_){var e=!1;try{e=util.strtobool(_.vote.lower())}catch(e){if(!isinstance(e,ValueError))throw e;log_warning("{}{}{}".format(_.vote.lower()))}return int(e)})},get __eq__(){return __get__(this,function(_,e){return isinstance(e,PlaintextBallotSelection)&&_.object_id==e.object_id&&_.vote==e.vote&&_.is_placeholder_selection==e.is_placeholder_selection&&_.extended_data==e.extended_data})},get __ne__(){return __get__(this,function(_,e){return!_.__eq__(e)})}});for(let _ of PlaintextBallotSelection.__bases__)__mergefields__(PlaintextBallotSelection,_);__mergefields__(PlaintextBallotSelection,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var CiphertextSelection=runtime_checkable(__class__("CiphertextSelection",[Protocol],{__module__:__name__}));export var CiphertextBallotSelection=__class__("CiphertextBallotSelection",[ElectionObjectBase,CiphertextSelection,CryptoHashCheckable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},is_placeholder_selection:field(__kwargtrans__({py_default:!1})),nonce:field(__kwargtrans__({py_default:null})),proof:field(__kwargtrans__({py_default:null})),extended_data:field(__kwargtrans__({py_default:null})),get is_valid_encryption(){return __get__(this,function(_,e,t,r){if(e!=_.description_hash)return log_warning("{}{}{}{}{}{}{}".format(_.object_id,str(e),str(_.description_hash))),!1;var n=_.crypto_hash_with(e);return _.crypto_hash!=n?(log_warning("{}{}{}{}{}{}{}".format(_.object_id,str(n),str(_.crypto_hash))),!1):null===_.proof?(log_warning("{}{}".format(_.object_id)),!1):_.proof.is_valid(_.ciphertext,t,r)})},get crypto_hash_with(){return __get__(this,function(_,e){return _ciphertext_ballot_selection_crypto_hash_with(_.object_id,e,_.ciphertext)})}});for(let _ of CiphertextBallotSelection.__bases__)__mergefields__(CiphertextBallotSelection,_);__mergefields__(CiphertextBallotSelection,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var _ciphertext_ballot_selection_crypto_hash_with=function(_,e,t){return hash_elems(_,e,t.crypto_hash())};export var make_ciphertext_ballot_selection=function(_,e,t,r,n,i,o,a,s,l,u,p){if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=!1;if(void 0===s||null!=s&&s.hasOwnProperty("__kwargtrans__"))s=null;if(void 0===l||null!=l&&l.hasOwnProperty("__kwargtrans__"))l=null;if(void 0===u||null!=u&&u.hasOwnProperty("__kwargtrans__"))u=null;if(void 0===p||null!=p&&p.hasOwnProperty("__kwargtrans__"))p=null;if(null===l)l=_ciphertext_ballot_selection_crypto_hash_with(_,e,t);if(null===u)u=flatmap_optional(s,function(_){return make_disjunctive_chaum_pedersen(t,_,r,n,i,o)});return CiphertextBallotSelection(__kwargtrans__({object_id:_,description_hash:e,ciphertext:t,is_placeholder_selection:a,nonce:s,crypto_hash:l,proof:u,extended_data:p}))};export var PlaintextBallotContest=__class__("PlaintextBallotContest",[ElectionObjectBase],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},ballot_selections:field(__kwargtrans__({default_factory:function(){return[]}})),get is_valid(){return __get__(this,function(_,e,t,r,n){if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=null;if(_.object_id!=e)return log_warning("{}{}{}{}{}".format(e,_.object_id)),!1;if(len(_.ballot_selections)>t)return log_warning("{}{}{}{}{}".format(t,len(_.ballot_selections))),!1;var i=0,o=0;for(var a of _.ballot_selections){var s=a.to_int();o+=s,s>=1&&(i+=1)}return i>r?(log_warning("{}{}{}{}{}".format(r,i)),!1):!(null!==n&&o>n)||(log_warning("{}{}{}{}{}".format(n,o)),!1)})},get __eq__(){return __get__(this,function(_,e){return isinstance(e,PlaintextBallotContest)&&_list_eq(_.ballot_selections,e.ballot_selections)})},get __ne__(){return __get__(this,function(_,e){return!_.__eq__(e)})}});for(let _ of PlaintextBallotContest.__bases__)__mergefields__(PlaintextBallotContest,_);__mergefields__(PlaintextBallotContest,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var CiphertextBallotContest=__class__("CiphertextBallotContest",[ElectionObjectBase,CryptoHashCheckable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},nonce:null,proof:null,get __eq__(){return __get__(this,function(_,e){return isinstance(e,CiphertextBallotContest)&&_.object_id==e.object_id&&_list_eq(_.ballot_selections,e.ballot_selections)&&_.description_hash==e.description_hash&&_.crypto_hash==e.crypto_hash&&_.nonce==e.nonce&&_.proof==e.proof})},get __ne__(){return __get__(this,function(_,e){return!_.__eq__(e)})},get aggregate_nonce(){return __get__(this,function(_){return _ciphertext_ballot_contest_aggregate_nonce(_.object_id,_.ballot_selections)})},get crypto_hash_with(){return __get__(this,function(_,e){return _ciphertext_ballot_context_crypto_hash(_.object_id,_.ballot_selections,e)})},get elgamal_accumulate(){return __get__(this,function(_){return _ciphertext_ballot_elgamal_accumulate(_.ballot_selections)})},get is_valid_encryption(){return __get__(this,function(_,e,t,r){if(e!=_.description_hash)return log_warning("{}{}{}{}{}{}{}".format(_.object_id,str(e),str(_.description_hash))),!1;var n=_.crypto_hash_with(e);if(_.crypto_hash!=n)return log_warning("{}{}{}{}{}{}{}".format(_.object_id,str(n),str(_.crypto_hash))),!1;if(null===_.proof)return log_warning("{}{}".format(_.object_id)),!1;var i=_.elgamal_accumulate();return _.proof.is_valid(i,t,r)})}});for(let _ of CiphertextBallotContest.__bases__)__mergefields__(CiphertextBallotContest,_);__mergefields__(CiphertextBallotContest,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var _ciphertext_ballot_elgamal_accumulate=function(_){return elgamal_add(...function(){var e=[];for(var t of _)e.append(t.ciphertext);return e}())};export var _ciphertext_ballot_context_crypto_hash=function(_,e,t){if(0==len(e))return log_warning("{}{}{}".format(_)),ZERO_MOD_Q;var r=function(){var _=[];for(var t of e)_.append(t.crypto_hash);return _}();return hash_elems(_,t,...r)};export var _ciphertext_ballot_contest_aggregate_nonce=function(_,e){var t=list();for(var r of e){if(null===r.nonce)return log_warning("{}{}{}".format(_)),null;t.append(r.nonce)}return add_q(...t)};export var make_ciphertext_ballot_contest=function(_,e,t,r,n,i,o,a,s,l){if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=null;if(void 0===s||null!=s&&s.hasOwnProperty("__kwargtrans__"))s=null;if(void 0===l||null!=l&&l.hasOwnProperty("__kwargtrans__"))l=null;if(null===a)a=_ciphertext_ballot_context_crypto_hash(_,t,e);var u=_ciphertext_ballot_contest_aggregate_nonce(_,t);if(null===s)s=flatmap_optional(u,function(_){return make_constant_chaum_pedersen(__kwargtrans__({message:_ciphertext_ballot_elgamal_accumulate(t),constant:o,r:_,k:r,seed:i,hash_header:n}))});return CiphertextBallotContest(__kwargtrans__({object_id:_,description_hash:e,ballot_selections:t,nonce:l,crypto_hash:a,proof:s}))};export var PlaintextBallot=__class__("PlaintextBallot",[ElectionObjectBase],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},get is_valid(){return __get__(this,function(_,e){return _.ballot_style==e||(log_warning("{}{}{}{}{}{}{}".format(_.object_id,e,_.ballot_style)),!1)})},get __eq__(){return __get__(this,function(_,e){return isinstance(e,PlaintextBallot)&&_.ballot_style==e.ballot_style&&_list_eq(_.contests,e.contests)})},get __ne__(){return __get__(this,function(_,e){return!_.__eq__(e)})}});for(let _ of PlaintextBallot.__bases__)__mergefields__(PlaintextBallot,_);__mergefields__(PlaintextBallot,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var CiphertextBallot=__class__("CiphertextBallot",[ElectionObjectBase,CryptoHashCheckable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},get __eq__(){return __get__(this,function(_,e){return isinstance(e,CiphertextBallot)&&_.object_id==e.object_id&&_.ballot_style==e.ballot_style&&_.description_hash==e.description_hash&&_.previous_tracking_hash==e.previous_tracking_hash&&_list_eq(_.contests,e.contests)&&_.tracking_hash==e.tracking_hash&&_.timestamp==e.timestamp&&_.crypto_hash==e.crypto_hash&&_.nonce==e.nonce})},get __ne__(){return __get__(this,function(_,e){return!_.__eq__(e)})},get nonce_seed(){return function(_,e,t){return hash_elems(_,e,t)}},get hashed_ballot_nonce(){return __get__(this,function(_){return null===_.nonce?(log_warning("{}{}{}".format(_.object_id)),null):_.nonce_seed(_.description_hash,_.object_id,_.nonce)})},get get_tracker_code(){return __get__(this,function(_){return _.tracking_hash?tracker_hash_to_words(_.tracking_hash):null})},get crypto_hash_with(){return __get__(this,function(_,e){if(0==len(_.contests))return log_warning("{}{}{}".format(_.object_id)),ZERO_MOD_Q;var t=function(){var e=[];for(var t of _.contests)e.append(t.crypto_hash);return e}();return hash_elems(_.object_id,e,...t)})},get is_valid_encryption(){return __get__(this,function(_,e,t,r){if(e!=_.description_hash)return log_warning("{}{}{}{}{}{}{}".format(_.object_id,str(e),str(_.description_hash))),!1;var n=_.crypto_hash_with(e);if(_.crypto_hash!=n)return log_warning("{}{}{}{}{}{}{}".format(_.object_id,str(n),str(_.crypto_hash))),!1;var i=list();for(var o of _.contests){for(var a of o.ballot_selections)i.append(a.is_valid_encryption(a.description_hash,t,r));i.append(o.is_valid_encryption(o.description_hash,t,r))}return all(i)})}});for(let _ of CiphertextBallot.__bases__)__mergefields__(CiphertextBallot,_);__mergefields__(CiphertextBallot,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var BallotBoxState=__class__("BallotBoxState",[Enum],{__module__:__name__,CAST:1,SPOILED:2,UNKNOWN:999});export var CiphertextAcceptedBallot=__class__("CiphertextAcceptedBallot",[CiphertextBallot],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},get __eq__(){return __get__(this,function(_,e){return isinstance(e,CiphertextAcceptedBallot)&&super.__eq__(_,e)&&_.state==e.state})},get __ne__(){return __get__(this,function(_,e){return!_.__eq__(e)})}});for(let _ of CiphertextAcceptedBallot.__bases__)__mergefields__(CiphertextAcceptedBallot,_);__mergefields__(CiphertextAcceptedBallot,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var make_ciphertext_ballot=function(_,e,t,r,n,i,o,a){if(void 0===i||null!=i&&i.hasOwnProperty("__kwargtrans__"))i=null;if(void 0===o||null!=o&&o.hasOwnProperty("__kwargtrans__"))o=null;if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=null;0==len(n)&&log_warning("{}".format());var s=function(){var _=[];for(var e of n)_.append(e.crypto_hash);return _}(),l=hash_elems(_,t,...s);o=null===o?to_ticks(datetime.now()):o;if(null===r)r=t;if(null===a)a=get_rotating_tracker_hash(r,o,l);return CiphertextBallot(__kwargtrans__({object_id:_,ballot_style:e,description_hash:t,previous_tracking_hash:r,contests:n,tracking_hash:a,timestamp:o,nonce:i,crypto_hash:l}))};export var make_ciphertext_accepted_ballot=function(_,e,t,r,n,i,o,a){if(void 0===o||null!=o&&o.hasOwnProperty("__kwargtrans__"))o=null;if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=BallotBoxState.UNKNOWN;0==len(n)&&log_warning("{}".format());var s=function(){var _=[];for(var e of n)_.append(e.crypto_hash);return _}(),l=hash_elems(_,t,...s);o=null===o?to_ticks(datetime.utcnow()):o;if(null===r)r=t;if(null===i)i=get_rotating_tracker_hash(r,o,l);var u=[];for(var p of n){var c=function(){var _=[];for(var e of p.ballot_selections)_.append(py_replace(e,__kwargtrans__({nonce:null})));return _}(),f=py_replace(p,__kwargtrans__({nonce:null,ballot_selections:c}));u.append(f)}return CiphertextAcceptedBallot(__kwargtrans__({object_id:_,ballot_style:e,description_hash:t,previous_tracking_hash:r,contests:u,tracking_hash:i,timestamp:o,crypto_hash:l,nonce:null,state:a}))};export var from_ciphertext_ballot=function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=BallotBoxState.UNKNOWN;return make_ciphertext_accepted_ballot(__kwargtrans__({object_id:_.object_id,ballot_style:_.ballot_style,description_hash:_.description_hash,contests:_.contests,timestamp:_.timestamp,previous_tracking_hash:_.previous_tracking_hash,tracking_hash:_.tracking_hash,state:e}))};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{Proof,ProofUsage}from"./proof.js";import{Nonces}from"./nonces.js";import{log_warning}from"./logs.js";import{hash_elems}from"./hash.js";import{ElementModP,ElementModQ,ZERO_MOD_Q,a_minus_b_q,a_plus_bc_q,add_q,g_pow_p,int_to_q,mult_p,negate_q,pow_p}from"./group.js";import{ElGamalCiphertext}from"./elgamal.js";import{dataclass}from"./dataclasses.js";var __name__="chaum_pedersen";export var DisjunctiveChaumPedersenProof=__class__("DisjunctiveChaumPedersenProof",[Proof],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},usage:ProofUsage.SelectionValue,get __post_init__(){return __get__(this,function(_){__super__(DisjunctiveChaumPedersenProof,"__init__")(_)})},get is_valid(){return __get__(this,function(_,e,t,r){var n=e,i=n[0],o=n[1],a=_.proof_zero_pad,s=_.proof_zero_data,l=_.proof_one_pad,u=_.proof_one_data,p=_.proof_zero_challenge,c=_.proof_one_challenge,f=_.challenge,m=_.proof_zero_response,d=_.proof_one_response,g=i.is_valid_residue(),h=o.is_valid_residue(),y=a.is_valid_residue(),v=s.is_valid_residue(),b=l.is_valid_residue(),w=u.is_valid_residue(),x=p.is_in_bounds(),k=c.is_in_bounds(),E=m.is_in_bounds(),I=d.is_in_bounds(),j=add_q(p,c)==f&&f==hash_elems(r,i,o,a,s,l,u),S=g_pow_p(m)==mult_p(a,pow_p(i,p)),P=g_pow_p(d)==mult_p(l,pow_p(i,c)),O=pow_p(t,m)==mult_p(s,pow_p(o,p)),B=mult_p(g_pow_p(c),pow_p(t,d))==mult_p(u,pow_p(o,c)),z=g&&h&&y&&v&&b&&w&&x&&k&&E&&I&&j&&S&&P&&O&&B;return z||log_warning("found an invalid Disjunctive Chaum-Pedersen proof: "+str(dict([["in_bounds_alpha",g],["in_bounds_beta",h],["in_bounds_a0",y],["in_bounds_b0",v],["in_bounds_a1",b],["in_bounds_b1",w],["in_bounds_c0",x],["in_bounds_c1",k],["in_bounds_v0",E],["in_bounds_v1",I],["consistent_c",j],["consistent_gv0",S],["consistent_gv1",P],["consistent_kv0",O],["consistent_gc1kv1",B],["k",t],["proof",_]]))),z})}});for(let _ of DisjunctiveChaumPedersenProof.__bases__)__mergefields__(DisjunctiveChaumPedersenProof,_);__mergefields__(DisjunctiveChaumPedersenProof,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var ChaumPedersenProof=__class__("ChaumPedersenProof",[Proof],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},usage:ProofUsage.SecretValue,get __post_init__(){return __get__(this,function(_){__super__(ChaumPedersenProof,"__init__")(_)})},get is_valid(){return __get__(this,function(_,e,t,r,n){var i=e,o=i[0],a=i[1],s=_.pad,l=_.data,u=_.challenge,p=_.response,c=o.is_valid_residue(),f=a.is_valid_residue(),m=t.is_valid_residue(),d=r.is_valid_residue(),g=s.is_valid_residue(),h=l.is_valid_residue(),y=u.is_in_bounds(),v=p.is_in_bounds(),b=n.is_in_bounds(),w=u==hash_elems(n,o,a,s,l,r),x=v&&g&&y&&v&&g_pow_p(p)==mult_p(s,pow_p(t,u)),k=c&&h&&y&&v&&pow_p(o,p)==mult_p(l,pow_p(r,u)),E=c&&f&&m&&d&&g&&h&&y&&v&&b&&w&&x&&k;return E||log_warning("found an invalid Chaum-Pedersen proof: "+str(dict([["in_bounds_alpha",c],["in_bounds_beta",f],["in_bounds_k",m],["in_bounds_m",d],["in_bounds_a",g],["in_bounds_b",h],["in_bounds_c",y],["in_bounds_v",v],["in_bounds_q",b],["same_c",w],["consistent_gv",x],["consistent_av",k],["k",t],["q",n],["proof",_]]))),E})}});for(let _ of ChaumPedersenProof.__bases__)__mergefields__(ChaumPedersenProof,_);__mergefields__(ChaumPedersenProof,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var ConstantChaumPedersenProof=__class__("ConstantChaumPedersenProof",[Proof],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},usage:ProofUsage.SelectionLimit,get __post_init__(){return __get__(this,function(_){__super__(ConstantChaumPedersenProof,"__init__")(_)})},get is_valid(){return __get__(this,function(_,e,t,r){var n=e,i=n[0],o=n[1],a=_.pad,s=_.data,l=_.challenge,u=_.response,p=_.constant,c=i.is_valid_residue(),f=o.is_valid_residue(),m=a.is_valid_residue(),d=s.is_valid_residue(),g=l.is_in_bounds(),h=u.is_in_bounds(),y=int_to_q(p);if(null===y)var v=ZERO_MOD_Q,b=!1;else v=y,b=!0;var w=0<=p&&p<1e9,x=l==hash_elems(r,i,o,a,s),k=h&&m&&c&&g&&g_pow_p(u)==mult_p(a,pow_p(i,l)),E=b&&mult_p(g_pow_p(mult_p(l,v)),pow_p(t,u))==mult_p(s,pow_p(o,l)),I=c&&f&&m&&d&&g&&h&&x&&b&&w&&k&&E;return I||log_warning("found an invalid Constant Chaum-Pedersen proof: "+str(dict([["in_bounds_alpha",c],["in_bounds_beta",f],["in_bounds_a",m],["in_bounds_b",d],["in_bounds_c",g],["in_bounds_v",h],["in_bounds_constant",b],["sane_constant",w],["same_c",x],["consistent_gv",k],["consistent_kv",E],["k",t],["proof",_]]))),I})}});for(let _ of ConstantChaumPedersenProof.__bases__)__mergefields__(ConstantChaumPedersenProof,_);__mergefields__(ConstantChaumPedersenProof,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var make_disjunctive_chaum_pedersen=function(_,e,t,r,n,i){return 0==i?make_disjunctive_chaum_pedersen_zero(_,e,t,r,n):make_disjunctive_chaum_pedersen_one(_,e,t,r,n)};export var make_disjunctive_chaum_pedersen_zero=function(_,e,t,r,n){var i,o=(i=_)[0],a=i[1],s=(i=Nonces(n,"disjoint-chaum-pedersen-proof").__getslice__(0,3,1))[0],l=i[1],u=i[2],p=g_pow_p(u),c=pow_p(t,u),f=negate_q(s),m=mult_p(g_pow_p(l),pow_p(o,f)),d=mult_p(pow_p(t,l),g_pow_p(s),pow_p(a,f)),g=hash_elems(r,o,a,p,c,m,d),h=a_minus_b_q(g,s),y=a_plus_bc_q(u,h,e);return DisjunctiveChaumPedersenProof(p,c,m,d,h,s,g,y,l)};export var make_disjunctive_chaum_pedersen_one=function(_,e,t,r,n){var i,o=(i=_)[0],a=i[1],s=(i=Nonces(n,"disjoint-chaum-pedersen-proof").__getslice__(0,3,1))[0],l=i[1],u=i[2],p=negate_q(s),c=mult_p(g_pow_p(l),pow_p(o,p)),f=mult_p(pow_p(t,l),pow_p(a,p)),m=g_pow_p(u),d=pow_p(t,u),g=hash_elems(r,o,a,c,f,m,d),h=a_minus_b_q(g,s),y=a_plus_bc_q(u,h,e);return DisjunctiveChaumPedersenProof(c,f,m,d,s,h,g,l,y)};export var make_chaum_pedersen=function(_,e,t,r,n){var i=_,o=i[0],a=i[1],s=Nonces(r,"constant-chaum-pedersen-proof")[0],l=g_pow_p(s),u=pow_p(o,s),p=hash_elems(n,o,a,l,u,t),c=a_plus_bc_q(s,p,e);return ChaumPedersenProof(l,u,p,c)};export var make_constant_chaum_pedersen=function(_,e,t,r,n,i){var o=_,a=o[0],s=o[1],l=Nonces(n,"constant-chaum-pedersen-proof")[0],u=g_pow_p(l),p=pow_p(r,l),c=hash_elems(i,a,s,u,p),f=a_plus_bc_q(l,c,t);return ConstantChaumPedersenProof(u,p,c,f,e)};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";var __name__="dataclasses";export var dataclass=null;import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import*as _math from"./math.js";import*as _time from"./time.js";export{_math,_time};var __name__="datetime";export var zfill=function(_,e){_=str(_);return len(_)<e?__add__(__mul__("0",__sub__(e,__call__(len,null,_))),_):_};export var rjust=function(_,e){_=str(_);return len(_)<e?__add__(__mul__(" ",__sub__(e,__call__(len,null,_))),_):_};export var _cmp=function(_,e){return _==e?0:_>e?1:-1};export var MINYEAR=1;export var MAXYEAR=9999;export var _MAXORDINAL=3652059;export var _DAYS_IN_MONTH=[-1,31,28,31,30,31,30,31,31,30,31,30,31];export var _DAYS_BEFORE_MONTH=[-1];export var dbm=0;for(var dim of _DAYS_IN_MONTH.__getslice__(1,null,1))_DAYS_BEFORE_MONTH.append(dbm),dbm+=dim;export var _is_leap=function(_){return 0==__mod__(_,4)&&(0!=__mod__(_,100)||0==__mod__(_,400))};export var _days_before_year=function(_){var e=_-1;return 365*e+Math.floor(e/4)-Math.floor(e/100)+Math.floor(e/400)};export var _days_in_month=function(_,e){return 2==e&&_is_leap(_)?29:_DAYS_IN_MONTH[e]};export var _days_before_month=function(_,e){return _DAYS_BEFORE_MONTH[e]+(e>2&&_is_leap(_))};export var _ymd2ord=function(_,e,t){_days_in_month(_,e);return _days_before_year(_)+_days_before_month(_,e)+t};export var _DI400Y=_days_before_year(401);export var _DI100Y=_days_before_year(101);export var _DI4Y=_days_before_year(5);export var _ord2ymd=function(_){var e,t=(e=divmod(_-=1,_DI400Y))[0],r=(_=e[1],400*t+1),n=(e=divmod(_,_DI100Y))[0],i=(_=e[1],(e=divmod(_,_DI4Y))[0]),o=(_=e[1],(e=divmod(_,365))[0]);_=e[1];if(r+=100*n+4*i+o,4==o||4==n)return tuple([r-1,12,31]);var a=3==o&&(24!=i||3==n),s=_+50>>5,l=_DAYS_BEFORE_MONTH[s]+(s>2&&a);return l>_&&(l-=_DAYS_IN_MONTH[s-=1]+(2==s&&a)),tuple([r,s,(_-=l)+1])};export var _MONTHNAMES=[null,"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];export var _DAYNAMES=[null,"Mon","Tue","Wed","Thu","Fri","Sat","Sun"];export var _build_struct_time=function(_,e,t,r,n,i,o){var a=__mod__(_ymd2ord(_,e,t)+6,7),s=_days_before_month(_,e)+t;return tuple([_,e,t,r,n,i,a,s,o])};export var _format_time=function(_,e,t,r){var n="{}:{}:{}".format(zfill(_,2),zfill(e,2),zfill(t,2));return r&&(n+=".{}".format(zfill(r,6))),n};export var _wrap_strftime=function(_,e,t){for(var r=null,n=null,i=null,o=[],a=(c=tuple([0,len(e)]))[0],s=c[1];a<s;){var l=e[a];if(a+=1,"%"==l)if(a<s){l=e[a];if(a+=1,"f"==l){if(null===r)r="{}".format(zfill(getattr(_,"microsecond",0),6));o.append(r)}else if("z"==l){if(null===n){n="";if(hasattr(_,"utcoffset"))if(null!==(p=_.utcoffset())){var u="+";if(p.days<0){var p=-p;u="-"}var c,f=(c=divmod(p,timedelta(__kwargtrans__({hours:1}))))[0],m=c[1];m=Math.floor(m/timedelta(__kwargtrans__({minutes:1}))),n="{}{}{}".format(u,zfill(f,2),zfill(m,2))}}o.append(n)}else if("Z"==l){if(null===i){i="";if(hasattr(_,"tzname")){var d=_.tzname();if(null!==d)i=d.py_replace("%","%%")}}o.append(i)}else o.append("%"),o.append(l)}else o.append("%");else o.append(l)}o="".join(o);return _time.strftime(o,t)};export var _check_tzname=function(_){if(null!==_&&!isinstance(_,str)){var e=py_TypeError("tzinfo.tzname() must return None or string, not '{}'".format(py_typeof(_)));throw e.__cause__=null,e}};export var _check_utc_offset=function(_,e){if(null!==e){var t,r;if(!isinstance(e,timedelta))throw(t=py_TypeError("tzinfo.{}() must return None or timedelta, not '{}'".format(_,py_typeof(e)))).__cause__=null,t;if(e.__mod__(timedelta(__kwargtrans__({minutes:1}))).microseconds||e.microseconds)throw(t=ValueError("tzinfo.{}() must return a whole number of minutes, got {}".format(_,e))).__cause__=null,t;if(!__lt__(__neg__(__call__(timedelta,null,1)),e)||!__lt__(e,__call__(timedelta,null,1)))throw(t=__call__(ValueError,null,__call__((r="{}()={}, must be must be strictly between -timedelta(hours=24) and timedelta(hours=24)").format,r,_,e))).__cause__=null,t}};export var _check_int_field=function(_){var e=py_typeof(_);if(e==int)return _;if(e!=float){try{_=_.__int__();try{if(py_typeof(_)==int)return _;throw(t=py_TypeError("__int__ returned non-int (type {})".format(py_typeof(_).__name__))).__cause__=null,t}catch(t){}}catch(t){if(!isinstance(t,AttributeError))throw t}var t;throw(t=py_TypeError("an integer is required (got type {})".format(py_typeof(_).__name__))).__cause__=null,t}throw(t=py_TypeError("integer argument expected, got float")).__cause__=null,t};export var _check_date_fields=function(_,e,t){_=_check_int_field(_),e=_check_int_field(e),t=_check_int_field(t);if(!(MINYEAR<=_&&_<=MAXYEAR))throw(r=ValueError("year must be in {}..{}".format(MINYEAR,MAXYEAR),_)).__cause__=null,r;if(!(1<=e&&e<=12))throw(r=ValueError("month must be in 1..12",e)).__cause__=null,r;var r,n=_days_in_month(_,e);if(!(1<=t&&t<=n))throw(r=ValueError("day must be in 1..{}".format(n),t)).__cause__=null,r;return tuple([_,e,t])};export var _check_time_fields=function(_,e,t,r){var n;_=_check_int_field(_),e=_check_int_field(e),t=_check_int_field(t),r=_check_int_field(r);if(!(0<=_&&_<=23))throw(n=ValueError("hour must be in 0..23",_)).__cause__=null,n;if(!(0<=e&&e<=59))throw(n=ValueError("minute must be in 0..59",e)).__cause__=null,n;if(!(0<=t&&t<=59))throw(n=ValueError("second must be in 0..59",t)).__cause__=null,n;if(!(0<=r&&r<=999999))throw(n=ValueError("microsecond must be in 0..999999",r)).__cause__=null,n;return tuple([_,e,t,r])};export var _check_tzinfo_arg=function(_){if(null!==_&&!isinstance(_,tzinfo)){var e=py_TypeError("tzinfo argument must be None or of a tzinfo subclass");throw e.__cause__=null,e}};export var _cmperror=function(_,e){var t=py_TypeError("can't compare '{}' to '{}'".format(py_typeof(_).__name__,py_typeof(e).__name__));throw t.__cause__=null,t};export var _divide_and_round=function(_,e){var t=divmod(_,e),r=t[0],n=t[1];return n*=2,((e>0?n>e:n<e)||n==e&&1==__mod__(r,2))&&(r+=1),r};export var timedelta=__class__("timedelta",[object],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t,r,n,i,o,a){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=0;if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=0;if(void 0===i||null!=i&&i.hasOwnProperty("__kwargtrans__"))i=0;if(void 0===o||null!=o&&o.hasOwnProperty("__kwargtrans__"))o=0;if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=0;if(arguments.length){var s=arguments.length-1;if(arguments[s]&&arguments[s].hasOwnProperty("__kwargtrans__")){var l=arguments[s--];for(var u in l)switch(u){case"self":_=l[u];break;case"days":e=l[u];break;case"seconds":t=l[u];break;case"microseconds":r=l[u];break;case"milliseconds":n=l[u];break;case"minutes":i=l[u];break;case"hours":o=l[u];break;case"weeks":a=l[u]}}}var p=y=0,c=y;if(t+=60*i+3600*o,r+=1e3*n,isinstance(e+=7*a,float)){var f=(y=_math.modf(e))[0],m=(e=y[1],(y=_math.modf(86400*f))[0]),d=y[1];c=int(d),p=int(e)}else m=0,p=e;if(isinstance(t,float)){var g=(y=_math.modf(t))[0];t=y[1],t=int(t);g+=m}else g=m;e=(y=divmod(t,86400))[0],t=y[1];p+=e,c+=int(t);var h=1e6*g;if(isinstance(r,float)){r=round(r+h),t=(y=divmod(r,1e6))[0],r=y[1];p+=e=(y=divmod(t,86400))[0],c+=t=y[1]}else{r=int(r),t=(y=divmod(r,1e6))[0],r=y[1];p+=e=(y=divmod(t,86400))[0],c+=t=y[1];r=round(r+h)}t=(y=divmod(r,1e6))[0];var y,v=y[1];e=(y=divmod(c+=t,86400))[0],c=y[1];if(abs(p+=e)>999999999){var b=OverflowError(__mod__("timedelta # of days is too large: %d",p));throw b.__cause__=null,b}_._days=p,_._seconds=c,_._microseconds=v})},get __repr__(){return __get__(this,function(_){return _._microseconds?"datetime.timedelta(days={}, seconds={}, microseconds={})".format(_._days,_._seconds,_._microseconds):_._seconds?"datetime.timedelta(days={}, seconds={})".format(_._days,_._seconds):"datetime.timedelta(days={})".format(_._days)})},get __str__(){return __get__(this,function(_){var e,t,r=(e=divmod(_._seconds,60))[0],n=e[1],i=(e=divmod(r,60))[0],o=(r=e[1],"{}:{}:{}".format(i,zfill(r,2),zfill(n,2)));if(_._days)o="{} day{}, ".format((t=_._days,tuple([t,1!=abs(t)?"s":""])))+o;if(_._microseconds)o=o+".{}".format(zfill(_._microseconds,6));return o})},get total_seconds(){return __get__(this,function(_){return((86400*_.days+_.seconds)*Math.pow(10,6)+_.microseconds)/Math.pow(10,6)})},get _get_days(){return __get__(this,function(_){return _._days})},get _get_seconds(){return __get__(this,function(_){return _._seconds})},get _get_microseconds(){return __get__(this,function(_){return _._microseconds})},get __add__(){return __get__(this,function(_,e){return isinstance(e,timedelta)?timedelta(_._days+e._days,_._seconds+e._seconds,_._microseconds+e._microseconds):NotImplemented})},get __radd__(){return __get__(this,function(_,e){return _.__add__(e)})},get __sub__(){return __get__(this,function(_,e){return isinstance(e,timedelta)?timedelta(_._days-e._days,_._seconds-e._seconds,_._microseconds-e._microseconds):NotImplemented})},get __rsub__(){return __get__(this,function(_,e){return isinstance(e,timedelta)?-_+e:NotImplemented})},get __neg__(){return __get__(this,function(_){return timedelta(-_._days,-_._seconds,-_._microseconds)})},get __pos__(){return __get__(this,function(_){return _})},get __abs__(){return __get__(this,function(_){return _._days<0?__neg__(_):_})},get __mul__(){return __get__(this,function(_,e){if(isinstance(e,int))return timedelta(_._days*e,_._seconds*e,_._microseconds*e);if(isinstance(e,float)){var t=_._to_microseconds(),r=e.as_integer_ratio(),n=r[0],i=r[1];return timedelta(0,0,_divide_and_round(t*n,i))}return NotImplemented})},get __rmul__(){return __get__(this,function(_,e){return _.__mul__(e)})},get _to_microseconds(){return __get__(this,function(_){return 1e6*(86400*_._days+_._seconds)+_._microseconds})},get __floordiv__(){return __get__(this,function(_,e){if(!isinstance(e,tuple([int,timedelta])))return NotImplemented;var t=_._to_microseconds();return isinstance(e,timedelta)?Math.floor(t/e._to_microseconds()):isinstance(e,int)?timedelta(0,0,Math.floor(t/e)):void 0})},get __truediv__(){return __get__(this,function(_,e){if(!isinstance(e,tuple([int,float,timedelta])))return NotImplemented;var t=_._to_microseconds();if(isinstance(e,timedelta))return t/e._to_microseconds();if(isinstance(e,int))return timedelta(0,0,_divide_and_round(t,e));if(isinstance(e,float)){var r=e.as_integer_ratio(),n=r[0],i=r[1];return timedelta(0,0,_divide_and_round(i*t,n))}})},get __mod__(){return __get__(this,function(_,e){if(isinstance(e,timedelta)){var t=__mod__(_._to_microseconds(),e._to_microseconds());return timedelta(0,0,t)}return NotImplemented})},get __divmod__(){return __get__(this,function(_,e){if(isinstance(e,timedelta)){var t=divmod(_._to_microseconds(),e._to_microseconds()),r=t[0],n=t[1];return tuple([r,timedelta(0,0,n)])}return NotImplemented})},get __eq__(){return __get__(this,function(_,e){return!!isinstance(e,timedelta)&&0==_._cmp(e)})},get __le__(){return __get__(this,function(_,e){if(isinstance(e,timedelta))return _._cmp(e)<=0;_cmperror(_,e)})},get __lt__(){return __get__(this,function(_,e){if(isinstance(e,timedelta))return _._cmp(e)<0;_cmperror(_,e)})},get __ge__(){return __get__(this,function(_,e){if(isinstance(e,timedelta))return _._cmp(e)>=0;_cmperror(_,e)})},get __gt__(){return __get__(this,function(_,e){if(isinstance(e,timedelta))return _._cmp(e)>0;_cmperror(_,e)})},get _cmp(){return __get__(this,function(_,e){return _cmp(_._to_microseconds(),e._to_microseconds())})},get __bool__(){return __get__(this,function(_){return 0!=_._days||0!=_._seconds||0!=_._microseconds})}});Object.defineProperty(timedelta,"microseconds",property.call(timedelta,timedelta._get_microseconds)),Object.defineProperty(timedelta,"seconds",property.call(timedelta,timedelta._get_seconds)),Object.defineProperty(timedelta,"days",property.call(timedelta,timedelta._get_days));export var _td_min=timedelta(-999999999);export var _td_max=timedelta(__kwargtrans__({days:999999999,hours:23,minutes:59,seconds:59,microseconds:999999}));export var _td_resolution=timedelta(__kwargtrans__({microseconds:1}));Object.defineProperty(timedelta,"min",{get:function(){return _td_min}}),Object.defineProperty(timedelta,"max",{get:function(){return _td_max}}),Object.defineProperty(timedelta,"resolution",{get:function(){return _td_resolution}});export var date=__class__("date",[object],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t,r){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;if(arguments.length){var n=arguments.length-1;if(arguments[n]&&arguments[n].hasOwnProperty("__kwargtrans__")){var i=arguments[n--];for(var o in i)switch(o){case"self":_=i[o];break;case"year":e=i[o];break;case"month":t=i[o];break;case"day":r=i[o]}}}var a=_check_date_fields(e,t,r);e=a[0],t=a[1],r=a[2];_._year=e,_._month=t,_._day=r})},get fromtimestamp(){return __getcm__(this,function(_,e){var t=_time.localtime(e),r=t[0],n=t[1],i=t[2];t[3],t[4],t[5],t[6],t[7],t[8];return _(r,n,i)})},get today(){return __getcm__(this,function(_){var e=_time.time();return _.fromtimestamp(e)})},get fromordinal(){return __getcm__(this,function(_,e){var t=_ord2ymd(e);return _(t[0],t[1],t[2])})},get __repr__(){return __get__(this,function(_){return"datetime.date({}, {}, {})".format(_._year,_._month,_._day)})},get ctime(){return __get__(this,function(_){var e=__mod__(_.toordinal(),7)||7;return"{} {} {} 00:00:00 {}".format(_DAYNAMES[e],_MONTHNAMES[_._month],rjust(_._day,2),zfill(_._year,4))})},get strftime(){return __get__(this,function(_,e){return _wrap_strftime(_,e,_.timetuple())})},get __format__(){return __get__(this,function(_,e){if(!isinstance(e,str)){var t=py_TypeError("must be str, not {}".format(py_typeof(e).__name__));throw t.__cause__=null,t}return 0!=len(e)?_.strftime(e):str(_)})},get isoformat(){return __get__(this,function(_){return"{}-{}-{}".format(zfill(_._year,4),zfill(_._month,2),zfill(_._day,2))})},get __str__(){return __get__(this,function(_){return _.isoformat()})},get _get_year(){return __get__(this,function(_){return _._year})},get _get_month(){return __get__(this,function(_){return _._month})},get _get_day(){return __get__(this,function(_){return _._day})},get timetuple(){return __get__(this,function(_){return _build_struct_time(_._year,_._month,_._day,0,0,0,-1)})},get toordinal(){return __get__(this,function(_){return _ymd2ord(_._year,_._month,_._day)})},get py_replace(){return __get__(this,function(_,e,t,r){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=null;if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;if(arguments.length){var n=arguments.length-1;if(arguments[n]&&arguments[n].hasOwnProperty("__kwargtrans__")){var i=arguments[n--];for(var o in i)switch(o){case"self":_=i[o];break;case"year":e=i[o];break;case"month":t=i[o];break;case"day":r=i[o]}}}if(null===e)e=_._year;if(null===t)t=_._month;if(null===r)r=_._day;return date(e,t,r)})},get __eq__(){return __get__(this,function(_,e){return isinstance(e,date)?0==_._cmp(e):NotImplemented})},get __le__(){return __get__(this,function(_,e){return isinstance(e,date)?_._cmp(e)<=0:NotImplemented})},get __lt__(){return __get__(this,function(_,e){return isinstance(e,date)?_._cmp(e)<0:NotImplemented})},get __ge__(){return __get__(this,function(_,e){return isinstance(e,date)?_._cmp(e)>=0:NotImplemented})},get __gt__(){return __get__(this,function(_,e){return isinstance(e,date)?_._cmp(e)>0:NotImplemented})},get _cmp(){return __get__(this,function(_,e){var t,r=(t=tuple([_._year,_._month,_._day]))[0],n=t[1],i=t[2],o=(t=tuple([e._year,e._month,e._day]))[0],a=t[1],s=t[2];return _cmp("{}{}{}".format(zfill(r,4),zfill(n,2),zfill(i,2)),"{}{}{}".format(zfill(o,4),zfill(a,2),zfill(s,2)))})},get __add__(){return __get__(this,function(_,e){if(isinstance(e,timedelta)){var t=_.toordinal()+e.days;if(0<t&&t<=_MAXORDINAL)return date.fromordinal(t);var r=OverflowError("result out of range");throw r.__cause__=null,r}return NotImplemented})},get __radd__(){return __get__(this,function(_,e){return _.__add__(e)})},get __sub__(){return __get__(this,function(_,e){if(isinstance(e,timedelta))return __add__(_,__call__(timedelta,null,__neg__(e.days)));if(isinstance(e,date)){var t=_.toordinal(),r=e.toordinal();return __call__(timedelta,null,__sub__(t,r))}return NotImplemented})},get weekday(){return __get__(this,function(_){return __mod__(_.toordinal()+6,7)})},get isoweekday(){return __get__(this,function(_){return __mod__(_.toordinal(),7)||7})},get isocalendar(){return __get__(this,function(_){var e=_._year,t=_isoweek1monday(e),r=_ymd2ord(_._year,_._month,_._day),n=(o=divmod(r-t,7))[0],i=o[1];if(n<0){var o;t=_isoweek1monday(e-=1),n=(o=divmod(r-t,7))[0],i=o[1]}else if(n>=52&&r>=_isoweek1monday(e+1)){e+=1;n=0}return tuple([e,n+1,i+1])})},resolution:timedelta(__kwargtrans__({days:1}))});Object.defineProperty(date,"day",property.call(date,date._get_day)),Object.defineProperty(date,"month",property.call(date,date._get_month)),Object.defineProperty(date,"year",property.call(date,date._get_year));export var _date_class=date;export var _d_min=date(1,1,1);export var _d_max=date(9999,12,31);Object.defineProperty(date,"min",{get:function(){return _d_min}}),Object.defineProperty(date,"max",{get:function(){return _d_max}});export var tzinfo=__class__("tzinfo",[object],{__module__:__name__,get tzname(){return __get__(this,function(_,e){var t=NotImplementedError("tzinfo subclass must override tzname()");throw t.__cause__=null,t})},get utcoffset(){return __get__(this,function(_,e){var t=NotImplementedError("tzinfo subclass must override utcoffset()");throw t.__cause__=null,t})},get dst(){return __get__(this,function(_,e){var t=NotImplementedError("tzinfo subclass must override dst()");throw t.__cause__=null,t})},get fromutc(){return __get__(this,function(_,e){if(!isinstance(e,datetime))throw(n=py_TypeError("fromutc() requires a datetime argument")).__cause__=null,n;if(e.tzinfo!==_)throw(n=ValueError("dt.tzinfo is not self")).__cause__=null,n;var t=e.utcoffset();if(null===t)throw(n=ValueError("fromutc() requires a non-None utcoffset() result")).__cause__=null,n;if(null===(r=e.dst()))throw(n=ValueError("fromutc() requires a non-None dst() result")).__cause__=null,n;var r,n,i=t-r;if(i&&null===(r=(e+=i).dst()))throw(n=ValueError("fromutc(): dt.dst gave inconsistent results; cannot convert")).__cause__=null,n;return e+r})}});export var _tzinfo_class=tzinfo;export var time=__class__("time",[object],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t,r,n,i){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=0;if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=0;if(void 0===i||null!=i&&i.hasOwnProperty("__kwargtrans__"))i=null;if(arguments.length){var o=arguments.length-1;if(arguments[o]&&arguments[o].hasOwnProperty("__kwargtrans__")){var a=arguments[o--];for(var s in a)switch(s){case"self":_=a[s];break;case"hour":e=a[s];break;case"minute":t=a[s];break;case"second":r=a[s];break;case"microsecond":n=a[s];break;case"tzinfo":i=a[s]}}}var l=_check_time_fields(e,t,r,n);e=l[0],t=l[1],r=l[2],n=l[3];_check_tzinfo_arg(i),_._hour=e,_._minute=t,_._second=r,_._microsecond=n,_._tzinfo=i})},get _get_hour(){return __get__(this,function(_){return _._hour})},get _get_minute(){return __get__(this,function(_){return _._minute})},get _get_second(){return __get__(this,function(_){return _._second})},get _get_microsecond(){return __get__(this,function(_){return _._microsecond})},get _get_tzinfo(){return __get__(this,function(_){return _._tzinfo})},get __eq__(){return __get__(this,function(_,e){return!!isinstance(e,time)&&0==_._cmp(e,__kwargtrans__({allow_mixed:!0}))})},get __le__(){return __get__(this,function(_,e){if(isinstance(e,time))return _._cmp(e)<=0;_cmperror(_,e)})},get __lt__(){return __get__(this,function(_,e){if(isinstance(e,time))return _._cmp(e)<0;_cmperror(_,e)})},get __ge__(){return __get__(this,function(_,e){if(isinstance(e,time))return _._cmp(e)>=0;_cmperror(_,e)})},get __gt__(){return __get__(this,function(_,e){if(isinstance(e,time))return _._cmp(e)>0;_cmperror(_,e)})},get _cmp(){return __get__(this,function(_,e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=!1;if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var n=arguments[r--];for(var i in n)switch(i){case"self":_=n[i];break;case"other":e=n[i];break;case"allow_mixed":t=n[i]}}}var o=null,a=null;if(_._tzinfo===e._tzinfo)var s=!0;else s=(o=_.utcoffset())==(a=e.utcoffset());if(s)return _cmp(tuple([_._hour,_._minute,_._second,_._microsecond]),tuple([e._hour,e._minute,e._second,e._microsecond]));if(null===o||null===a){if(t)return 2;var l=py_TypeError("cannot compare naive and aware times");throw l.__cause__=null,l}var u=__sub__(__add__(__mul__(_._hour,60),_._minute),__floordiv__(o,__call__(timedelta,null,__kwargtrans__({minutes:1})))),p=__sub__(__add__(__mul__(e._hour,60),e._minute),__floordiv__(a,__call__(timedelta,null,__kwargtrans__({minutes:1}))));return _cmp(tuple([u,_._second,_._microsecond]),tuple([p,e._second,e._microsecond]))})},get _tzstr(){return __get__(this,function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=":";if(null!==(r=_.utcoffset())){if(r.days<0)var t="-",r=-r;else t="+";var n=divmod(r,timedelta(__kwargtrans__({hours:1}))),i=n[0],o=n[1];o=Math.floor(o/timedelta(__kwargtrans__({minutes:1}))),r="{}{}{}{}".format(t,zfill(i,2),e,zfill(o,2))}return r})},get __repr__(){return __get__(this,function(_){if(0!=_._microsecond)var e=", {}, {}".format(_._second,_._microsecond);else if(0!=_._second)e=", {}".format(_._second);else e="";e="datetime.time({}, {}{})".format(_._hour,_._minute,e);if(null!==_._tzinfo)e=e.__getslice__(0,len(e)-1,1)+", tzinfo={}".format(_._tzinfo.__repr__())+")";return e})},get isoformat(){return __get__(this,function(_){var e=_format_time(_._hour,_._minute,_._second,_._microsecond),t=_._tzstr();return t&&(e+=t),e})},get __str__(){return __get__(this,function(_){return _.isoformat()})},get strftime(){return __get__(this,function(_,e){var t=tuple([1900,1,1,_._hour,_._minute,_._second,0,1,-1]);return _wrap_strftime(_,e,t)})},get __format__(){return __get__(this,function(_,e){if(!isinstance(e,str)){var t=py_TypeError(__mod__("must be str, not %s",py_typeof(e).__name__));throw t.__cause__=null,t}return 0!=len(e)?_.strftime(e):str(_)})},get utcoffset(){return __get__(this,function(_){if(null===_._tzinfo)return null;var e=_._tzinfo.utcoffset(null);return _check_utc_offset("utcoffset",e),e})},get tzname(){return __get__(this,function(_){if(null===_._tzinfo)return null;var e=_._tzinfo.tzname(null);return _check_tzname(e),e})},get dst(){return __get__(this,function(_){if(null===_._tzinfo)return null;var e=_._tzinfo.dst(null);return _check_utc_offset("dst",e),e})},get py_replace(){return __get__(this,function(_,e,t,r,n,i){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=null;if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=null;if(void 0===i||null!=i&&i.hasOwnProperty("__kwargtrans__"))i=!0;if(arguments.length){var o=arguments.length-1;if(arguments[o]&&arguments[o].hasOwnProperty("__kwargtrans__")){var a=arguments[o--];for(var s in a)switch(s){case"self":_=a[s];break;case"hour":e=a[s];break;case"minute":t=a[s];break;case"second":r=a[s];break;case"microsecond":n=a[s];break;case"tzinfo":i=a[s]}}}if(null===e)e=_.hour;if(null===t)t=_.minute;if(null===r)r=_.second;if(null===n)n=_.microsecond;if(!0===i)i=_.tzinfo;return time(e,t,r,n,i)})},resolution:timedelta(__kwargtrans__({microseconds:1}))});Object.defineProperty(time,"tzinfo",property.call(time,time._get_tzinfo)),Object.defineProperty(time,"microsecond",property.call(time,time._get_microsecond)),Object.defineProperty(time,"second",property.call(time,time._get_second)),Object.defineProperty(time,"minute",property.call(time,time._get_minute)),Object.defineProperty(time,"hour",property.call(time,time._get_hour));export var _time_class=time;export var _tm_min=time(0,0,0);export var _tm_max=time(23,59,59,999999);Object.defineProperty(time,"min",{get:function(){return _tm_min}}),Object.defineProperty(time,"max",{get:function(){return _tm_max}});export var datetime=__class__("datetime",[date],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t,r,n,i,o,a,s){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=0;if(void 0===i||null!=i&&i.hasOwnProperty("__kwargtrans__"))i=0;if(void 0===o||null!=o&&o.hasOwnProperty("__kwargtrans__"))o=0;if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=0;if(void 0===s||null!=s&&s.hasOwnProperty("__kwargtrans__"))s=null;if(arguments.length){var l=arguments.length-1;if(arguments[l]&&arguments[l].hasOwnProperty("__kwargtrans__")){var u=arguments[l--];for(var p in u)switch(p){case"self":_=u[p];break;case"year":e=u[p];break;case"month":t=u[p];break;case"day":r=u[p];break;case"hour":n=u[p];break;case"minute":i=u[p];break;case"second":o=u[p];break;case"microsecond":a=u[p];break;case"tzinfo":s=u[p]}}}var c;e=(c=_check_date_fields(e,t,r))[0],t=c[1],r=c[2],n=(c=_check_time_fields(n,i,o,a))[0],i=c[1],o=c[2],a=c[3];_check_tzinfo_arg(s),_._year=e,_._month=t,_._day=r,_._hour=n,_._minute=i,_._second=o,_._microsecond=a,_._tzinfo=s})},get _get_hour(){return __get__(this,function(_){return _._hour})},get _get_minute(){return __get__(this,function(_){return _._minute})},get _get_second(){return __get__(this,function(_){return _._second})},get _get_microsecond(){return __get__(this,function(_){return _._microsecond})},get _get_tzinfo(){return __get__(this,function(_){return _._tzinfo})},get _fromtimestamp(){return __getcm__(this,function(_,e,t,r){var n=(o=_math.modf(e))[0],i=(e=o[1],round(1e6*n));i>=1e6?(e+=1,i-=1e6):i<0&&(e-=1,i+=1e6);var o,a=(o=(t?_time.gmtime:_time.localtime)(e))[0],s=o[1],l=o[2],u=o[3],p=o[4],c=o[5];o[6],o[7],o[8];return _(a,s,l,u,p,c=min(c,59),i,r)})},get fromtimestamp(){return __getcm__(this,function(_,e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;_check_tzinfo_arg(t);var r=_._fromtimestamp(e,null!==t,t);if(null!==t)r=t.fromutc(r);return r})},get utcfromtimestamp(){return __getcm__(this,function(_,e){return _._fromtimestamp(e,!0,null)})},get now(){return __getcm__(this,function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=null;var t=_time.time();return _.fromtimestamp(t,e)})},get utcnow(){return __getcm__(this,function(_){var e=_time.time();return _.utcfromtimestamp(e)})},get combine(){return __getcm__(this,function(_,e,t){var r;if(!isinstance(e,_date_class))throw(r=py_TypeError("date argument must be a date instance")).__cause__=null,r;if(!isinstance(t,_time_class))throw(r=py_TypeError("time argument must be a time instance")).__cause__=null,r;return _(e.year,e.month,e.day,t.hour,t.minute,t.second,t.microsecond,t.tzinfo)})},get timetuple(){return __get__(this,function(_){if(null===(e=_.dst()))var e=-1;else if(e)e=1;else e=0;return _build_struct_time(_.year,_.month,_.day,_.hour,_.minute,_.second,e)})},get timestamp(){return __get__(this,function(_){return null===_._tzinfo?_time.mktime(tuple([_.year,_.month,_.day,_.hour,_.minute,_.second,-1,-1,-1]))+_.microsecond/1e6:(e=__sub__(_,_EPOCH),__call__(e.total_seconds,e));var e})},get utctimetuple(){return __get__(this,function(_){var e=_.utcoffset();if(e)_=__call__(__isub__,null,_,e);var t,r=(t=tuple([_.year,_.month,_.day]))[0],n=t[1],i=t[2],o=(t=tuple([_.hour,_.minute,_.second]))[0],a=t[1],s=t[2];return _build_struct_time(r,n,i,o,a,s,0)})},get date(){return __get__(this,function(_){return date(_._year,_._month,_._day)})},get time(){return __get__(this,function(_){return time(_.hour,_.minute,_.second,_.microsecond)})},get timetz(){return __get__(this,function(_){return time(_.hour,_.minute,_.second,_.microsecond,_._tzinfo)})},get py_replace(){return __get__(this,function(_,e,t,r,n,i,o,a,s){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=null;if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=null;if(void 0===i||null!=i&&i.hasOwnProperty("__kwargtrans__"))i=null;if(void 0===o||null!=o&&o.hasOwnProperty("__kwargtrans__"))o=null;if(void 0===a||null!=a&&a.hasOwnProperty("__kwargtrans__"))a=null;if(void 0===s||null!=s&&s.hasOwnProperty("__kwargtrans__"))s=!0;if(arguments.length){var l=arguments.length-1;if(arguments[l]&&arguments[l].hasOwnProperty("__kwargtrans__")){var u=arguments[l--];for(var p in u)switch(p){case"self":_=u[p];break;case"year":e=u[p];break;case"month":t=u[p];break;case"day":r=u[p];break;case"hour":n=u[p];break;case"minute":i=u[p];break;case"second":o=u[p];break;case"microsecond":a=u[p];break;case"tzinfo":s=u[p]}}}if(null===e)e=_.year;if(null===t)t=_.month;if(null===r)r=_.day;if(null===n)n=_.hour;if(null===i)i=_.minute;if(null===o)o=_.second;if(null===a)a=_.microsecond;if(!0===s)s=_.tzinfo;return datetime(e,t,r,n,i,o,a,s)})},get astimezone(){return __get__(this,function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=null;if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;case"tz":e=r[n]}}}if(null===e){if(null===_.tzinfo)throw(m=ValueError("astimezone() requires an aware datetime")).__cause__=null,m;var i=__floordiv__(__sub__(_,_EPOCH),__call__(timedelta,null,__kwargtrans__({seconds:1}))),o=_time.localtime(i),a=datetime(...o.__getslice__(0,6,1));if(len(o)>9){var s=o[10],l=o[9];e=timezone(timedelta(__kwargtrans__({seconds:s})),l)}else{var u=__sub__(a,__call__(datetime,null,...__getslice__((c=_time,__call__(c.gmtime,c,i)),0,6,1))),p=_time.daylight&&__gt__(__getitem__(o,8),0);s=__neg__(p?_time.altzone:_time.timezone);if(__eq__(u,__call__(timedelta,null,__kwargtrans__({seconds:s}))))e=__call__(timezone,null,u,__getitem__(_time.tzname,p));else e=__call__(timezone,null,u)}}else if(!isinstance(e,tzinfo)){throw(m=py_TypeError("tz argument must be an instance of tzinfo")).__cause__=null,m}var c,f=_.tzinfo;if(null===f)throw(m=ValueError("astimezone() requires an aware datetime")).__cause__=null,m;if(e===f)return _;var m,d=_.utcoffset();if(null===d)throw(m=ValueError("astimezone() requires an aware datetime")).__cause__=null,m;var g=function(){var t=__sub__(_,d);return __call__(t.py_replace,t,__kwargtrans__({tzinfo:e}))}();return e.fromutc(g)})},get ctime(){return __get__(this,function(_){var e=__mod__(_.toordinal(),7)||7;return"{} {} {} {}:{}:{} {}".format(_DAYNAMES[e],_MONTHNAMES[_._month],zfill(_._day,2),zfill(_._hour,2),zfill(_._minute,2),zfill(_._second,2),zfill(_._year,4))})},get isoformat(){return __get__(this,function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e="T";var t="{}-{}-{}{}".format(zfill(_._year,4),zfill(_._month,2),zfill(_._day,2),e)+_format_time(_._hour,_._minute,_._second,_._microsecond);if(null!==(n=_.utcoffset())){if(n.days<0)var r="-",n=-n;else r="+";var i=divmod(n,timedelta(__kwargtrans__({hours:1}))),o=i[0],a=i[1];a=Math.floor(a/timedelta(__kwargtrans__({minutes:1})));t+="{}{}:{}".format(r,zfill(o,2),zfill(a,2))}return t})},get __repr__(){return __get__(this,function(_){var e=[_._year,_._month,_._day,_._hour,_._minute,_._second,_._microsecond];0==e[len(e)-1]&&e.py_pop(),0==e[len(e)-1]&&e.py_pop();var t="datetime.datetime({})".format(", ".join(map(str,e)));if(null!==_._tzinfo)t=t.__getslice__(0,len(t)-1,1)+", tzinfo={}".format(_._tzinfo.__repr__())+")";return t})},get __str__(){return __get__(this,function(_){return _.isoformat(__kwargtrans__({sep:" "}))})},get strptime(){return __getcm__(this,function(_,e,t){return _(..._time.strptime(e,t).__getslice__(0,6,1))})},get utcoffset(){return __get__(this,function(_){if(null===_._tzinfo)return null;var e=_._tzinfo.utcoffset(_);return _check_utc_offset("utcoffset",e),e})},get tzname(){return __get__(this,function(_){if(null===_._tzinfo)return null;var e=_._tzinfo.tzname(_);return _check_tzname(e),e})},get dst(){return __get__(this,function(_){if(null===_._tzinfo)return null;var e=_._tzinfo.dst(_);return _check_utc_offset("dst",e),e})},get __eq__(){return __get__(this,function(_,e){return isinstance(e,datetime)?0==_._cmp(e,__kwargtrans__({allow_mixed:!0})):!isinstance(e,date)&&NotImplemented})},get __le__(){return __get__(this,function(_,e){return isinstance(e,datetime)?_._cmp(e)<=0:isinstance(e,date)?void _cmperror(_,e):NotImplemented})},get __lt__(){return __get__(this,function(_,e){return isinstance(e,datetime)?_._cmp(e)<0:isinstance(e,date)?void _cmperror(_,e):NotImplemented})},get __ge__(){return __get__(this,function(_,e){return isinstance(e,datetime)?_._cmp(e)>=0:isinstance(e,date)?void _cmperror(_,e):NotImplemented})},get __gt__(){return __get__(this,function(_,e){return isinstance(e,datetime)?_._cmp(e)>0:isinstance(e,date)?void _cmperror(_,e):NotImplemented})},get _cmp(){return __get__(this,function(_,e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=!1;var r=null,n=null;if(_._tzinfo===e._tzinfo)var i=!0;else i=(r=_.utcoffset())==(n=e.utcoffset());if(i){var o="{}{}{}{}{}{}{}".format(zfill(_._year,4),zfill(_._month,2),zfill(_._day,2),zfill(_._hour,2),zfill(_._minute,2),zfill(_._second,2),zfill(_._microsecond,6)),a="{}{}{}{}{}{}{}".format(zfill(e._year,4),zfill(e._month,2),zfill(e._day,2),zfill(e._hour,2),zfill(e._minute,2),zfill(e._second,2),zfill(e._microsecond,6));return _cmp(o,a)}if(null===r||null===n){if(t)return 2;var s=py_TypeError("cannot compare naive and aware datetimes");throw s.__cause__=null,s}var l=__sub__(_,e);return l.days<0?-1:l?1:0})},get __add__(){return __get__(this,function(_,e){if(!isinstance(e,timedelta))return NotImplemented;var t,r=timedelta(_.toordinal(),__kwargtrans__({hours:_._hour,minutes:_._minute,seconds:_._second,microseconds:_._microsecond})),n=(r=__call__(__iadd__,null,r,e),(t=divmod(r.seconds,3600))[0]),i=t[1],o=(t=divmod(i,60))[0],a=t[1];if(0<r.days&&r.days<=_MAXORDINAL)return datetime.combine(date.fromordinal(r.days),time(n,o,a,r.microseconds,__kwargtrans__({tzinfo:_._tzinfo})));var s=OverflowError("result out of range");throw s.__cause__=null,s})},get __radd__(){return __get__(this,function(_,e){return _.__add__(e)})},get __sub__(){return __get__(this,function(_,e){if(!isinstance(e,datetime))return isinstance(e,timedelta)?__add__(_,__neg__(e)):NotImplemented;var t=_.toordinal(),r=e.toordinal(),n=_._second+60*_._minute+3600*_._hour,i=e._second+60*e._minute+3600*e._hour,o=timedelta(t-r,n-i,_._microsecond-e._microsecond);if(_._tzinfo===e._tzinfo)return o;var a=_.utcoffset(),s=e.utcoffset();if(a==s)return o;if(null===a||null===s){var l=py_TypeError("cannot mix naive and timezone-aware time");throw l.__cause__=null,l}return __sub__(__add__(o,s),a)})},resolution:timedelta(__kwargtrans__({microseconds:1}))});Object.defineProperty(datetime,"tzinfo",property.call(datetime,datetime._get_tzinfo)),Object.defineProperty(datetime,"microsecond",property.call(datetime,datetime._get_microsecond)),Object.defineProperty(datetime,"second",property.call(datetime,datetime._get_second)),Object.defineProperty(datetime,"minute",property.call(datetime,datetime._get_minute)),Object.defineProperty(datetime,"hour",property.call(datetime,datetime._get_hour));export var _dt_min=datetime(1,1,1);export var _dt_max=datetime(9999,12,31,23,59,59,999999);Object.defineProperty(datetime,"min",{get:function(){return _dt_min}}),Object.defineProperty(datetime,"max",{get:function(){return _dt_max}});export var _isoweek1monday=function(_){var e=_ymd2ord(_,1,1),t=__mod__(e+6,7),r=e-t;return t>3&&(r+=7),r};export var _Omitted="@#$^&$^";export var timezone=__class__("timezone",[tzinfo],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=_Omitted;if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var n=arguments[r--];for(var i in n)switch(i){case"self":_=n[i];break;case"offset":e=n[i];break;case"py_name":t=n[i]}}}if(!isinstance(e,timedelta))throw(o=py_TypeError("offset must be a timedelta")).__cause__=null,o;if(t===_Omitted){if(!e)e=_.utc;t=null}else if(!isinstance(t,str)){var o;throw(o=py_TypeError("name must be a string")).__cause__=null,o}if(!__le__(_._minoffset,e)||!__le__(e,_._maxoffset))throw(o=__call__(ValueError,null,"offset must be a timedelta strictly between -timedelta(hours=24) and timedelta(hours=24).")).__cause__=null,o;if(0!=e.microseconds||0!=__mod__(e.seconds,60))throw(o=ValueError("offset must be a timedelta representing a whole number of minutes")).__cause__=null,o;_._offset=e,_._name=t})},get _create(){return __getcm__(this,function(_,e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=_Omitted;if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var n=arguments[r--];for(var i in n)switch(i){case"cls":_=n[i];break;case"offset":e=n[i];break;case"py_name":t=n[i]}}}return _(e,t)})},get __eq__(){return __get__(this,function(_,e){return py_typeof(e)==timezone&&_._offset==e._offset})},get __repr__(){return __get__(this,function(_){return _===_.utc?"datetime.timezone.utc":null===_._name?"datetime.timezone({})".format(_._offset.__repr__()):"datetime.timezone({}, {})".format(_._offset.__repr__(),_._name.__repr__())})},get __str__(){return __get__(this,function(_){return _.tzname(null)})},get utcoffset(){return __get__(this,function(_,e){if(isinstance(e,datetime)||null===e)return _._offset;var t=py_TypeError("utcoffset() argument must be a datetime instance or None");throw t.__cause__=null,t})},get tzname(){return __get__(this,function(_,e){if(isinstance(e,datetime)||null===e)return null===_._name?_._name_from_offset(_._offset):_._name;var t=py_TypeError("tzname() argument must be a datetime instance or None");throw t.__cause__=null,t})},get dst(){return __get__(this,function(_,e){if(isinstance(e,datetime)||null===e)return null;var t=py_TypeError("dst() argument must be a datetime instance or None");throw t.__cause__=null,t})},get fromutc(){return __get__(this,function(_,e){if(isinstance(e,datetime)){if(e.tzinfo!==_)throw(t=ValueError("fromutc: dt.tzinfo is not self")).__cause__=null,t;return __add__(e,_._offset)}var t;throw(t=py_TypeError("fromutc() argument must be a datetime instance or None")).__cause__=null,t})},_maxoffset:timedelta(__kwargtrans__({hours:23,minutes:59})),_minoffset:__neg__(__call__(timedelta,null,__kwargtrans__({hours:23,minutes:59}))),get _name_from_offset(){return function(_){if(__lt__(_,__call__(timedelta,null,0))){var e="-";_=__neg__(_)}else e="+";var t=__call__(divmod,null,_,__call__(timedelta,null,__kwargtrans__({hours:1}))),r=t[0],n=t[1],i=__floordiv__(n,__call__(timedelta,null,__kwargtrans__({minutes:1})));return"UTC{}{}:{}".format(e,zfill(r,2),zfill(i,2))}}});export var _tz_utc=timezone._create(timedelta(0));export var _tz_min=timezone._create(timezone._minoffset);export var _tz_max=timezone._create(timezone._maxoffset);Object.defineProperty(timezone,"utc",{get:function(){return _tz_utc}}),Object.defineProperty(timezone,"min",{get:function(){return _tz_min}}),Object.defineProperty(timezone,"max",{get:function(){return _tz_max}});export var _EPOCH=datetime(1970,1,1,__kwargtrans__({tzinfo:timezone.utc}));var sys={};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import*as __module_sys__ from"./sys.js";__nest__(sys,"",__module_sys__);var __name__="distutils";export var __version__=sys.version.__getslice__(0,sys.version.index(" "),1);import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{ElementModP,G,ONE_MOD_P,int_to_p_unchecked,mult_p}from"./group.js";import{Dict,Optional}from"./typing.js";var __name__="dlog";export var __dlog_cache=dict([[ONE_MOD_P,0]]);export var __dlog_max_elem=ONE_MOD_P;export var __dlog_max_exp=0;export var __dlog_lock=null;export var discrete_log=function(_){return __in__(_,__dlog_cache)?__dlog_cache[_]:__discrete_log_internal(_)};export var __discrete_log_internal=async function(_){for(var e=int_to_p_unchecked(G);_!=__dlog_max_elem;)__dlog_max_exp+=1,__dlog_max_elem=mult_p(e,__dlog_max_elem),__dlog_cache[__dlog_max_elem]=__dlog_max_exp;return __dlog_cache[__dlog_max_elem]};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{get_optional,to_ticks}from"./utils.js";import{Serializable}from"./serializable.js";import{log_warning}from"./logs.js";import{CryptoHashable,hash_elems}from"./hash.js";import{ElementModP,ElementModQ,G,P,Q,R}from"./group.js";import{ElectionObjectBase}from"./election_object_base.js";import{_list_eq}from"./ballot.js";import{Any,List,Optional,Set,cast}from"./typing.js";import{Enum,unique}from"./enum.js";import{datetime}from"./datetime.js";import{InitVar,dataclass,field}from"./dataclasses.js";var __name__="election";export var ElectionType=unique(__class__("ElectionType",[Enum],{__module__:__name__,unknown:0,general:1,partisan_primary_closed:2,partisan_primary_open:3,primary:4,runoff:5,special:6,other:7}));export var ReportingUnitType=unique(__class__("ReportingUnitType",[Enum],{__module__:__name__,unknown:0,ballot_batch:1,ballot_style_area:2,borough:3,city:4,city_council:5,combined_precinct:6,congressional:7,country:8,county:9,county_council:10,drop_box:11,judicial:12,municipality:13,polling_place:14,precinct:15,school:16,special:17,split_precinct:18,state:19,state_house:20,state_senate:21,township:22,utility:23,village:24,vote_center:25,ward:26,water:27,other:28}));export var VoteVariationType=unique(__class__("VoteVariationType",[Enum],{__module__:__name__,unknown:0,one_of_m:1,approval:2,borda:3,cumulative:4,majority:5,n_of_m:6,plurality:7,proportional:8,range:9,rcv:10,super_majority:11,other:12}));export var AnnotatedString=__class__("AnnotatedString",[Serializable,CryptoHashable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},annotation:field(__kwargtrans__({py_default:""})),value:field(__kwargtrans__({py_default:""})),get crypto_hash(){return __get__(this,function(_){return hash_elems(_.annotation,_.value)})}});for(let _ of AnnotatedString.__bases__)__mergefields__(AnnotatedString,_);__mergefields__(AnnotatedString,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var Language=__class__("Language",[Serializable,CryptoHashable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},language:field(__kwargtrans__({py_default:"en"})),get crypto_hash(){return __get__(this,function(_){return hash_elems(_.value,_.language)})}});for(let _ of Language.__bases__)__mergefields__(Language,_);__mergefields__(Language,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var InternationalizedText=__class__("InternationalizedText",[Serializable,CryptoHashable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},text:field(__kwargtrans__({default_factory:function(){return[]}})),get crypto_hash(){return __get__(this,function(_){return hash_elems(_.text)})}});for(let _ of InternationalizedText.__bases__)__mergefields__(InternationalizedText,_);__mergefields__(InternationalizedText,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var ContactInformation=__class__("ContactInformation",[Serializable,CryptoHashable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},address_line:field(__kwargtrans__({py_default:null})),email:field(__kwargtrans__({py_default:null})),phone:field(__kwargtrans__({py_default:null})),py_name:field(__kwargtrans__({py_default:null})),get crypto_hash(){return __get__(this,function(_){return hash_elems(_.py_name,_.address_line,_.email,_.phone)})}});for(let _ of ContactInformation.__bases__)__mergefields__(ContactInformation,_);__mergefields__(ContactInformation,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var GeopoliticalUnit=__class__("GeopoliticalUnit",[ElectionObjectBase,CryptoHashable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},contact_information:field(__kwargtrans__({py_default:null})),get crypto_hash(){return __get__(this,function(_){return hash_elems(_.object_id,_.py_name,str(_.py_metatype.py_name),_.contact_information)})}});for(let _ of GeopoliticalUnit.__bases__)__mergefields__(GeopoliticalUnit,_);__mergefields__(GeopoliticalUnit,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var BallotStyle=__class__("BallotStyle",[ElectionObjectBase,CryptoHashable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},geopolitical_unit_ids:field(__kwargtrans__({py_default:null})),party_ids:field(__kwargtrans__({py_default:null})),image_uri:field(__kwargtrans__({py_default:null})),get crypto_hash(){return __get__(this,function(_){return hash_elems(_.object_id,_.geopolitical_unit_ids,_.party_ids,_.image_uri)})}});for(let _ of BallotStyle.__bases__)__mergefields__(BallotStyle,_);__mergefields__(BallotStyle,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var Party=__class__("Party",[ElectionObjectBase,CryptoHashable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},ballot_name:field(__kwargtrans__({py_default:InternationalizedText()})),abbreviation:field(__kwargtrans__({py_default:null})),color:field(__kwargtrans__({py_default:null})),logo_uri:field(__kwargtrans__({py_default:null})),get get_party_id(){return __get__(this,function(_){return _.object_id})},get crypto_hash(){return __get__(this,function(_){return hash_elems(_.object_id,_.ballot_name,_.abbreviation,_.color,_.logo_uri)})}});for(let _ of Party.__bases__)__mergefields__(Party,_);__mergefields__(Party,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var Candidate=__class__("Candidate",[ElectionObjectBase,CryptoHashable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},ballot_name:field(__kwargtrans__({py_default:InternationalizedText()})),party_id:field(__kwargtrans__({py_default:null})),image_uri:field(__kwargtrans__({py_default:null})),is_write_in:field(__kwargtrans__({py_default:null})),get get_candidate_id(){return __get__(this,function(_){return _.object_id})},get crypto_hash(){return __get__(this,function(_){return hash_elems(_.object_id,_.ballot_name,_.party_id,_.image_uri)})}});for(let _ of Candidate.__bases__)__mergefields__(Candidate,_);__mergefields__(Candidate,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var SelectionDescription=__class__("SelectionDescription",[ElectionObjectBase,CryptoHashable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},get crypto_hash(){return __get__(this,function(_){return hash_elems(_.object_id,_.sequence_order,_.candidate_id)})}});for(let _ of SelectionDescription.__bases__)__mergefields__(SelectionDescription,_);__mergefields__(SelectionDescription,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var ContestDescription=__class__("ContestDescription",[ElectionObjectBase,CryptoHashable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},ballot_selections:field(__kwargtrans__({default_factory:function(){return[]}})),ballot_title:field(__kwargtrans__({py_default:null})),ballot_subtitle:field(__kwargtrans__({py_default:null})),get __eq__(){return __get__(this,function(_,e){return isinstance(e,ContestDescription)&&_.electoral_district_id==e.electoral_district_id&&_.sequence_order==e.sequence_order&&_.votes_allowed==e.votes_allowed&&_.number_elected==e.number_elected&&_.votes_allowed==e.votes_allowed&&_.py_name==e.py_name&&_list_eq(_.ballot_selections,e.ballot_selections)&&_.ballot_title==e.ballot_title&&_.ballot_subtitle==e.ballot_subtitle})},get crypto_hash(){return __get__(this,function(_){return hash_elems(_.object_id,_.sequence_order,_.electoral_district_id,str(_.vote_variation.py_name),_.ballot_title,_.ballot_subtitle,_.py_name,_.number_elected,_.votes_allowed,_.ballot_selections)})},get is_valid(){return __get__(this,function(_){var e=_.number_elected<=len(_.ballot_selections),t=null===_.votes_allowed||_.number_elected<=_.votes_allowed,r=set(),n=set(),i=set(),o=len(_.ballot_selections);for(var a of _.ballot_selections)1,__in__(a.object_id,n)||n.add(a.object_id),__in__(a.sequence_order,i)||i.add(a.sequence_order),__in__(a.candidate_id,r)||r.add(a.candidate_id);var s=len(r)==o,l=len(n)==o,u=len(i)==o,p=e&&t&&s&&l&&u;return p||log_warning("Contest %s failed validation check: %s",_.object_id,str(dict([["contest_has_valid_number_elected",e],["contest_has_valid_votes_allowed",t],["selections_have_valid_candidate_ids",s],["selections_have_valid_selection_ids",l],["selections_have_valid_sequence_ids",u]]))),p})}});for(let _ of ContestDescription.__bases__)__mergefields__(ContestDescription,_);__mergefields__(ContestDescription,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var CandidateContestDescription=__class__("CandidateContestDescription",[ContestDescription],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},primary_party_ids:field(__kwargtrans__({default_factory:function(){return[]}}))});for(let _ of CandidateContestDescription.__bases__)__mergefields__(CandidateContestDescription,_);__mergefields__(CandidateContestDescription,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var ReferendumContestDescription=__class__("ReferendumContestDescription",[ContestDescription],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})}});for(let _ of ReferendumContestDescription.__bases__)__mergefields__(ReferendumContestDescription,_);__mergefields__(ReferendumContestDescription,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var ContestDescriptionWithPlaceholders=__class__("ContestDescriptionWithPlaceholders",[ContestDescription],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},placeholder_selections:field(__kwargtrans__({default_factory:function(){return[]}})),get is_valid(){return __get__(this,function(_){return __super__(ContestDescriptionWithPlaceholders,"is_valid")(_)&&len(_.placeholder_selections)==_.number_elected})},get is_placeholder(){return __get__(this,function(_,e){return __in__(e,_.placeholder_selections)})},get selection_for(){return __get__(this,function(_,e){var t=list(filter(function(_){return _.object_id==e},_.ballot_selections));if(any(t))return t[0];var r=list(filter(function(_){return _.object_id==e},_.placeholder_selections));return any(r)?r[0]:null})}});for(let _ of ContestDescriptionWithPlaceholders.__bases__)__mergefields__(ContestDescriptionWithPlaceholders,_);__mergefields__(ContestDescriptionWithPlaceholders,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var ElectionDescription=__class__("ElectionDescription",[Serializable,CryptoHashable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},py_name:field(__kwargtrans__({py_default:null})),contact_information:field(__kwargtrans__({py_default:null})),get __eq__(){return __get__(this,function(_,e){return isinstance(e,ElectionDescription)&&_.election_scope_id==e.election_scope_id&&_.py_metatype==e.py_metatype&&_.start_date==e.start_date&&_.end_date==e.end_date&&_list_eq(_.geopolitical_units,e.geopolitical_units)&&_list_eq(_.parties,e.parties)&&_list_eq(_.candidates,e.candidates)&&_list_eq(_.contests,e.contests)&&_list_eq(_.ballot_styles,e.ballot_styles)&&_.py_name==e.py_name&&_.contact_information==e.contact_information})},get crypto_hash(){return __get__(this,function(_){return hash_elems(_.election_scope_id,str(_.py_metatype.py_name),to_ticks(_.start_date),to_ticks(_.end_date),_.py_name,_.contact_information,_.geopolitical_units,_.parties,_.contests,_.ballot_styles)})},get is_valid(){return __get__(this,function(_){var e=set(),t=set(),r=set(),n=set(),i=set();set();for(var o of _.geopolitical_units)__in__(o.object_id,e)||e.add(o.object_id);var a=len(e)==len(_.geopolitical_units),s=!0;for(var l of _.ballot_styles){if(__in__(l.object_id,t)||t.add(l.object_id),null===l.geopolitical_unit_ids){s=!1;break}for(var u of l.geopolitical_unit_ids)s=s&&__in__(u,e)}var p=len(t)==len(_.ballot_styles)&&s;for(var c of _.parties)__in__(c.object_id,r)||r.add(c.object_id);var f=len(r)==len(_.parties),m=!0;for(var d of _.candidates){__in__(d.object_id,n)||n.add(d.object_id);m=m&&(null===d.party_id||__in__(d.party_id,r))}var g=len(n)==len(_.candidates),h=g&&m,y=!0,v=!0,b=!0,w=set();for(var x of _.contests){y=y&&x.is_valid();__in__(x.object_id,i)||i.add(x.object_id),__in__(x.sequence_order,w)||w.add(x.sequence_order);v=v&&__in__(x.electoral_district_id,e);if(isinstance(x,CandidateContestDescription)){var k=cast(CandidateContestDescription,x);if(null!==k.primary_party_ids)for(var E of k.primary_party_ids)b=b&&__in__(E,r)}}var I=len(i)==len(_.contests),j=len(w)==len(_.contests),S=I&&j&&y&&v&&b,P=a&&p&&f&&h&&S;return P||log_warning("Election failed validation check: is_valid: %s",str(dict([["geopolitical_units_valid",a],["ballot_styles_valid",p],["ballot_styles_have_valid_gp_unit_ids",s],["parties_valid",f],["candidates_valid",h],["candidates_have_valid_length",g],["candidates_have_valid_party_ids",m],["contests_valid",S],["contests_have_valid_object_ids",I],["contests_have_valid_sequence_ids",j],["contests_validate_their_properties",y],["contests_have_valid_electoral_district_id",v],["candidate_contests_have_valid_party_ids",b]]))),P})}});for(let _ of ElectionDescription.__bases__)__mergefields__(ElectionDescription,_);__mergefields__(ElectionDescription,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var InternalElectionDescription=__class__("InternalElectionDescription",[object],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},description:null,geopolitical_units:field(__kwargtrans__({init:!1})),contests:field(__kwargtrans__({init:!1})),ballot_styles:field(__kwargtrans__({init:!1})),description_hash:field(__kwargtrans__({init:!1})),get __post_init__(){return __get__(this,function(_,e){object.__setattr__(_,"description_hash",e.crypto_hash()),object.__setattr__(_,"geopolitical_units",e.geopolitical_units),object.__setattr__(_,"ballot_styles",e.ballot_styles),object.__setattr__(_,"contests",_._generate_contests_with_placeholders(e))})},get contest_for(){return __get__(this,function(_,e){var t=list(filter(function(_){return _.object_id==e},_.contests));return any(t)?t[0]:null})},get get_ballot_style(){return __get__(this,function(_,e){return list(filter(function(_){return _.object_id==e},_.ballot_styles))[0]})},get get_contests_for(){return __get__(this,function(_,e){var t=_.get_ballot_style(e);if(null===t.geopolitical_unit_ids)return list();var r=function(){var _=[];for(var e of t.geopolitical_unit_ids)_.append(e);return _}();return list(filter(function(_){return __in__(_.electoral_district_id,r)},_.contests))})},get _generate_contests_with_placeholders(){return __get__(this,function(_,e){var t=list();for(var r of e.contests){var n=generate_placeholder_selections_from(r,r.number_elected);t.append(contest_description_with_placeholders_from(r,n))}return t})}});for(let _ of InternalElectionDescription.__bases__)__mergefields__(InternalElectionDescription,_);__mergefields__(InternalElectionDescription,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var ElectionConstants=__class__("ElectionConstants",[Serializable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},large_prime:P,small_prime:Q,cofactor:R,generator:G});for(let _ of ElectionConstants.__bases__)__mergefields__(ElectionConstants,_);__mergefields__(ElectionConstants,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var CiphertextElectionContext=__class__("CiphertextElectionContext",[Serializable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})}});for(let _ of CiphertextElectionContext.__bases__)__mergefields__(CiphertextElectionContext,_);__mergefields__(CiphertextElectionContext,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});export var make_ciphertext_election_context=function(_,e,t,r){var n=hash_elems(P,Q,G,_,e,r),i=hash_elems(n,t);return CiphertextElectionContext(__kwargtrans__({number_of_guardians:_,quorum:e,elgamal_public_key:t,description_hash:r,crypto_base_hash:n,crypto_extended_base_hash:i}))};export var contest_description_with_placeholders_from=function(_,e){return ContestDescriptionWithPlaceholders(__kwargtrans__({object_id:_.object_id,electoral_district_id:_.electoral_district_id,sequence_order:_.sequence_order,vote_variation:_.vote_variation,number_elected:_.number_elected,votes_allowed:_.votes_allowed,py_name:_.py_name,ballot_selections:_.ballot_selections,ballot_title:_.ballot_title,ballot_subtitle:_.ballot_subtitle,placeholder_selections:e}))};export var generate_placeholder_selection_from=function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=null;var t=function(){var e=[];for(var t of _.ballot_selections)e.append(t.sequence_order);return e}();if(null===e)e=max(...t)+1;else if(__in__(e,t))return log_warning("{}{}{}".format(e)),null;var r="{}{}{}".format(_.object_id,e);return SelectionDescription("{}{}".format(r),"{}{}".format(r),e)};export var generate_placeholder_selections_from=function(_,e){for(var t=max(function(){var e=[];for(var t of _.ballot_selections)e.append(t.sequence_order);return e}()),r=list(),n=0;n<e;n++){var i=t+1+n;r.append(get_optional(generate_placeholder_selection_from(_,i)))}return r};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{get_optional}from"./utils.js";import{ElementModP}from"./group.js";import{CiphertextElectionContext,ElectionDescription,InternalElectionDescription,make_ciphertext_election_context}from"./election.js";import{Optional,Tuple}from"./typing.js";import{dataclass,field}from"./dataclasses.js";import{annotations}from"./__future__.js";var __name__="election_builder";export var ElectionBuilder=__class__("ElectionBuilder",[object],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},internal_description:field(__kwargtrans__({init:!1})),elgamal_public_key:field(__kwargtrans__({py_default:null})),get __post_init__(){return __get__(this,function(_){_.internal_description=InternalElectionDescription(_.description)})},get set_public_key(){return __get__(this,function(_,e){return _.elgamal_public_key=e,_})},get build(){return __get__(this,function(_){return _.description.is_valid()?null===_.elgamal_public_key?null:tuple([_.internal_description,make_ciphertext_election_context(_.number_of_guardians,_.quorum,get_optional(_.elgamal_public_key),_.description.crypto_hash())]):null})}});for(let _ of ElectionBuilder.__bases__)__mergefields__(ElectionBuilder,_);__mergefields__(ElectionBuilder,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{Serializable}from"./serializable.js";import{dataclass}from"./dataclasses.js";var __name__="election_object_base";export var ElectionObjectBase=__class__("ElectionObjectBase",[Serializable],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})}});for(let _ of ElectionObjectBase.__bases__)__mergefields__(ElectionObjectBase,_);__mergefields__(ElectionObjectBase,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{flatmap_optional,get_optional}from"./utils.js";import{log_error}from"./logs.js";import{hash_elems}from"./hash.js";import{ElementModP,ElementModQ,TWO_MOD_Q,ZERO_MOD_Q,g_pow_p,int_to_q,mult_inv_p,mult_p,pow_p,rand_range_q}from"./group.js";import{discrete_log}from"./dlog.js";import{Iterable,NamedTuple,Optional}from"./typing.js";var __name__="elgamal";export var ElGamalKeyPair=__class__("ElGamalKeyPair",[NamedTuple],{__module__:__name__});export var ElGamalCiphertext=__class__("ElGamalCiphertext",[NamedTuple],{__module__:__name__,get decrypt_known_product(){return __get__(this,function(_,e){return discrete_log(mult_p(_.data,mult_inv_p(e)))})},get decrypt(){return __get__(this,function(_,e){return _.decrypt_known_product(pow_p(_.pad,e))})},get decrypt_known_nonce(){return __get__(this,function(_,e,t){return _.decrypt_known_product(pow_p(e,t))})},get partial_decrypt(){return __get__(this,function(_,e){return pow_p(_.pad,e)})},get crypto_hash(){return __get__(this,function(_){return hash_elems(_.pad,_.data)})}});export var elgamal_keypair_from_secret=function(_){return _.to_int()<2?(log_error("ElGamal secret key needs to be in [2,Q)."),null):ElGamalKeyPair(_,g_pow_p(_))};export var elgamal_keypair_random=function(){return get_optional(elgamal_keypair_from_secret(rand_range_q(TWO_MOD_Q)))};export var elgamal_combine_public_keys=function(_){return mult_p(..._)};export var elgamal_encrypt=function(_,e,t){return e==ZERO_MOD_Q?(log_error("ElGamal encryption requires a non-zero nonce"),null):flatmap_optional(int_to_q(_),function(_){return ElGamalCiphertext(g_pow_p(e),mult_p(g_pow_p(_),pow_p(t,e)))})};export var elgamal_add=function(){var _=tuple([].slice.apply(arguments).slice(0)),e=_[0];for(var t of _.__getslice__(1,null,1))e=ElGamalCiphertext(mult_p(e.pad,t.pad),mult_p(e.data,t.data));return e};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";var __name__="enum";export var Enum=__class__("Enum",[object],{__module__:__name__});import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{bigInt as mpz}from"./BigInteger.js";var __name__="group";export var Q=mpz(2).pow(256)-189;export var P=mpz("1044388881413152506691752710716624382579964249047383780384233483283953907971553643537729993126875883902173634017777416360502926082946377942955704498542097614841825246773580689398386320439747911160897731551074903967243883427132918813748016269754522343505285898816777211761912392772914485521155521641049273446207578961939840619466145806859275053476560973295158703823395710210329314709715239251736552384080845836048778667318931418338422443891025911884723433084701207771901944593286624979917391350564662632723703007964229849154756196890615252286533089643184902706926081744149289517418249153634178342075381874131646013444796894582106870531535803666254579602632453103741452569793905551901541856173251385047414840392753585581909950158046256810542678368121278509960520957624737942914600310646609792665012858397381435755902851312071248102599442308951327039250818892493767423329663783709190716162023529669217300939783171415808233146823000766917789286154006042281423733706462905243774854543127239500245873582012663666430583862778167369547603016344242729592244544608279405999759391099775667746401633668308698186721172238255007962658564443858927634850415775348839052026675785694826386930175303143450046575460843879941791946313299322976993405829119");export var R=((P-1)*Q.modPow(-1,P)).mod(P);export var G=mpz("14245109091294741386751154342323521003543059865261911603340669522218159898070093327838595045175067897363301047764229640327930333001123401070596314469603183633790452807428416775717923182949583875381833912370889874572112086966300498607364501764494811956017881198827400327403252039184448888877644781610594801053753235453382508543906993571248387749420874609737451803650021788641249940534081464232937193671929586747339353451021712752406225276255010281004857233043241332527821911604413582442915993833774890228705495787357234006932755876972632840760599399514028393542345035433135159511099877773857622699742816228063106927776147867040336649025152771036361273329385354927395836330206311072577683892664475070720408447257635606891920123791602538518516524873664205034698194561673019535564273204744076336022130453963648114321050173994259620611015189498335966173440411967562175734606706258335095991140827763942280037063180207172918769921712003400007923888084296685269233298371143630883011213745082207405479978418089917768242592557172834921185990876960527013386693909961093302289646193295725135238595082039133488721800071459503353417574248679728577942863659802016004283193163470835709405666994892499382890912238098413819320185166580019604608311466");export var Q_MINUS_ONE=Q-1;export var ElementModQ=__class__("ElementModQ",[NamedTuple],{__module__:__name__,get to_hex(){return __get__(this,function(_){var e=_.elem.toString(16);if(__mod__(len(e),2))e="0"+e})},get to_int(){return __get__(this,function(_){return _.elem})},get is_in_bounds(){return __get__(this,function(_){return 0<=_.elem&&_.elem<Q})},get is_in_bounds_no_zero(){return __get__(this,function(_){return 0<_.elem&&_.elem<Q})},get __ne__(){return __get__(this,function(_,e){return(isinstance(e,ElementModP)||isinstance(e,ElementModQ))&&!eq_elems(_,e)})},get __eq__(){return __get__(this,function(_,e){return(isinstance(e,ElementModP)||isinstance(e,ElementModQ))&&eq_elems(_,e)})},get __str__(){return __get__(this,function(_){return _.elem.digits()})}});export var ElementModP=__class__("ElementModP",[NamedTuple],{__module__:__name__,get to_hex(){return __get__(this,function(_){var e=_.elem.toString(16);if(__mod__(len(e),2))e="0"+e;return e})},get to_int(){return __get__(this,function(_){return _.elem})},get is_in_bounds(){return __get__(this,function(_){return 0<=_.elem&&_.elem<P})},get is_in_bounds_no_zero(){return __get__(this,function(_){return 0<_.elem&&_.elem<P})},get is_valid_residue(){return __get__(this,function(_){var e=pow_p(_,ElementModQ(mpz(Q)))==ONE_MOD_P;return _.is_in_bounds()&&e})},get __ne__(){return __get__(this,function(_,e){return(isinstance(e,ElementModP)||isinstance(e,ElementModQ))&&!eq_elems(_,e)})},get __eq__(){return __get__(this,function(_,e){return(isinstance(e,ElementModP)||isinstance(e,ElementModQ))&&eq_elems(_,e)})},get __str__(){return __get__(this,function(_){return _.elem.digits()})}});export var ZERO_MOD_Q=ElementModQ(mpz(0));export var ONE_MOD_Q=ElementModQ(mpz(1));export var TWO_MOD_Q=ElementModQ(mpz(2));export var ZERO_MOD_P=ElementModP(mpz(0));export var ONE_MOD_P=ElementModP(mpz(1));export var TWO_MOD_P=ElementModP(mpz(2));export var ElementModPOrQ=Union.__getitem__([ElementModP,ElementModQ]);export var ElementModPOrQorInt=Union.__getitem__([ElementModP,ElementModQ,int]);export var ElementModQorInt=Union.__getitem__([ElementModQ,int]);export var ElementModPorInt=Union.__getitem__([ElementModP,int]);export var hex_to_q=function(_){var e=int(_,16);return 0<=e&&e<Q?ElementModQ(mpz(e)):null};export var int_to_q=function(_){var e=int(_);return 0<=e&&e<Q?ElementModQ(mpz(e)):null};export var int_to_q_unchecked=function(_){var e=mpz(int(_));return ElementModQ(e)};export var int_to_p=function(_){var e=int(_);return 0<=e&&e<P?ElementModP(mpz(e)):null};export var int_to_p_unchecked=function(_){var e=mpz(int(_));return ElementModP(e)};export var add_q=function(){var _=tuple([].slice.apply(arguments).slice(0)),e=mpz(0);for(var t of _){if(isinstance(t,int))t=int_to_q_unchecked(t);e=__mod__(e+t.elem,Q)}return ElementModQ(e)};export var a_minus_b_q=function(_,e){if(isinstance(_,int))_=int_to_q_unchecked(_);if(isinstance(e,int))e=int_to_q_unchecked(e);return ElementModQ(__mod__(_.elem-e.elem,Q))};export var div_p=function(_,e){if(isinstance(_,int))_=int_to_p_unchecked(_);if(isinstance(e,int))e=int_to_p_unchecked(e);var t=invert(e.elem,mpz(P));return mult_p(_,int_to_p_unchecked(t))};export var div_q=function(_,e){if(isinstance(_,int))_=int_to_p_unchecked(_);if(isinstance(e,int))e=int_to_p_unchecked(e);var t=invert(e.elem,mpz(Q));return mult_q(_,int_to_q_unchecked(t))};export var negate_q=function(_){if(isinstance(_,int))_=int_to_q_unchecked(_);return ElementModQ(Q-_.elem)};export var a_plus_bc_q=function(_,e,t){if(isinstance(_,int))_=int_to_q_unchecked(_);if(isinstance(e,int))e=int_to_q_unchecked(e);if(isinstance(t,int))t=int_to_q_unchecked(t);return ElementModQ(__mod__(_.elem+e.elem*t.elem,Q))};export var mult_inv_p=function(_){if(isinstance(_,int))_=int_to_p_unchecked(_);return ElementModP(powmod(_.elem,-1,P))};export var pow_p=function(_,e){if(isinstance(_,int))_=int_to_p_unchecked(_);if(isinstance(e,int))e=int_to_p_unchecked(e);return ElementModP(powmod(_.elem,e.elem,P))};export var pow_q=function(_,e){if(isinstance(_,int))_=int_to_q_unchecked(_);if(isinstance(e,int))e=int_to_q_unchecked(e);return ElementModQ(powmod(_.elem,e.elem,Q))};export var mult_p=function(){var _=tuple([].slice.apply(arguments).slice(0)),e=mpz(1);for(var t of _){if(isinstance(t,int))t=int_to_p_unchecked(t);e=__mod__(e*t.elem,P)}return ElementModP(e)};export var mult_q=function(){var _=tuple([].slice.apply(arguments).slice(0)),e=mpz(1);for(var t of _){if(isinstance(t,int))t=int_to_p_unchecked(t);e=__mod__(e*t.elem,Q)}return ElementModQ(e)};export var g_pow_p=function(_){return pow_p(ElementModP(mpz(G)),_)};export var rand_q=function(){return int_to_q_unchecked(mpz.randBetween(0,Q-1))};export var rand_range_q=function(_){if(isinstance(_,ElementModQ))_=_.to_int();for(var e=0;e<_;)e=mpz.randBetween(0,Q-1);return int_to_q_unchecked(e)};export var eq_elems=function(_,e){return _.elem==e.elem};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{ElementModP,ElementModPOrQ,ElementModQ,Q_MINUS_ONE,int_to_q_unchecked}from"./group.js";import{Protocol,Sequence,Union,runtime_checkable}from"./typing.js";var __name__="hash";export var CryptoHashable=runtime_checkable(__class__("CryptoHashable",[Protocol],{__module__:__name__,get crypto_hash(){return __get__(this,abstractmethod(function(_){}))}}));export var CryptoHashCheckable=runtime_checkable(__class__("CryptoHashCheckable",[Protocol],{__module__:__name__,get crypto_hash_with(){return __get__(this,abstractmethod(function(_,e){}))}}));export var CRYPTO_HASHABLE_T=Union.__getitem__([CryptoHashable,ElementModPOrQ,str,int,null]);export var CRYPTO_HASHABLE_ALL=Union.__getitem__([Sequence[CRYPTO_HASHABLE_T],CRYPTO_HASHABLE_T]);export var hash_elems=function(){tuple([].slice.apply(arguments).slice(0));return"no-hashing-here"};!function(_){"use strict";var e,t={VERSION:"1.6.0"},r={},n=function(_,e){return function(){return e.apply(_,arguments)}},i=function(){var _,e,t=arguments,r=t[0];for(e=1;e<t.length;e++)for(_ in t[e])_ in r||!t[e].hasOwnProperty(_)||(r[_]=t[e][_]);return r},o=function(_,e){return{value:_,name:e}};t.TRACE=o(1,"TRACE"),t.DEBUG=o(2,"DEBUG"),t.INFO=o(3,"INFO"),t.TIME=o(4,"TIME"),t.WARN=o(5,"WARN"),t.ERROR=o(8,"ERROR"),t.OFF=o(99,"OFF");var a=function(_){this.context=_,this.setLevel(_.filterLevel),this.log=this.info};a.prototype={setLevel:function(_){_&&"value"in _&&(this.context.filterLevel=_)},getLevel:function(){return this.context.filterLevel},enabledFor:function(_){var e=this.context.filterLevel;return _.value>=e.value},trace:function(){this.invoke(t.TRACE,arguments)},debug:function(){this.invoke(t.DEBUG,arguments)},info:function(){this.invoke(t.INFO,arguments)},warn:function(){this.invoke(t.WARN,arguments)},error:function(){this.invoke(t.ERROR,arguments)},time:function(_){"string"==typeof _&&0<_.length&&this.invoke(t.TIME,[_,"start"])},timeEnd:function(_){"string"==typeof _&&0<_.length&&this.invoke(t.TIME,[_,"end"])},invoke:function(_,t){e&&this.enabledFor(_)&&e(t,i({level:_},this.context))}};var s,l=new a({filterLevel:t.OFF});(s=t).enabledFor=n(l,l.enabledFor),s.trace=n(l,l.trace),s.debug=n(l,l.debug),s.time=n(l,l.time),s.timeEnd=n(l,l.timeEnd),s.info=n(l,l.info),s.warn=n(l,l.warn),s.error=n(l,l.error),s.log=s.info,t.setHandler=function(_){e=_},t.setLevel=function(_){for(var e in l.setLevel(_),r)r.hasOwnProperty(e)&&r[e].setLevel(_)},t.getLevel=function(){return l.getLevel()},t.get=function(_){return r[_]||(r[_]=new a(i({name:_},l.context)))},t.createDefaultHandler=function(_){(_=_||{}).formatter=_.formatter||function(_,e){e.name&&_.unshift("["+e.name+"]")};var e={},r=function(_,e){Function.prototype.apply.call(_,console,e)};return"undefined"==typeof console?function(){}:function(n,i){n=Array.prototype.slice.call(n);var o,a=console.log;i.level===t.TIME?(o=(i.name?"["+i.name+"] ":"")+n[0],"start"===n[1]?console.time?console.time(o):e[o]=(new Date).getTime():console.timeEnd?console.timeEnd(o):r(a,[o+": "+((new Date).getTime()-e[o])+"ms"])):(i.level===t.WARN&&console.warn?a=console.warn:i.level===t.ERROR&&console.error?a=console.error:i.level===t.INFO&&console.info?a=console.info:i.level===t.DEBUG&&console.debug?a=console.debug:i.level===t.TRACE&&console.trace&&(a=console.trace),_.formatter(n,i),r(a,n))}},t.useDefaults=function(_){t.setLevel(_&&_.defaultLevel||t.DEBUG),t.setHandler(t.createDefaultHandler(_))},"function"==typeof define&&define.amd?define(t):"undefined"!=typeof module&&module.exports?module.exports=t:(t._prevLogger=_.Logger,t.noConflict=function(){return _.Logger=t._prevLogger,t},_.Logger=t)}(this);import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{Singleton}from"./singleton.js";import{Logger}from"./logger.js";var __name__="logs";export var FORMAT="[%(process)d:%(asctime)s]:%(levelname)s:%(message)s";export var ElectionGuardLog=__class__("ElectionGuardLog",[Singleton],{__module__:__name__,get __init__(){return __get__(this,function(_){__super__(ElectionGuardLog,"__init__")(_),_.__logger=Logger()})},get __formatted_message(){return __get__(this,function(_,e){return e})},get debug(){return __get__(this,function(_,e){var t=tuple([].slice.apply(arguments).slice(2));_.__logger.debug(_.__formatted_message(e),...t,__kwargtrans__(kwargs))})},get info(){return __get__(this,function(_,e){var t=tuple([].slice.apply(arguments).slice(2));_.__logger.info(_.__formatted_message(e),...t,__kwargtrans__(kwargs))})},get warn(){return __get__(this,function(_,e){var t=tuple([].slice.apply(arguments).slice(2));_.__logger.warning(_.__formatted_message(e),...t,__kwargtrans__(kwargs))})},get error(){return __get__(this,function(_,e){var t=tuple([].slice.apply(arguments).slice(2));_.__logger.error(_.__formatted_message(e),...t,__kwargtrans__(kwargs))})},get critical(){return __get__(this,function(_,e){var t=tuple([].slice.apply(arguments).slice(2));_.__logger.critical(_.__formatted_message(e),...t,__kwargtrans__(kwargs))})}});export var LOG=ElectionGuardLog();export var log_debug=function(_){var e=tuple([].slice.apply(arguments).slice(1));LOG.debug(_,...e,__kwargtrans__(kwargs))};export var log_info=function(_){var e=tuple([].slice.apply(arguments).slice(1));LOG.info(_,...e,__kwargtrans__(kwargs))};export var log_warning=function(_){var e=tuple([].slice.apply(arguments).slice(1));LOG.warn(_,...e,__kwargtrans__(kwargs))};export var log_error=function(_){var e=tuple([].slice.apply(arguments).slice(1));LOG.error(_,...e,__kwargtrans__(kwargs))};export var log_critical=function(_){var e=tuple([].slice.apply(arguments).slice(1));LOG.critical(_,...e,__kwargtrans__(kwargs))};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";var __name__="math";export var pi=Math.PI;export var e=Math.E;export var exp=Math.exp;export var expm1=function(_){return Math.exp(_)-1};export var log=function(_,e){return void 0===e?Math.log(_):Math.log(_)/Math.log(e)};export var log1p=function(_){return Math.log(_+1)};export var log2=function(_){return Math.log(_)/Math.LN2};export var log10=function(_){return Math.log(_)/Math.LN10};export var pow=Math.pow;export var sqrt=Math.sqrt;export var sin=Math.sin;export var cos=Math.cos;export var tan=Math.tan;export var asin=Math.asin;export var acos=Math.acos;export var atan=Math.atan;export var atan2=Math.atan2;export var hypot=Math.hypot;export var degrees=function(_){return 180*_/Math.PI};export var radians=function(_){return _*Math.PI/180};export var sinh=Math.sinh;export var cosh=Math.cosh;export var tanh=Math.tanh;export var asinh=Math.asinh;export var acosh=Math.acosh;export var atanh=Math.atanh;export var floor=Math.floor;export var ceil=Math.ceil;export var trunc=Math.trunc;export var isnan=isNaN;export var inf=1/0;export var nan=NaN;export var modf=function(_){var e=_>=0?1:-1,t=divmod(abs(_),1),r=t[0],n=t[1];return tuple([n*e,r*e])};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{hash_elems}from"./hash.js";import{ElementModPOrQ,ElementModQ}from"./group.js";import{List,Sequence,Union,overload}from"./typing.js";var __name__="nonces";export var Nonces=__class__("Nonces",[Sequence[ElementModQ]],{__module__:__name__,get __init__(){return __get__(this,function(_,e){var t=tuple([].slice.apply(arguments).slice(2));len(t)>0?_.__seed=hash_elems(e,...t):_.__seed=e})},get __getitem__(){return __get__(this,overload(function(_,e){}))},get __getitem__(){return __get__(this,overload(function(_,e){}))},get __getitem__(){return __get__(this,function(_,e){if(isinstance(e,int))return _.get_with_headers(e);if(isinstance(e.stop,int)){var t=range(e.start||0,e.stop,e.step||1);return function(){var e=[];for(var r of t)e.append(_[r]);return e}()}var r=py_TypeError("Cannot take unbounded slice of Nonces");throw r.__cause__=null,r})},get __len__(){return __get__(this,function(_){var e=py_TypeError("Nonces does not have finite length");throw e.__cause__=null,e})},get get_with_headers(){return __get__(this,function(_,e){var t=tuple([].slice.apply(arguments).slice(2));if(e<0){var r=py_TypeError("Nonces do not support negative indices.");throw r.__cause__=null,r}return hash_elems(_.__seed,e,...t)})}});var __name__="org.transcrypt.__runtime__";export var __envir__={};__envir__.interpreter_name="python",__envir__.transpiler_name="transcrypt",__envir__.executor_name=__envir__.transpiler_name,__envir__.transpiler_version="3.7.16";export function __nest__(_,e,t){var r=_;if(""!=e){for(var n=e.split("."),i=n.length,o=0;o<n.length;o++){if(!r.hasOwnProperty(n[o])){i=o;break}r=r[n[o]]}for(o=i;o<n.length;o++)r[n[o]]={},r=r[n[o]]}for(let _ of Object.getOwnPropertyNames(t))Object.defineProperty(r,_,{get:()=>t[_],enumerable:!0,configurable:!0})};export function __init__(_){return _.__inited__||(_.__all__.__init__(_.__all__),_.__inited__=!0),_.__all__};export var __proxy__=!1;export function __get__(_,e,t){return _&&(_.hasOwnProperty("__class__")||"string"==typeof _||_ instanceof String)?(t&&Object.defineProperty(_,t,{value:function(){var t=[].slice.apply(arguments);return e.apply(null,[_].concat(t))},writable:!0,enumerable:!0,configurable:!0}),function(){var t=[].slice.apply(arguments);return e.apply(null,[_].concat(t))}):e};export function __getcm__(_,e,t){return _.hasOwnProperty("__class__")?function(){var t=[].slice.apply(arguments);return e.apply(null,[_.__class__].concat(t))}:function(){var t=[].slice.apply(arguments);return e.apply(null,[_].concat(t))}};export function __getsm__(_,e,t){return e};export var py_metatype={__name__:"type",__bases__:[],__new__:function(_,e,t,r){for(var n=function(){var _=[].slice.apply(arguments);return n.__new__(_)},i=t.length-1;i>=0;i--){var o=t[i];for(var a in o){var s=Object.getOwnPropertyDescriptor(o,a);Object.defineProperty(n,a,s)}for(let _ of Object.getOwnPropertySymbols(o)){let e=Object.getOwnPropertyDescriptor(o,_);Object.defineProperty(n,_,e)}}for(var a in n.__metaclass__=_,n.__name__=e.startsWith("py_")?e.slice(3):e,n.__bases__=t,r){s=Object.getOwnPropertyDescriptor(r,a);Object.defineProperty(n,a,s)}for(let _ of Object.getOwnPropertySymbols(r)){let e=Object.getOwnPropertyDescriptor(r,_);Object.defineProperty(n,_,e)}return n}};py_metatype.__metaclass__=py_metatype;export var object={__init__:function(_){},__metaclass__:py_metatype,__name__:"object",__bases__:[],__new__:function(_){var e=Object.create(this,{__class__:{value:this,enumerable:!0}});return("__getattr__"in this||"__setattr__"in this)&&(e=new Proxy(e,{get:function(_,e){let t=_[e];return void 0==t?_.__getattr__(e):t},set:function(_,e,t){try{_.__setattr__(e,t)}catch(r){_[e]=t}return!0}})),this.__init__.apply(null,[e].concat(_)),e}};export function __class__(_,e,t,r){return void 0===r&&(r=e[0].__metaclass__),r.__new__(r,_,e,t)};export function __pragma__(){};export function __call__(){var _=[].slice.apply(arguments);return"object"==typeof _[0]&&"__call__"in _[0]?_[0].__call__.apply(_[1],_.slice(2)):_[0].apply(_[1],_.slice(2))};__envir__.executor_name=__envir__.transpiler_name;var __main__={__file__:""},__except__=null;export function __kwargtrans__(_){return _.__kwargtrans__=null,_.constructor=Object,_};export function __super__(_,e){for(let t of _.__bases__)if(e in t)return t[e];throw new Exception("Superclass method not found")};export function property(_,e){return e||(e=function(){}),{get:function(){return _(this)},set:function(_){e(this,_)},enumerable:!0}};export function __setproperty__(_,e,t){_.hasOwnProperty(e)||Object.defineProperty(_,e,t)};export function assert(_,e){if(!_)throw AssertionError(e,new Error)};export function __mergekwargtrans__(_,e){var t={};for(var r in _)t[r]=_[r];for(var r in e)t[r]=e[r];return t};export function __mergefields__(_,e){let t=["__reprfields__","__comparefields__","__initfields__"];if(e[t[0]])if(_[t[0]])for(let r of t)_[r]=new Set([..._[r],...e[r]]);else for(let r of t)_[r]=new Set(e[r])};export function __withblock__(_,e){if(hasattr(_,"__enter__"))try{_.__enter__(),e(),_.__exit__()}catch(e){if(!_.__exit__(e.name,e,e.stack))throw e}else e(),_.close()};export function dir(_){var e=[];for(var t in _)e.push(t.startsWith("py_")?t.slice(3):t);return e.sort(),e};export function setattr(_,e,t){_[e]=t};export function getattr(_,e){return e in _?_[e]:_["py_"+e]};export function hasattr(_,e){try{return e in _||"py_"+e in _}catch(_){return!1}};export function delattr(_,e){e in _?delete _[e]:delete _["py_"+e]};export function __in__(_,e){return void 0!==e&&null!==e&&(e.__contains__ instanceof Function?e.__contains__(_):e.indexOf?e.indexOf(_)>-1:e.hasOwnProperty(_))};export function __specialattrib__(_){return _.startswith("__")&&_.endswith("__")||"constructor"==_||_.startswith("py_")};export function len(_){if(void 0===_||null===_)return 0;if(_.__len__ instanceof Function)return _.__len__();if(void 0!==_.length)return _.length;var e=0;for(var t in _)__specialattrib__(t)||e++;return e};export function __i__(_){return py_typeof(_)==dict?_.py_keys():_};export function __k__(_,e){var t=_[e];if(void 0===t){if(_ instanceof Array){if(e==+e&&e>=0&&_.length>e)return t;throw IndexError(e,new Error)}throw KeyError(e,new Error)}return t};export function __t__(_){return void 0!==_&&null!==_&&(["boolean","number"].indexOf(typeof _)>=0?_:_.__bool__ instanceof Function?!!_.__bool__()&&_:_.__len__ instanceof Function?0!==_.__len__()&&_:_ instanceof Function?_:0!==len(_)&&_)};export function float(_){if("inf"==_)return 1/0;if("-inf"==_)return-1/0;if("nan"==_)return NaN;if(isNaN(parseFloat(_))){if(!1===_)return 0;if(!0===_)return 1;throw ValueError("could not convert string to float: '"+str(_)+"'",new Error)}return+_};float.__name__="float",float.__bases__=[object];export function int(_){return 0|float(_)};int.__name__="int",int.__bases__=[object];export function bool(_){return!!__t__(_)};bool.__name__="bool",bool.__bases__=[int];export function py_typeof(_){var e=typeof _;if("object"!=e)return"boolean"==e?bool:"string"==e?str:"number"==e?_%1==0?int:float:null;try{return"__class__"in _?_.__class__:object}catch(_){return e}};export function issubclass(_,e){if(e instanceof Array){for(let t of e)if(issubclass(_,t))return!0;return!1}try{var t=_;if(t==e)return!0;for(var r=[].slice.call(t.__bases__);r.length;){if((t=r.shift())==e)return!0;t.__bases__.length&&(r=[].slice.call(t.__bases__).concat(r))}return!1}catch(t){return _==e||e==object}};export function isinstance(_,e){try{return issubclass("__class__"in _?_.__class__:py_typeof(_),e)}catch(t){return issubclass(py_typeof(_),e)}};export function callable(_){return!!(_&&"object"==typeof _&&"__call__"in _)||"function"==typeof _};export function repr(_){try{return _.__repr__()}catch(i){try{return _.__str__()}catch(i){try{if(null==_)return"None";if(_.constructor==Object){var e="{",t=!1;for(var r in _)if(!__specialattrib__(r)){if(r.isnumeric())var n=r;else n="'"+r+"'";t?e+=", ":t=!0,e+=n+": "+repr(_[r])}return e+="}"}return"boolean"==typeof _?_.toString().capitalize():_.toString()}catch(e){return"<object of type: "+typeof _+">"}}}};export function chr(_){return String.fromCharCode(_)};export function ord(_){return _.charCodeAt(0)};export function max(_){return 1==arguments.length?Math.max(..._):Math.max(...arguments)};export function min(_){return 1==arguments.length?Math.min(..._):Math.min(...arguments)};export var abs=Math.abs;export function round(_,e){if(e){var t=Math.pow(10,e);_*=t}var r=Math.round(_);return r-_==.5&&r%2&&(r-=1),e&&(r/=t),r};export function __jsUsePyNext__(){try{return{value:this.__next__(),done:!1}}catch(_){return{value:void 0,done:!0}}};export function __pyUseJsNext__(){var _=this.next();if(_.done)throw StopIteration(new Error);return _.value};export function py_iter(_){if("string"==typeof _||"__iter__"in _)(e=_.__iter__()).next=__jsUsePyNext__;else if("selector"in _){(e=list(_).__iter__()).next=__jsUsePyNext__}else if("next"in _){"__next__"in(e=_)||(e.__next__=__pyUseJsNext__)}else{if(!(Symbol.iterator in _))throw IterableError(new Error);var e;(e=_[Symbol.iterator]()).__next__=__pyUseJsNext__}return e[Symbol.iterator]=function(){return e},e};export function py_next(_){try{var e=_.__next__()}catch(t){if((e=_.next()).done)throw StopIteration(new Error);return e.value}if(void 0==e)throw StopIteration(new Error);return e};export function __PyIterator__(_){this.iterable=_,this.index=0};__PyIterator__.prototype.__next__=function(){if(this.index<this.iterable.length)return this.iterable[this.index++];throw StopIteration(new Error)};export function __JsIterator__(_){this.iterable=_,this.index=0};__JsIterator__.prototype.next=function(){return this.index<this.iterable.py_keys.length?{value:this.index++,done:!1}:{value:void 0,done:!0}};export function py_reversed(_){return(_=_.slice()).reverse(),_};export function zip(){for(var _=[].slice.call(arguments),e=0;e<_.length;e++)"string"==typeof _[e]?_[e]=_[e].split(""):Array.isArray(_[e])||(_[e]=Array.from(_[e]));return(0==_.length?[]:_.reduce(function(_,e){return _.length<e.length?_:e})).map(function(e,t){return _.map(function(_){return _[t]})})};export function range(_,e,t){if(void 0==e&&(e=_,_=0),void 0==t&&(t=1),t>0&&_>=e||t<0&&_<=e)return[];for(var r=[],n=_;t>0?n<e:n>e;n+=t)r.push(n);return r};export function any(_){for(let e of _)if(bool(e))return!0;return!1};export function all(_){for(let e of _)if(!bool(e))return!1;return!0};export function sum(_){let e=0;for(let t of _)e+=t;return e};export function enumerate(_){return zip(range(len(_)),_)};export function copy(_){if(null==_||"object"==typeof _)return _;var e={};for(var t in obj)_.hasOwnProperty(t)&&(e[t]=_[t]);return e};export function deepcopy(_){if(null==_||"object"==typeof _)return _;var e={};for(var t in obj)_.hasOwnProperty(t)&&(e[t]=deepcopy(_[t]));return e};export function list(_){return _?Array.from(_):[]};Array.prototype.__class__=list,list.__name__="list",list.__bases__=[object],Array.prototype.__iter__=function(){return new __PyIterator__(this)},Array.prototype.__getslice__=function(_,e,t){if(_<0&&(_=this.length+_),null==e?e=this.length:e<0?e=this.length+e:e>this.length&&(e=this.length),1==t)return Array.prototype.slice.call(this,_,e);let r=list([]);for(let n=_;n<e;n+=t)r.push(this[n]);return r},Array.prototype.__setslice__=function(_,e,t,r){if(_<0&&(_=this.length+_),null==e?e=this.length:e<0&&(e=this.length+e),null==t)Array.prototype.splice.apply(this,[_,e-_].concat(r));else{let n=0;for(let i=_;i<e;i+=t)this[i]=r[n++]}},Array.prototype.__repr__=function(){if(this.__class__==set&&!this.length)return"set()";let _=this.__class__&&this.__class__!=list?this.__class__==tuple?"(":"{":"[";for(let e=0;e<this.length;e++)e&&(_+=", "),_+=repr(this[e]);return this.__class__==tuple&&1==this.length&&(_+=","),_+=this.__class__&&this.__class__!=list?this.__class__==tuple?")":"}":"]"},Array.prototype.__str__=Array.prototype.__repr__,Array.prototype.append=function(_){this.push(_)},Array.prototype.py_clear=function(){this.length=0},Array.prototype.extend=function(_){this.push.apply(this,_)},Array.prototype.insert=function(_,e){this.splice(_,0,e)},Array.prototype.remove=function(_){let e=this.indexOf(_);if(-1==e)throw ValueError("list.remove(x): x not in list",new Error);this.splice(e,1)},Array.prototype.index=function(_){return this.indexOf(_)},Array.prototype.py_pop=function(_){return void 0==_?this.pop():this.splice(_,1)[0]},Array.prototype.py_sort=function(){__sort__.apply(null,[this].concat([].slice.apply(arguments)))},Array.prototype.__add__=function(_){return list(this.concat(_))},Array.prototype.__mul__=function(_){let e=this;for(let t=1;t<_;t++)e=e.concat(this);return e},Array.prototype.__rmul__=Array.prototype.__mul__;export function tuple(_){let e=_?[].slice.apply(_):[];return e.__class__=tuple,e};tuple.__name__="tuple",tuple.__bases__=[object];export function set(_){let e=[];if(_)for(let t=0;t<_.length;t++)e.add(_[t]);return e.__class__=set,e};set.__name__="set",set.__bases__=[object],Array.prototype.__bindexOf__=function(_){_+="";let e=0,t=this.length-1;for(;e<=t;){let r=(e+t)/2|0,n=this[r]+"";if(n<_)e=r+1;else{if(!(n>_))return r;t=r-1}}return-1},Array.prototype.add=function(_){-1==this.indexOf(_)&&this.push(_)},Array.prototype.discard=function(_){var e=this.indexOf(_);-1!=e&&this.splice(e,1)},Array.prototype.isdisjoint=function(_){this.sort();for(let e=0;e<_.length;e++)if(-1!=this.__bindexOf__(_[e]))return!1;return!0},Array.prototype.issuperset=function(_){this.sort();for(let e=0;e<_.length;e++)if(-1==this.__bindexOf__(_[e]))return!1;return!0},Array.prototype.issubset=function(_){return set(_.slice()).issuperset(this)},Array.prototype.union=function(_){let e=set(this.slice().sort());for(let t=0;t<_.length;t++)-1==e.__bindexOf__(_[t])&&e.push(_[t]);return e},Array.prototype.intersection=function(_){this.sort();let e=set();for(let t=0;t<_.length;t++)-1!=this.__bindexOf__(_[t])&&e.push(_[t]);return e},Array.prototype.difference=function(_){let e=set(_.slice().sort()),t=set();for(let _=0;_<this.length;_++)-1==e.__bindexOf__(this[_])&&t.push(this[_]);return t},Array.prototype.symmetric_difference=function(_){return this.union(_).difference(this.intersection(_))},Array.prototype.py_update=function(){let _=[].concat.apply(this.slice(),arguments).sort();this.py_clear();for(let e=0;e<_.length;e++)_[e]!=_[e-1]&&this.push(_[e])},Array.prototype.__eq__=function(_){if(this.length!=_.length)return!1;this.__class__==set&&(this.sort(),_.sort());for(let e=0;e<this.length;e++)if(this[e]!=_[e])return!1;return!0},Array.prototype.__ne__=function(_){return!this.__eq__(_)},Array.prototype.__le__=function(_){if(this.__class__==set)return this.issubset(_);for(let e=0;e<this.length;e++){if(this[e]>_[e])return!1;if(this[e]<_[e])return!0}return!0},Array.prototype.__ge__=function(_){if(this.__class__==set)return this.issuperset(_);for(let e=0;e<this.length;e++){if(this[e]<_[e])return!1;if(this[e]>_[e])return!0}return!0},Array.prototype.__lt__=function(_){return this.__class__==set?this.issubset(_)&&!this.issuperset(_):!this.__ge__(_)},Array.prototype.__gt__=function(_){return this.__class__==set?this.issuperset(_)&&!this.issubset(_):!this.__le__(_)};export function bytearray(_,e){if(void 0==_)return new Uint8Array(0);{let e=py_typeof(_);if(e==int)return new Uint8Array(_);if(e==str){let e=new Uint8Array(len(_));for(let t=0;t<len(_);t++)e[t]=_.charCodeAt(t);return e}if(e==list||e==tuple)return new Uint8Array(_);throw py_TypeError}};export var bytes=bytearray;Uint8Array.prototype.__add__=function(_){let e=new Uint8Array(this.length+_.length);return e.set(this),e.set(_,this.length),e},Uint8Array.prototype.__mul__=function(_){let e=new Uint8Array(_*this.length);for(let t=0;t<_;t++)e.set(this,t*this.length);return e},Uint8Array.prototype.__rmul__=Uint8Array.prototype.__mul__;export function str(_){if("number"==typeof _)return _.toString();try{return _.__str__()}catch(e){try{return repr(_)}catch(e){return String(_)}}};function __contains__(_){return this.hasOwnProperty(_)}function __keys__(){var _=[];for(var e in this)__specialattrib__(e)||_.push(e);return _}function __items__(){var _=[];for(var e in this)__specialattrib__(e)||_.push([e,this[e]]);return _}function __del__(_){delete this[_]}function __clear__(){for(var _ in this)delete this[_]}function __getdefault__(_,e){var t=this[_];return void 0==t&&(t=this["py_"+_]),void 0==t?void 0==e?null:e:t}function __setdefault__(_,e){var t=this[_];if(void 0!=t)return t;var r=void 0==e?null:e;return this[_]=r,r}function __pop__(_,e){var t=this[_];if(void 0!=t)return delete this[_],t;if(void 0===e)throw KeyError(_,new Error);return e}function __popitem__(){var _=Object.keys(this)[0];if(null==_)throw KeyError("popitem(): dictionary is empty",new Error);var e=tuple([_,this[_]]);return delete this[_],e}function __update__(_){for(var e in _)this[e]=_[e]}function __values__(){var _=[];for(var e in this)__specialattrib__(e)||_.push(this[e]);return _}function __dgetitem__(_){return this[_]}function __dsetitem__(_,e){this[_]=e}String.prototype.__class__=str,str.__name__="str",str.__bases__=[object],String.prototype.__iter__=function(){new __PyIterator__(this)},String.prototype.__repr__=function(){return(-1==this.indexOf("'")?"'"+this+"'":'"'+this+'"').py_replace("\t","\\t").py_replace("\n","\\n")},String.prototype.__str__=function(){return this},String.prototype.capitalize=function(){return this.charAt(0).toUpperCase()+this.slice(1)},String.prototype.endswith=function(_){if(!(_ instanceof Array))return""==_||this.slice(-_.length)==_;for(var e=0;e<_.length;e++)if(this.slice(-_[e].length)==_[e])return!0;return!1},String.prototype.find=function(_,e){return this.indexOf(_,e)},String.prototype.__getslice__=function(_,e,t){_<0&&(_=this.length+_),null==e?e=this.length:e<0&&(e=this.length+e);var r="";if(1==t)r=this.substring(_,e);else for(var n=_;n<e;n+=t)r=r.concat(this.charAt(n));return r},__setproperty__(String.prototype,"format",{get:function(){return __get__(this,function(_){var e=tuple([].slice.apply(arguments).slice(1)),t=0;return _.replace(/\{(\w*)\}/g,function(_,r){if(""==r&&(r=t++),r==+r)return void 0===e[r]?_:str(e[r]);for(var n=0;n<e.length;n++)if("object"==typeof e[n]&&void 0!==e[n][r])return str(e[n][r]);return _})})},enumerable:!0}),String.prototype.isalnum=function(){return/^[0-9a-zA-Z]{1,}$/.test(this)},String.prototype.isalpha=function(){return/^[a-zA-Z]{1,}$/.test(this)},String.prototype.isdecimal=function(){return/^[0-9]{1,}$/.test(this)},String.prototype.isdigit=function(){return this.isdecimal()},String.prototype.islower=function(){return/^[a-z]{1,}$/.test(this)},String.prototype.isupper=function(){return/^[A-Z]{1,}$/.test(this)},String.prototype.isspace=function(){return/^[\s]{1,}$/.test(this)},String.prototype.isnumeric=function(){return!isNaN(parseFloat(this))&&isFinite(this)},String.prototype.join=function(_){return(_=Array.from(_)).join(this)},String.prototype.lower=function(){return this.toLowerCase()},String.prototype.py_replace=function(_,e,t){return this.split(_,t).join(e)},String.prototype.lstrip=function(){return this.replace(/^\s*/g,"")},String.prototype.rfind=function(_,e){return this.lastIndexOf(_,e)},String.prototype.rsplit=function(_,e){if(void 0==_||null==_){_=/\s+/;var t=this.strip()}else t=this;if(void 0==e||-1==e)return t.split(_);var r=t.split(_);if(e<r.length){var n=r.length-e;return[r.slice(0,n).join(_)].concat(r.slice(n))}return r},String.prototype.rstrip=function(){return this.replace(/\s*$/g,"")},String.prototype.py_split=function(_,e){if(void 0==_||null==_){_=/\s+/;var t=this.strip()}else t=this;if(void 0==e||-1==e)return t.split(_);var r=t.split(_);return e<r.length?r.slice(0,e).concat([r.slice(e).join(_)]):r},String.prototype.startswith=function(_){if(!(_ instanceof Array))return 0==this.indexOf(_);for(var e=0;e<_.length;e++)if(0==this.indexOf(_[e]))return!0;return!1},String.prototype.strip=function(){return this.trim()},String.prototype.upper=function(){return this.toUpperCase()},String.prototype.__mul__=function(_){for(var e="",t=0;t<_;t++)e+=this;return e},String.prototype.__rmul__=String.prototype.__mul__;export function dict(_){var e={};if(!_||_ instanceof Array){if(_)for(var t=0;t<_.length;t++){var r=_[t];if(!(r instanceof Array)||2!=r.length)throw ValueError("dict update sequence element #"+t+" has length "+r.length+"; 2 is required",new Error);var n=r[0],i=r[1];!(_ instanceof Array)&&_ instanceof Object&&(isinstance(_,dict)||(i=dict(i))),e[n]=i}}else if(isinstance(_,dict)){var o=_.py_keys();for(t=0;t<o.length;t++){e[n=o[t]]=_[n]}}else{if(!(_ instanceof Object))throw ValueError("Invalid type of object for dict creation",new Error);e=_}return __setproperty__(e,"__class__",{value:dict,enumerable:!1,writable:!0}),__setproperty__(e,"__contains__",{value:__contains__,enumerable:!1}),__setproperty__(e,"py_keys",{value:__keys__,enumerable:!1}),__setproperty__(e,"__iter__",{value:function(){new __PyIterator__(this.py_keys())},enumerable:!1}),__setproperty__(e,Symbol.iterator,{value:function(){new __JsIterator__(this.py_keys())},enumerable:!1}),__setproperty__(e,"py_items",{value:__items__,enumerable:!1}),__setproperty__(e,"py_del",{value:__del__,enumerable:!1}),__setproperty__(e,"py_clear",{value:__clear__,enumerable:!1}),__setproperty__(e,"py_get",{value:__getdefault__,enumerable:!1}),__setproperty__(e,"py_setdefault",{value:__setdefault__,enumerable:!1}),__setproperty__(e,"py_pop",{value:__pop__,enumerable:!1}),__setproperty__(e,"py_popitem",{value:__popitem__,enumerable:!1}),__setproperty__(e,"py_update",{value:__update__,enumerable:!1}),__setproperty__(e,"py_values",{value:__values__,enumerable:!1}),__setproperty__(e,"__getitem__",{value:__dgetitem__,enumerable:!1}),__setproperty__(e,"__setitem__",{value:__dsetitem__,enumerable:!1}),e};function __setdoc__(_){return this.__doc__=_,this}dict.__name__="dict",dict.__bases__=[object],__setproperty__(Function.prototype,"__setdoc__",{value:__setdoc__,enumerable:!1});export function __jsmod__(_,e){return"object"==typeof _&&"__mod__"in _?_.__mod__(e):"object"==typeof e&&"__rmod__"in e?e.__rmod__(_):_%e};export function __mod__(_,e){return"object"==typeof _&&"__mod__"in _?_.__mod__(e):"object"==typeof e&&"__rmod__"in e?e.__rmod__(_):(_%e+e)%e};export function __pow__(_,e){return"object"==typeof _&&"__pow__"in _?_.__pow__(e):"object"==typeof e&&"__rpow__"in e?e.__rpow__(_):Math.pow(_,e)};export var pow=__pow__;export function __neg__(_){return"object"==typeof _&&"__neg__"in _?_.__neg__():-_};export function __matmul__(_,e){return _.__matmul__(e)};export function __mul__(_,e){return"object"==typeof _&&"__mul__"in _?_.__mul__(e):"object"==typeof e&&"__rmul__"in e?e.__rmul__(_):"string"==typeof _?_.__mul__(e):"string"==typeof e?e.__rmul__(_):_*e};export function __truediv__(_,e){return"object"==typeof _&&"__truediv__"in _?_.__truediv__(e):"object"==typeof e&&"__rtruediv__"in e?e.__rtruediv__(_):"object"==typeof _&&"__div__"in _?_.__div__(e):"object"==typeof e&&"__rdiv__"in e?e.__rdiv__(_):_/e};export function __floordiv__(_,e){return"object"==typeof _&&"__floordiv__"in _?_.__floordiv__(e):"object"==typeof e&&"__rfloordiv__"in e?e.__rfloordiv__(_):"object"==typeof _&&"__div__"in _?_.__div__(e):"object"==typeof e&&"__rdiv__"in e?e.__rdiv__(_):Math.floor(_/e)};export function __add__(_,e){return"object"==typeof _&&"__add__"in _?_.__add__(e):"object"==typeof e&&"__radd__"in e?e.__radd__(_):_+e};export function __sub__(_,e){return"object"==typeof _&&"__sub__"in _?_.__sub__(e):"object"==typeof e&&"__rsub__"in e?e.__rsub__(_):_-e};export function __lshift__(_,e){return"object"==typeof _&&"__lshift__"in _?_.__lshift__(e):"object"==typeof e&&"__rlshift__"in e?e.__rlshift__(_):_<<e};export function __rshift__(_,e){return"object"==typeof _&&"__rshift__"in _?_.__rshift__(e):"object"==typeof e&&"__rrshift__"in e?e.__rrshift__(_):_>>e};export function __or__(_,e){return"object"==typeof _&&"__or__"in _?_.__or__(e):"object"==typeof e&&"__ror__"in e?e.__ror__(_):_|e};export function __xor__(_,e){return"object"==typeof _&&"__xor__"in _?_.__xor__(e):"object"==typeof e&&"__rxor__"in e?e.__rxor__(_):_^e};export function __and__(_,e){return"object"==typeof _&&"__and__"in _?_.__and__(e):"object"==typeof e&&"__rand__"in e?e.__rand__(_):_&e};export function __eq__(_,e){return"object"==typeof _&&"__eq__"in _?_.__eq__(e):_==e};export function __ne__(_,e){return"object"==typeof _&&"__ne__"in _?_.__ne__(e):_!=e};export function __lt__(_,e){return"object"==typeof _&&"__lt__"in _?_.__lt__(e):_<e};export function __le__(_,e){return"object"==typeof _&&"__le__"in _?_.__le__(e):_<=e};export function __gt__(_,e){return"object"==typeof _&&"__gt__"in _?_.__gt__(e):_>e};export function __ge__(_,e){return"object"==typeof _&&"__ge__"in _?_.__ge__(e):_>=e};export function __imatmul__(_,e){return"__imatmul__"in _?_.__imatmul__(e):_.__matmul__(e)};export function __ipow__(_,e){return"object"==typeof _&&"__pow__"in _?_.__ipow__(e):"object"==typeof _&&"__ipow__"in _?_.__pow__(e):"object"==typeof e&&"__rpow__"in e?e.__rpow__(_):Math.pow(_,e)};export function __ijsmod__(_,e){return"object"==typeof _&&"__imod__"in _?_.__ismod__(e):"object"==typeof _&&"__mod__"in _?_.__mod__(e):"object"==typeof e&&"__rpow__"in e?e.__rmod__(_):_%e};export function __imod__(_,e){return"object"==typeof _&&"__imod__"in _?_.__imod__(e):"object"==typeof _&&"__mod__"in _?_.__mod__(e):"object"==typeof e&&"__rmod__"in e?e.__rmod__(_):(_%e+e)%e};export function __imul__(_,e){return"object"==typeof _&&"__imul__"in _?_.__imul__(e):"object"==typeof _&&"__mul__"in _?_.__mul__(e):"object"==typeof e&&"__rmul__"in e?e.__rmul__(_):"string"==typeof _?_.__mul__(e):"string"==typeof e?e.__rmul__(_):_*e};export function __idiv__(_,e){return"object"==typeof _&&"__idiv__"in _?_.__idiv__(e):"object"==typeof _&&"__div__"in _?_.__div__(e):"object"==typeof e&&"__rdiv__"in e?e.__rdiv__(_):_/e};export function __iadd__(_,e){return"object"==typeof _&&"__iadd__"in _?_.__iadd__(e):"object"==typeof _&&"__add__"in _?_.__add__(e):"object"==typeof e&&"__radd__"in e?e.__radd__(_):_+e};export function __isub__(_,e){return"object"==typeof _&&"__isub__"in _?_.__isub__(e):"object"==typeof _&&"__sub__"in _?_.__sub__(e):"object"==typeof e&&"__rsub__"in e?e.__rsub__(_):_-e};export function __ilshift__(_,e){return"object"==typeof _&&"__ilshift__"in _?_.__ilshift__(e):"object"==typeof _&&"__lshift__"in _?_.__lshift__(e):"object"==typeof e&&"__rlshift__"in e?e.__rlshift__(_):_<<e};export function __irshift__(_,e){return"object"==typeof _&&"__irshift__"in _?_.__irshift__(e):"object"==typeof _&&"__rshift__"in _?_.__rshift__(e):"object"==typeof e&&"__rrshift__"in e?e.__rrshift__(_):_>>e};export function __ior__(_,e){return"object"==typeof _&&"__ior__"in _?_.__ior__(e):"object"==typeof _&&"__or__"in _?_.__or__(e):"object"==typeof e&&"__ror__"in e?e.__ror__(_):_|e};export function __ixor__(_,e){return"object"==typeof _&&"__ixor__"in _?_.__ixor__(e):"object"==typeof _&&"__xor__"in _?_.__xor__(e):"object"==typeof e&&"__rxor__"in e?e.__rxor__(_):_^e};export function __iand__(_,e){return"object"==typeof _&&"__iand__"in _?_.__iand__(e):"object"==typeof _&&"__and__"in _?_.__and__(e):"object"==typeof e&&"__rand__"in e?e.__rand__(_):_&e};export function __getitem__(_,e){return"object"==typeof _&&"__getitem__"in _?_.__getitem__(e):("string"==typeof _||_ instanceof Array)&&e<0?_[_.length+e]:_[e]};export function __setitem__(_,e,t){"object"==typeof _&&"__setitem__"in _?_.__setitem__(e,t):("string"==typeof _||_ instanceof Array)&&e<0?_[_.length+e]=t:_[e]=t};export function __getslice__(_,e,t,r){return"object"==typeof _&&"__getitem__"in _?_.__getitem__([e,t,r]):_.__getslice__(e,t,r)};export function __setslice__(_,e,t,r,n){"object"==typeof _&&"__setitem__"in _?_.__setitem__([e,t,r],n):_.__setslice__(e,t,r,n)};export var BaseException=__class__("BaseException",[object],{__module__:__name__});export var Exception=__class__("Exception",[BaseException],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();_.__args__=i;try{_.stack=e.error.stack}catch(e){_.stack="No stack trace available"}})},get __repr__(){return __get__(this,function(_){return len(_.__args__)>1?"{}{}".format(_.__class__.__name__,repr(tuple(_.__args__))):len(_.__args__)?"{}({})".format(_.__class__.__name__,repr(_.__args__[0])):"{}()".format(_.__class__.__name__)})},get __str__(){return __get__(this,function(_){return len(_.__args__)>1?str(tuple(_.__args__)):len(_.__args__)?str(_.__args__[0]):""})}});export var IterableError=__class__("IterableError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(_,e){Exception.__init__(_,"Can't iterate over non-iterable",__kwargtrans__({error:e}))})}});export var StopIteration=__class__("StopIteration",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(_,e){Exception.__init__(_,"Iterator exhausted",__kwargtrans__({error:e}))})}});export var ValueError=__class__("ValueError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t){Exception.__init__(_,e,__kwargtrans__({error:t}))})}});export var KeyError=__class__("KeyError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t){Exception.__init__(_,e,__kwargtrans__({error:t}))})}});export var AssertionError=__class__("AssertionError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t){e?Exception.__init__(_,e,__kwargtrans__({error:t})):Exception.__init__(_,__kwargtrans__({error:t}))})}});export var NotImplementedError=__class__("NotImplementedError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t){Exception.__init__(_,e,__kwargtrans__({error:t}))})}});export var IndexError=__class__("IndexError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t){Exception.__init__(_,e,__kwargtrans__({error:t}))})}});export var AttributeError=__class__("AttributeError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t){Exception.__init__(_,e,__kwargtrans__({error:t}))})}});export var py_TypeError=__class__("py_TypeError",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t){Exception.__init__(_,e,__kwargtrans__({error:t}))})}});export var Warning=__class__("Warning",[Exception],{__module__:__name__});export var UserWarning=__class__("UserWarning",[Warning],{__module__:__name__});export var DeprecationWarning=__class__("DeprecationWarning",[Warning],{__module__:__name__});export var RuntimeWarning=__class__("RuntimeWarning",[Warning],{__module__:__name__});export var __sort__=function(_,e,t){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=null;if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=!1;if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var n=arguments[r--];for(var i in n)switch(i){case"iterable":_=n[i];break;case"key":e=n[i];break;case"reverse":t=n[i]}}}e?_.sort(function(_,t){if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var n=arguments[r--];for(var i in n)switch(i){case"a":_=n[i];break;case"b":t=n[i]}}}return e(_)>e(t)?1:-1}):_.sort(),t&&_.reverse()};export var sorted=function(_,e,t){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=null;if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=!1;if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var n=arguments[r--];for(var i in n)switch(i){case"iterable":_=n[i];break;case"key":e=n[i];break;case"reverse":t=n[i]}}}if(py_typeof(_)==dict)var o=copy(_.py_keys());else o=copy(_);return __sort__(o,e,t),o};export var map=function(_,e){return function(){var t=[];for(var r of e)t.append(_(r));return t}()};export var filter=function(_,e){if(null==_)_=bool;return function(){var t=[];for(var r of e)_(r)&&t.append(r);return t}()};export var divmod=function(_,e){return tuple([Math.floor(_/e),__mod__(_,e)])};export var __Terminal__=__class__("__Terminal__",[object],{__module__:__name__,get __init__(){return __get__(this,function(_){_.buffer="";try{_.element=document.getElementById("__terminal__")}catch(e){_.element=null}_.element&&(_.element.style.overflowX="auto",_.element.style.boxSizing="border-box",_.element.style.padding="5px",_.element.innerHTML="_")})},get print(){return __get__(this,function(_){var e=" ",t="\n";if(arguments.length){var r=arguments.length-1;if(arguments[r]&&arguments[r].hasOwnProperty("__kwargtrans__")){var n=arguments[r--];for(var i in n)switch(i){case"self":_=n[i];break;case"sep":e=n[i];break;case"end":t=n[i]}}var o=tuple([].slice.apply(arguments).slice(1,r+1))}else o=tuple();_.buffer="{}{}{}".format(_.buffer,e.join(function(){var _=[];for(var e of o)_.append(str(e));return _}()),t).__getslice__(-4096,null,1),_.element?(_.element.innerHTML=_.buffer.py_replace("\n","<br>").py_replace(" ","&nbsp"),_.element.scrollTop=_.element.scrollHeight):console.log(e.join(function(){var _=[];for(var e of o)_.append(str(e));return _}()))})},get input(){return __get__(this,function(_,e){if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;case"question":e=r[n]}}}_.print("{}".format(e),__kwargtrans__({end:""}));var i=window.prompt("\n".join(_.buffer.py_split("\n").__getslice__(-8,null,1)));return _.print(i),i})}});export var __terminal__=__Terminal__();export var print=__terminal__.print;export var input=__terminal__.input;import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{space_between_capitals}from"./utils.js";import{Serializable}from"./serializable.js";import{Enum}from"./enum.js";var __name__="proof";export var ProofUsage=__class__("ProofUsage",[Enum],{__module__:__name__,Unknown:"Unknown",SecretValue:"Prove knowledge of secret value",SelectionLimit:"Prove value within selection's limit",SelectionValue:"Prove selection's value (0 or 1)"});export var Proof=__class__("Proof",[Serializable],{__module__:__name__,py_name:"Proof",usage:ProofUsage.Unknown,get __init__(){return __get__(this,function(_){object.__setattr__(_,"name",space_between_capitals(_.__class__.__name__))})}});import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{translate}from"./re.translate.js";export{translate};var __name__="re";export var T=1;export var TEMPLATE=T;export var I=2;export var IGNORECASE=I;export var L=4;export var LOCALE=L;export var M=8;export var MULTILINE=M;export var S=16;export var DOTALL=S;export var U=32;export var UNICODE=U;export var X=64;export var VERBOSE=X;export var DEBUG=128;export var A=256;export var ASCII=A;export var Y=65536;export var STICKY=Y;export var G=1<<17;export var GLOBAL=G;export var J=1<<19;export var JSSTRICT=J;export var error=__class__("error",[Exception],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t,r,n,i){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=0;if(void 0===i||null!=i&&i.hasOwnProperty("__kwargtrans__"))i=null;Exception.__init__(_,e,__kwargtrans__({error:t})),_.pattern=r,_.flags=n,_.pos=i})}});export var ReIndexError=__class__("ReIndexError",[IndexError],{__module__:__name__,get __init__(){return __get__(this,function(_){IndexError.__init__(_,"no such group")})}});export var Match=__class__("Match",[object],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t,r,n,i,o){if(void 0===o||null!=o&&o.hasOwnProperty("__kwargtrans__"))o=null;for(var[a,s]of enumerate(e))e[a]=void 0==e[a]?null:e[a];_._obj=e,_._pos=r,_._endpos=n,_._re=i,_._string=t,_._namedGroups=o,_._lastindex=_._lastMatchGroup(),null!==_._namedGroups?_._lastgroup=_._namedGroups[_._lastindex]:_._lastgroup=null})},get _getPos(){return __get__(this,function(_){return _._pos})},get _setPos(){return __get__(this,function(_,e){var t=AttributeError("readonly attribute");throw t.__cause__=null,t})},get _getEndPos(){return __get__(this,function(_){return _._endpos})},get _setEndPos(){return __get__(this,function(_,e){var t=AttributeError("readonly attribute");throw t.__cause__=null,t})},get _getRe(){return __get__(this,function(_){return _._re})},get _setRe(){return __get__(this,function(_,e){var t=AttributeError("readonly attribute");throw t.__cause__=null,t})},get _getString(){return __get__(this,function(_){return _._string})},get _setString(){return __get__(this,function(_,e){var t=AttributeError("readonly attribute");throw t.__cause__=null,t})},get _getLastGroup(){return __get__(this,function(_){return _._lastgroup})},get _setLastGroup(){return __get__(this,function(_,e){var t=AttributeError("readonly attribute");throw t.__cause__=null,t})},get _getLastIndex(){return __get__(this,function(_){return _._lastindex})},get _setLastIndex(){return __get__(this,function(_,e){var t=AttributeError("readonly attribute");throw t.__cause__=null,t})},get _lastMatchGroup(){return __get__(this,function(_){if(len(_._obj)>1){for(var e of range(len(_._obj)-1,0,-1))if(null!==_._obj[e])return e;return null}return null})},get expand(){return __get__(this,function(_,e){var t=NotImplementedError();throw t.__cause__=null,t})},get group(){return __get__(this,function(_){var e=tuple([].slice.apply(arguments).slice(1)),t=[];if(len(e)>0)for(var r of e)if(py_typeof(r)===str){if(null===_._namedGroups)throw(n=NotImplementedError("No NamedGroups Available")).__cause__=null,n;if(!__in__(r,_._namedGroups.py_keys()))throw(n=ReIndexError()).__cause__=null,n;t.append(_._obj[_._namedGroups[r]])}else{var n;if(r>=len(_._obj))throw(n=ReIndexError()).__cause__=null,n;t.append(_._obj[r])}else t.append(_._obj[0]);return 1==len(t)?t[0]:tuple(t)})},get groups(){return __get__(this,function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=null;if(len(_._obj)>1){var t=_._obj.__getslice__(1,null,1);return tuple(function(){var _=[];for(var r of t)_.append(null!==r?r:e);return _}())}return tuple()})},get groupdict(){return __get__(this,function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=null;if(null!==_._namedGroups){var t=dict({});for(var[r,n]of _._namedGroups.py_items()){var i=_._obj[n];t[r]=null!==i?i:e}return t}var o=NotImplementedError("No NamedGroups Available");throw o.__cause__=null,o})},get start(){return __get__(this,function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=0;var t=0;if(py_typeof(e)===str){if(null===_._namedGroups)throw(r=NotImplementedError("No NamedGroups Available")).__cause__=null,r;if(!__in__(e,_._namedGroups.py_keys()))throw(r=ReIndexError()).__cause__=null,r;t=_._namedGroups[e]}else t=e;if(t>=len(_._obj))throw(r=ReIndexError()).__cause__=null,r;if(0==t)return _._obj.index;if(null!==_._obj[t]){var r,n=compile(escape(_._obj[t]),_._re.flags).search(_._obj[0]);if(n)return _._obj.index+n.start();throw(r=Exception("Failed to find capture group")).__cause__=null,r}return-1})},get end(){return __get__(this,function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=0;var t=0;if(py_typeof(e)===str){if(null===_._namedGroups)throw(r=NotImplementedError("No NamedGroups Available")).__cause__=null,r;if(!__in__(e,_._namedGroups.py_keys()))throw(r=ReIndexError()).__cause__=null,r;t=_._namedGroups[e]}else t=e;if(t>=len(_._obj))throw(r=ReIndexError()).__cause__=null,r;if(0==t)return _._obj.index+len(_._obj[0]);if(null!==_._obj[t]){var r,n=compile(escape(_._obj[t]),_._re.flags).search(_._obj[0]);if(n)return _._obj.index+n.end();throw(r=Exception("Failed to find capture group")).__cause__=null,r}return-1})},get span(){return __get__(this,function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=0;return tuple([_.start(e),_.end(e)])})}});Object.defineProperty(Match,"pos",property.call(Match,Match._getPos,Match._setPos)),Object.defineProperty(Match,"endpos",property.call(Match,Match._getEndPos,Match._setEndPos)),Object.defineProperty(Match,"re",property.call(Match,Match._getRe,Match._setRe)),Object.defineProperty(Match,"string",property.call(Match,Match._getString,Match._setString)),Object.defineProperty(Match,"lastgroup",property.call(Match,Match._getLastGroup,Match._setLastGroup)),Object.defineProperty(Match,"lastindex",property.call(Match,Match._getLastIndex,Match._setLastIndex));export var Regex=__class__("Regex",[object],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t){(t&ASCII)>0||(t|=UNICODE),_._flags=t;var r=_._compileWrapper(e,t);_._jsFlags=r[0],_._obj=r[1],_._jspattern=e,_._pypattern=e;(r=_._compileWrapper(e+"|",t))[0];var n=r[1];_._groups=n.exec("").length-1,_._groupindex=null})},get _getPattern(){return __get__(this,function(_){return _._pypattern.py_replace("\\","\\\\")})},get _setPattern(){return __get__(this,function(_,e){var t=AttributeError("readonly attribute");throw t.__cause__=null,t})},get _getFlags(){return __get__(this,function(_){return _._flags})},get _setFlags(){return __get__(this,function(_,e){var t=AttributeError("readonly attribute");throw t.__cause__=null,t})},get _getGroups(){return __get__(this,function(_){return _._groups})},get _setGroups(){return __get__(this,function(_,e){var t=AttributeError("readonly attribute");throw t.__cause__=null,t})},get _getGroupIndex(){return __get__(this,function(_){return null===_._groupindex?dict({}):_._groupindex})},get _setGroupIndex(){return __get__(this,function(_,e){var t=AttributeError("readonly attribute");throw t.__cause__=null,t})},get _compileWrapper(){return __get__(this,function(_,e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;var r=_._convertFlags(t),n=null,i=null;try{n=new RegExp(e,r)}catch(_){i=_}if(null!==i){var o=error(i.message,i,e,t);throw o.__cause__=null,o}return tuple([r,n])})},get _convertFlags(){return __get__(this,function(_,e){var t=[tuple([DEBUG,""]),tuple([IGNORECASE,"i"]),tuple([MULTILINE,"m"]),tuple([STICKY,"y"]),tuple([GLOBAL,"g"]),tuple([UNICODE,"u"])];return"".join(function(){var _=[];for(var r of t)(r[0]&e)>0&&_.append(r[1]);return _}())})},get _getTargetStr(){return __get__(this,function(_,e,t,r){var n=len(e);if(null!==r&&r<n)n=r;if(n<0)n=0;return e.__getslice__(t,n,1)})},get _patternHasCaptures(){return __get__(this,function(_){return _._groups>0})},get search(){return __get__(this,function(_,e,t,r){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;if(null===r)r=len(e);var n=_._obj.exec(e);return n?n.index<t||n.index>r?null:Match(n,e,t,r,_,_._groupindex):null})},get match(){return __get__(this,function(_,e,t,r){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;var n=e;if(null!==r)n=n.__getslice__(0,r,1);else r=len(e);var i=_._obj.exec(n);return i&&i.index==t?Match(i,e,t,r,_,_._groupindex):null})},get fullmatch(){return __get__(this,function(_,e,t,r){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;var n=e,i=len(e);if(null!==r)n=n.__getslice__(0,r,1),i=r;var o=_._obj.exec(n);if(o){var a=o.index+len(o[0]);return o.index==t&&a==i?Match(o,e,t,i,_,_._groupindex):null}return null})},get py_split(){return __get__(this,function(_,e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;if(t<0)return[e];var r=_._obj;if(0==t)return e.py_split(r);var n=_._flags;n|=GLOBAL;for(var i=_._compileWrapper(_._jspattern,n),o=(i[0],r=i[1],[]),a=null,s=0;s<t;s++){var l=r.exec(e);if(!l)break;if(1,null!==a){var u=a.index+len(a[0]),p=e.__getslice__(u,l.index,1);o.append(p),len(l)>1&&o.extend(l.__getslice__(1,null,1))}else{p=e.__getslice__(0,l.index,1);o.append(p),len(l)>1&&o.extend(l.__getslice__(1,null,1))}a=l}if(null!==a){var c=a.index+len(a[0]),f=e.__getslice__(c,null,1);o.append(f)}return o})},get _findAllMatches(){return __get__(this,function(_,e,t,r){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;var n=_._getTargetStr(e,t,r),i=_._flags;i|=GLOBAL;for(var o=_._compileWrapper(_._jspattern,i),a=(o[0],o[1]),s=[];;){var l=a.exec(n);if(!l)break;s.append(l)}return s})},get findall(){return __get__(this,function(_,e,t,r){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;var n=_._findAllMatches(e,t,r);return map(function(_){return len(_)>2?tuple(_.__getslice__(1,null,1)):2==len(_)?_[1]:_[0]},n)})},get finditer(){return __get__(this,function(_,e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=null;var n=_._findAllMatches(e,t,r),i=map(function(t){return Match(t,e,0,len(e),_,_._groupindex)},n);return py_iter(i)})},get sub(){return __get__(this,function(_,e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;var n=_.subn(e,t,r),i=n[0];n[1];return i})},get subn(){return __get__(this,function(_,e,t,r){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;var n=_._flags;n|=GLOBAL;for(var i=_._compileWrapper(_._jspattern,n),o=(i[0],i[1]),a="",s=0,l=-1;;){if(r>0&&s>=r)return l<0?tuple([a,s]):(a+=t.__getslice__(l,u.index,1),tuple([a,s]));var u=o.exec(t);if(!u)return l<0?tuple([t,0]):(a+=t.__getslice__(l,null,1),tuple([a,s]));a+=l<0?t.__getslice__(0,u.index,1):t.__getslice__(l,u.index,1),callable(e)?a+=e(Match(u,t,0,len(t),_,_._groupindex)):a+=e,s+=1;l=u.index+len(u[0])}})}});Object.defineProperty(Regex,"pattern",property.call(Regex,Regex._getPattern,Regex._setPattern)),Object.defineProperty(Regex,"flags",property.call(Regex,Regex._getFlags,Regex._setFlags)),Object.defineProperty(Regex,"groups",property.call(Regex,Regex._getGroups,Regex._setGroups)),Object.defineProperty(Regex,"groupindex",property.call(Regex,Regex._getGroupIndex,Regex._setGroupIndex));export var PyRegExp=__class__("PyRegExp",[Regex],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t){var r=translate(e),n=r[0],i=r[1],o=r[2],a=r[3],s=r[4];t|=i;var l="".join(n);Regex.__init__(_,l,t),_._pypattern=e,_._nsplits=s,_._jsTokens=n,_._capgroups=a,_._groupindex=o})}});export var compile=function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=0;if(e&JSSTRICT)var t=Regex(_,e);else t=PyRegExp(_,e);return t};export var search=function(_,e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;return compile(_,t).search(e)};export var match=function(_,e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;return compile(_,t).match(e)};export var fullmatch=function(_,e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;return compile(_,t).fullmatch(e)};export var py_split=function(_,e,t,r){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;return compile(_,r).py_split(e,t)};export var findall=function(_,e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;return compile(_,t).findall(e)};export var finditer=function(_,e,t){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=0;return compile(_,t).finditer(e)};export var sub=function(_,e,t,r,n){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=0;return compile(_,n).sub(e,t,r)};export var subn=function(_,e,t,r,n){if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=0;if(void 0===n||null!=n&&n.hasOwnProperty("__kwargtrans__"))n=0;return compile(_,n).subn(e,t,r)};export var escape=function(_){var e;if(null!==(e=_.replace(/[^A-Za-z:;\d]/g,function(_){return"\\"==_[0]?"\\\\\\\\":"\\\\"+_[0]})))return e;var t=Exception("Failed to escape the passed string");throw t.__cause__=null,t};export var purge=function(){};var re={};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import*as __module_re__ from"./re.js";__nest__(re,"",__module_re__);var __name__="re.translate";export var VERBOSE=!1;export var MAX_SHIFTREDUCE_LOOPS=1e3;export var stringFlags="aiLmsux";export var Group=__class__("Group",[object],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t,r){_.start=e,_.end=t,_.klass=r})},get __repr__(){return __get__(this,function(_){return str(tuple([_.start,_.end,_.klass]))})}});export var generateGroupSpans=function(_){var e=[],t=0;for(var r of _){if(__t__(r.py_name.startswith("(")))e.append(Group(t,null,r.py_name));else if(__t__(")"==r.py_name))for(var n of py_reversed(e))__t__(null===n.end)&&(n.end=t);t+=1}return e};export var countCaptureGroups=function(_){generateGroupSpans(_);var e=0;for(var t of _)__t__("("==t.py_name)&&(e+=1);return e};export var getCaptureGroup=function(_,e,t){try{var r=int(t)}catch(_){r=e[t]}var n=0;for(var i of _)if(__t__("("==i.klass)&&__t__((n+=1)==r))return i};export var splitIfElse=function(_,e){var t=[],r=generateGroupSpans(_);for(var n of r)if(__t__("(?<"==n.klass)){var i=_.__getslice__(0,null,1),o=_.__getslice__(0,null,1),a=n.start,s=n.end,l=_[a+1].py_name,u=getCaptureGroup(r,e,l),p=_[u.end+1];if(__t__(__t__(__in__(p.py_name,["?","*"]))||p.py_name.startswith("{0,"))){__t__("?"==p.py_name)?i[u.end+1]=null:__t__("*"==p.py_name)?i[u.end+1]=Token("+"):__t__(p.py_name.startswith("{0,"))&&i[u.end+1].py_name.__setslice__(0,3,null,"{1,"),o[u.end+1]=null;for(var c=!1,f=a;f<s;f++)if(__t__("|"==_[f].py_name)){c=!0;o.py_pop(s),i.__setslice__(f,s+1,null,[]),o.__setslice__(a,f+1,null,[]);break}__t__(!__t__(c))&&(o.__setslice__(a,s+1,null,[]),i.py_pop(s)),i.__setslice__(a,a+3,null,[]),o.__setslice__(u.start,u.end+1,null,[Token("("),Token(")")]),i.remove(null),o.remove(null),t.append(i),t.append(o)}else{for(f=a;f<s;f++)if(__t__("|"==i[f].py_name)){(i=_.__getslice__(0,f,1)).extend(_.__getslice__(s+1,null,1));break}i.__setslice__(a,a+3,null,[]),t.append(i)}break}if(__t__(!__t__(t)))return[_];var m=[];for(var d of t)m.extend(splitIfElse(d,e));return m};export var Token=__class__("Token",[object],{__module__:__name__,get __init__(){return __get__(this,function(_,e,t,r){if(void 0===t||null!=t&&t.hasOwnProperty("__kwargtrans__"))t=null;if(void 0===r||null!=r&&r.hasOwnProperty("__kwargtrans__"))r=!1;if(__t__(null===t))t=[];_.py_name=e,_.paras=t,_.pure=r,_.isModeGroup=!1})},get __repr__(){return __get__(this,function(_){return _.py_name})},get resolve(){return __get__(this,function(_){var e="";for(var t of _.paras)e+=str(t);return _.py_name+e})}});export var shift=function(_,e){var t=!__t__(bool(e));if(__t__(!__t__(t))){_.append(Token(e[0],[],!0));e=e.__getslice__(1,null,1)}return tuple([_,e,t])};export var shiftReduce=function(_,e,t,r){var n=!1,i=len(_)-1;if(__t__(len(_)<2)){_=(u=shift(_,e))[0],e=u[1],n=u[2];return tuple([_,e,r,n])}var o=__t__(len(_)>0)?_[i]:Token(""),a=__t__(len(_)>1)?_[i-1]:Token("");if(__t__(VERBOSE)){for(var s of _)console.log(s.resolve(),"\t",__kwargtrans__({end:""}));console.log("")}if(__t__("\\"==a.py_name))__t__("A"==o.py_name)?_.__setslice__(-__t__(2),null,null,[Token("^")]):__t__("a"==o.py_name)?_.__setslice__(-__t__(2),null,null,[Token("\\07")]):__t__("Z"==o.py_name)?_.__setslice__(-__t__(2),null,null,[Token("$")]):_.__setslice__(-__t__(2),null,null,[Token("\\"+o.py_name)]);else if(__t__(__t__("$"==o.py_name)&&o.pure))_.py_pop(),_.extend([Token("(?="),Token("\\n"),Token("?"),Token("$"),Token(")")]);else if(__t__("{"==a.py_name)){__t__(__t__(","==o.py_name)&&0==len(a.paras))?(a.paras.append("0"),a.paras.append(",")):__t__("}"==o.py_name)?(a.paras.append("}"),a.py_name=a.resolve(),a.paras=[]):a.paras.append(o.py_name);_=_.__getslice__(0,-__t__(1),1)}else if(__t__(__t__("["==a.py_name)&&"^"==o.py_name))_.__setslice__(-__t__(2),null,null,[Token("[^")]);else if(__t__(__t__("("==a.py_name)&&"?"==o.py_name))_.__setslice__(-__t__(2),null,null,[Token("(?")]);else if(__t__(__t__(__in__(a.py_name,["*","+","?"]))&&"?"==o.py_name))_.__setslice__(-__t__(2),null,null,[Token(a.py_name+"?")]);else if(__t__(__t__(a.isModeGroup)&&")"==o.py_name))_=_.__getslice__(0,-__t__(2),1);else if(__t__("(?"==a.py_name))if(__t__(__in__(o.py_name,stringFlags)))__t__("i"==o.py_name)?r|=re.IGNORECASE:__t__("L"==o.py_name)?r|=re.LOCALE:__t__("m"==o.py_name)?r|=re.MULTILINE:__t__("s"==o.py_name)?r|=re.DOTALL:__t__("u"==o.py_name)?r|=re.UNICODE:__t__("x"==o.py_name)?r|=re.VERBOSE:__t__("a"==o.py_name)&&(r|=re.ASCII),_.py_pop(),a.isModeGroup=!0;else{__t__("("==o.py_name)&&(o.py_name="<");var l=Token("(?"+o.py_name);_.__setslice__(-__t__(2),null,null,[l])}else if(__t__("(?<"==a.py_name))__t__(")"==o.py_name)?(_.__setslice__(-__t__(1),null,null,[Token("".join(a.paras)),Token(">")]),a.paras=[]):(a.paras.append(o.py_name),_.py_pop());else if(__t__("(?P"==a.py_name))_.__setslice__(-__t__(2),null,null,[Token("(?P"+o.py_name)]);else if(__t__("(?P<"==a.py_name))__t__(">"==o.py_name)?(t["".join(a.paras)]=countCaptureGroups(_)+1,_.__setslice__(-__t__(2),null,null,[Token("(")])):(a.paras.append(o.py_name),_.py_pop());else if(__t__("(?P="==a.py_name))__t__(")"==o.py_name)?_.__setslice__(-__t__(2),null,null,[Token("\\"+str(t[a.paras[0]]))]):__t__(!__t__(a.paras))?(a.paras.append(o.py_name),_.py_pop()):(a.paras[0]+=o.py_name,_.py_pop());else if(__t__("(?#"==a.py_name))if(__t__(")"==o.py_name))_=_.__getslice__(0,-__t__(2),1);else _=_.__getslice__(0,-__t__(1),1);else{var u;_=(u=shift(_,e))[0],e=u[1],n=u[2]}return tuple([_,e,r,n])};export var translate=function(_){for(var e=[],t=list(_),r=0,n=dict(),i=0;__t__(!0);){if(__t__((i+=1)>MAX_SHIFTREDUCE_LOOPS)){var o=Exception();throw o.__cause__=null,o}var a=shiftReduce(e,t,n,r),s=(e=a[0],t=a[1],r=a[2],a[3]);if(__t__(s))break}for(var l=splitIfElse(e,n),u=len(l),p=[],c=0;c<len(l);c++)p.extend(l[c]),__t__(c<len(l)-1)&&p.append(Token("|"));generateGroupSpans(e=p);var f=[];for(var m of e){var d=m.resolve();if(__t__(__t__(r&re.DOTALL)&&"."==d))d="[\\s\\S]";f.append(d)}return tuple([f,r,n,countCaptureGroups(e),u])};var re={};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{Any,Type,TypeVar,cast}from"./typing.js";import*as __module_re__ from"./re.js";__nest__(re,"",__module_re__);import{datetime}from"./datetime.js";import{dataclass}from"./dataclasses.js";var __name__="serializable";export var S=TypeVar("S",__kwargtrans__({bound:"Serializable"}));export var T=TypeVar("T");export var JSON_FILE_EXTENSION=".json";export var WRITE="w";export var READ="r";export var JSON_PARSE_ERROR='{"error": "Object could not be parsed due to json issue"}';export var KEYS_TO_REMOVE=["from_json","from_json_file","from_json_object"];export var Serializable=__class__("Serializable",[object],{__module__:__name__,get __init__(){return __get__(this,function(_){var e=dict();if(arguments.length){var t=arguments.length-1;if(arguments[t]&&arguments[t].hasOwnProperty("__kwargtrans__")){var r=arguments[t--];for(var n in r)switch(n){case"self":_=r[n];break;default:e[n]=r[n]}delete e.__kwargtrans__}var i=tuple([].slice.apply(arguments).slice(1,t+1))}else i=tuple();let o=_.__initfields__.values();for(let e of i)_[o.next().value]=e;for(let t of e.py_keys())_[t]=e[t]})},get __repr__(){return __get__(this,function(_){let e=_.__reprfields__.values(),t=[];for(let r of e)t.push(r+"="+repr(_[r]));return _.__name__+"("+", ".join(t)+")"})},get __eq__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__eq__(list(n))})},get __ne__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ne__(list(n))})},get __lt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__lt__(list(n))})},get __le__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__le__(list(n))})},get __gt__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__gt__(list(n))})},get __ge__(){return __get__(this,function(_,e){let t=_.__comparefields__.values(),r=[],n=[];for(let i of t)r.push(_[i]),n.push(e[i]);return list(r).__ge__(list(n))})},get to_json(){return __get__(this,function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=!0;return JSON.stringify(_)})},get to_json_object(){return __get__(this,function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=!0;return _})},get from_json(){return __getcm__(this,function(_,e){return JSON.parse(e)})},get from_json_object(){return __getcm__(this,function(_,e){return e})}});for(let _ of Serializable.__bases__)__mergefields__(Serializable,_);__mergefields__(Serializable,{__reprfields__:new Set([]),__comparefields__:new Set([]),__initfields__:new Set([])});import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{Any}from"./typing.js";var __name__="singleton";export var Singleton=__class__("Singleton",[object],{__module__:__name__,__instance:null,get get_instance(){return function(){return null===Singleton.__instance&&Singleton(),Singleton.__instance}},get __init__(){return __get__(this,function(_){null===Singleton.__instance&&(Singleton.__instance=_)})}});import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";var __name__="sys";import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";var __name__="time";try{var __language=window.navigator.language}catch(_){var __language="en-US"}export var __debugGetLanguage=function(){return __language};export var __adapt__=function(_){__language=_.headers["accept-language"].py_split(",")[0]};export var __date=new Date(0);export var __now=new Date;export var __weekdays=[];export var __weekdays_long=[];export var __d=new Date(1467662339080);for(var i=0;i<7;i++){for(var[l,s]of tuple([tuple([__weekdays,"short"]),tuple([__weekdays_long,"long"])]))l.append(__d.toLocaleString(__language,dict([["weekday",s]])).lower());__d.setDate(__d.getDate()+1)}export var __months=[];export var __months_long=[];for(var __d=new Date(9466812e5),i=0;i<12;i++){for(var[l,s]of tuple([tuple([__months,"short"]),tuple([__months_long,"long"])]))l.append(__d.toLocaleString(__language,dict([["month",s]])).lower());__d.setMonth(__d.getMonth()+1)}export var __lu=dict([["Y",0],["m",1],["d",2],["H",3],["M",4],["S",5]]);export var _lsplit=function(_,e,t){if(0==t)return[_];var r=_.py_split(e);if(!t)return r;var n=r.slice(0,t,1);return len(n)==len(r)?n:(n.append(e.join(r.__getslice__(t,null,1))),n)};export var _local_time_tuple=function(_){return tuple([_.getFullYear(),_.getMonth()+1,_.getDate(),_.getHours(),_.getMinutes(),_.getSeconds(),_.getDay()>0?_.getDay()-1:6,_day_of_year(_,!0),_daylight_in_effect(_),_.getMilliseconds()])};export var _utc_time_tuple=function(_){return tuple([_.getUTCFullYear(),_.getUTCMonth()+1,_.getUTCDate(),_.getUTCHours(),_.getUTCMinutes(),_.getUTCSeconds(),_.getUTCDay()-1,_day_of_year(_,!1),0,_.getUTCMilliseconds()])};export var _day_of_year=function(_,e){var t=0;if(_.getHours()+60*_.getTimezoneOffset()/3600<0)t=-1;var r=_.getTime(),n=_.setHours(23);_.setUTCDate(1),_.setUTCMonth(0),_.setUTCHours(0),_.setUTCMinutes(0),_.setUTCSeconds(0);var i=round((n-_)/864e5);if(e||(i+=t),0==i){i=365;_.setTime(_.getTime()-86400);var o=_.getUTCFullYear();if(_is_leap(o))i=366}return _.setTime(r),i};export var _is_leap=function(_){return 0==__mod__(_,4)&&(0!=__mod__(_,100)||0==__mod__(_,400))};export var __jan_jun_tz=function(_,e){var t=_.getTime();_.setDate(1);var r=[];for(var n of tuple([0,6]))_.setMonth(n),e?r.append(e(_)):r.append(_.getTimezoneOffset());return _.setTime(t),r};export var _daylight=function(_){var e=__jan_jun_tz(_);return e[0]!=e[1]?1:0};export var _daylight_in_effect=function(_){var e=__jan_jun_tz(_);return min(e[0],e[1])==_.getTimezoneOffset()?1:0};export var _timezone=function(_){var e=__jan_jun_tz(_);return max(e[0],e[1])};export var __tzn=function(_){try{return str(_).py_split("(")[1].py_split(")")[0]}catch(_){return"n.a."}};export var _tzname=function(_){var e=__tzn(_),t=[e,e],r=__jan_jun_tz(_,__tzn),n=0;if(!_daylight_in_effect(_))n=1;for(var i of r)i!=e&&(t[n]=i);return tuple(t)};export var altzone=__now.getTimezoneOffset();if(!_daylight_in_effect(__now))var _jj=__jan_jun_tz(__now),altzone=altzone==_jj[1]?_jj[0]:_jj[1];var altzone=60*altzone;export var timezone=60*_timezone(__now);export var daylight=_daylight(__now);export var tzname=_tzname(__now);export var time=function(){return Date.now()/1e3};export var asctime=function(_){return strftime("%a %b %d %H:%M:%S %Y",_)};export var mktime=function(_){return(new Date(_[0],_[1]-1,_[2],_[3],_[4],_[5],0)-0)/1e3};export var ctime=function(_){if(!_)_=time();return asctime(localtime(_))};export var localtime=function(_){if(!_)_=time();return gmtime(_,!0)};export var gmtime=function(_,e){if(!_)_=time();var t=1e3*_;if(__date.setTime(t),e)var r=_local_time_tuple(__date);else r=_utc_time_tuple(__date);return r.__getslice__(0,9,1)};export var strptime=function(_,e){if(!e)e="%a %b %d %H:%M:%S %Y";for(var t=(u=tuple([_,e]))[0],r=u[1],n=function(_){var e=function(_){var e=[];if(!_)return tuple(["",""]);for(var t=0;t<len(_)-1;t++){var r=_[t];if("%"==r)break;e.append(r)}return tuple(["".join(e),_.__getslice__(t,null,1)])},t=(i=tuple([null,null,null]))[0],r=i[1],n=i[2];if(_)if("%"==_[0])t=_[1],r=(i=e(_.__getslice__(2,null,1)))[0],n=i[1];else{var i;r=(i=e(_))[0],n=i[1]}return tuple([t,r,n])},i=dict({});t;){var o=(u=n(r))[0],a=u[1];r=u[2];if(""==a){var s=null;if(o){var l=-1;if("Y"==o)l=4;else if("a"==o)l=len(__weekdays[0]);else if("A"==o)l=len(__weekdays_long[0]);else if("b"==o)l=len(__months[0]);else if(__in__(o,tuple(["d","m","H","M","S"])))l=2;if(l>-1)s=[t.__getslice__(0,l,1),t.__getslice__(l,null,1)]}if(!s)s=[t,""]}else s=_lsplit(t,a,1);if(null!=o){var u;t=(u=tuple([s[1],s[0]]))[0];if(i[o]=u[1],""==r)break}else var t=s[1]}var p=[1900,1,1,0,0,0,0,1,-1],c=[],f=!1;for(var[o,m]of i.py_items())if(!__in__(o,c)&&"p"!=o)if(__in__(o,__lu.py_keys()))p[__lu[o]]=int(m);else{if(__in__(o,tuple(["a","A","b","B"])))m=m.lower();if("m"==o&&(c.append("b"),c.append("B")),"a"==o){if(!__in__(m,__weekdays))throw(g=ValueError("Weekday unknown in your locale")).__cause__=null,g;f=!0;p[6]=__weekdays.index(m)}else if("A"==o){if(!__in__(m,__weekdays_long))throw(g=ValueError("Weekday unknown in your locale")).__cause__=null,g;f=!0;p[6]=__weekdays_long.index(m)}else if("b"==o){if(!__in__(m,__months))throw(g=ValueError("Month unknown in your locale")).__cause__=null,g;p[1]=__months.index(m)+1}else if("B"==o){if(!__in__(m,__months_long))throw(g=ValueError("Month unknown in your locale")).__cause__=null,g;p[1]=__months_long.index(m)+1}else if("I"==o){var d=(d=i.p||"am").lower();if(12==(m=int(m)))var m=0;else if(m>12){var g;throw(g=ValueError("time data '"+_+"' does not match format '"+e+"'")).__cause__=null,g}"pm"==d&&(m+=12),p[__lu.H]=m}else"y"==o?p[0]=2e3+int(m):"Z"==o&&__in__(m.lower(),["gmt","utc"])&&(p[-1]=0)}var h=new Date(0);return h.setUTCFullYear(p[0]),h.setUTCMonth(p[1]-1),h.setUTCDate(p[2]),h.setUTCHours(p[3]),p[7]=_day_of_year(h,!0),f||(p[6]=h.getUTCDay()-1),p};export var strftime=function(_,e){var t=function(_){return _<10?"0"+str(_):_};if(!e)e=localtime();var r=_;for(var n of __lu.py_keys()){var i="%"+n;if(__in__(i,r)){var o=t(e[__lu[n]]);r=r.py_replace(i,o)}}for(var[n,a,s]of tuple([tuple(["b",__months,1]),tuple(["B",__months_long,1]),tuple(["a",__weekdays,6]),tuple(["A",__weekdays_long,6])])){var l=e[s];if(1==s)l=l-1;o=a[l].capitalize(),r=r.py_replace("%"+n,o)}if(__in__("%p",r)){if(e[3]>11)var u="PM";else u="AM";r=r.py_replace("%p",u)}if(__in__("%y",r))r=r.py_replace("%y",str(e[0]).__getslice__(-2,null,1));if(__in__("%I",r)){if(0==(o=e[3]))o=12;else if(o>12)o=o-12;r=r.py_replace("%I",t(o))}return r};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{get_word}from"./words.js";import{ElementModQ}from"./group.js";import{hash_elems}from"./hash.js";import{List,Optional}from"./typing.js";var __name__="tracker";export var DEFAULT_SEPERATOR="-";export var get_hash_for_device=function(_,e){return hash_elems(_,e)};export var get_rotating_tracker_hash=function(_,e,t){return hash_elems(_,e,t)};export var tracker_hash_to_words=function(_,e){if(void 0===e||null!=e&&e.hasOwnProperty("__kwargtrans__"))e=DEFAULT_SEPERATOR;var t=_.to_bytes(),r=[];for(var n of range(0,len(t),4)){var i=t[n],o=t[n+1],a=t[n+2],s=t[n+3],l=get_word(16*i+(o>>4)),u=[format((15&o)>>0,"1X"),format((240&a)>>4,"1X"),format((15&a)>>0,"1X"),format((240&s)>>4,"1X"),format((15&s)>>0,"1X")];if(null===l)return null;r.append(l),r.append("".join(u))}return e.join(r)};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";var __name__="typing";export var ClassVar="ClassVar";import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{Callable,Optional,TypeVar}from"./typing.js";import{sub}from"./re.js";import{datetime,timezone}from"./datetime.js";var __name__="utils";export var T=TypeVar("T");export var U=TypeVar("U");export var get_optional=function(_){return _};export var match_optional=function(_,e,t){return null===_?e():t(_)};export var get_or_else_optional=function(_,e){return null===_?e:_};export var get_or_else_optional_func=function(_,e){return null===_?e():_};export var flatmap_optional=function(_,e){return null===_?null:e(_)};export var to_ticks=function(_){var e=_.tzinfo?_.timestamp():_.astimezone(timezone.utc).timestamp();return int(e)};export var space_between_capitals=function(_){return sub("(\\w)([A-Z])","\\1 \\2",_)};export var make_directory=function(_){path.exists(_)||mkdir(_)};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{Optional}from"./typing.js";var __name__="words";export var MIN_INDEX=0;export var MAX_INDEX=4095;export var get_word=function(_){return _<MIN_INDEX?null:_>MAX_INDEX?null:words[4095&_]};export var get_index_from_word=function(_){return __in__(_,words)?words.index(_):null};export var words=["aardvark","abacus","abbey","abbreviation","ability","abolishment","absence","abundance","academics","academy","accelerant","accelerator","accent","acceptance","access","accessory","accident","accommodation","accompanist","accomplishment","accord","accordance","accordion","account","accountability","accountant","accounting","accuracy","achievement","achiever","acknowledgment","acorn","acoustics","acquaintance","acquisition","acre","acrylic","act","action","activation","activity","actor","actress","adaptation","adapter","addition","address","adjective","adjustment","administration","administrator","admire","admission","adobe","adult","adulthood","advance","advancement","advantage","advent","adverb","advertisement","advertising","advice","adviser","advocacy","advocate","affect","affiliate","affinity","afoul","afterlife","aftermath","afternoon","aftershave","afterthought","age","agency","agenda","agent","agony","agreement","agriculture","aid","aide","aim","air","airbag","aircraft","airfare","airfield","airline","airmail","airplane","airport","airspace","albatross","album","alcove","alder","alfalfa","algebra","algorithm","alias","alibi","allergist","alley","alliance","alligator","allocation","allowance","alloy","almanac","almond","alpaca","alpha","alphabet","altar","alteration","alternative","altitude","alto","aluminium","aluminum","amazement","ambassador","amber","ambience","ambiguity","ambition","ambulance","amendment","amenity","amount","amusement","anagram","analog","analogue","analogy","analysis","analyst","analytics","anatomy","ancestor","anchovy","angel","angle","angora","anguish","animal","anime","anise","ankle","anklet","anniversary","announcement","annual","anorak","answer","ant","anteater","antelope","antennae","anterior","anthropology","antibody","anticipation","antique","antiquity","antler","antling","anybody","anyone","anything","anywhere","apartment","ape","apology","app","apparatus","apparel","appeal","appearance","appendix","appetiser","appetite","appetizer","applause","applewood","appliance","application","appointment","appreciation","apprehension","approach","appropriation","approval","apricot","apron","aquarium","aquifer","arcade","arch","archaeology","archeology","archer","architect","architecture","archives","area","arena","argument","arithmetic","ark","arm","armadillo","armchair","armoire","armpit","armrest","arrangement","array","arrest","arrival","arrow","art","artery","arthur","artichoke","article","artifact","artificer","artist","ascend","ascent","ascot","ash","aside","asparagus","aspect","asphalt","assembly","assertion","assessment","asset","assignment","assist","assistance","assistant","associate","association","assumption","assurance","asterisk","astronomy","asymmetry","atelier","athlete","athletics","atmosphere","atom","atrium","attachment","attainment","attempt","attendance","attendant","attention","attic","attitude","attorney","attraction","attribute","auction","audience","audit","auditorium","aunt","authentication","authenticity","author","authorisation","authority","authorization","auto","automation","automaton","autumn","availability","avalanche","avenue","average","avocado","award","awareness","awe","axis","babe","baby","bachelor","back","backbone","backburn","backdrop","background","backpack","backup","backyard","bacon","badge","badger","bafflement","bag","bagel","baggage","bagpipe","bail","bait","bake","baker","bakery","bakeware","balance","balcony","ball","ballet","balloon","balloonist","ballot","ballpark","bamboo","ban","banana","band","bandana","bandanna","bandwidth","bangle","banjo","bank","bankbook","banker","banking","bankruptcy","banner","banquette","bar","barbecue","barbeque","barber","bargain","barge","baritone","bark","barley","barn","barometer","barrage","barrel","barrier","base","baseball","baseboard","baseline","basement","basics","basil","basin","basis","basket","basketball","bass","bassinet","bassoon","bat","bath","bathrobe","bathroom","bathtub","battalion","batter","battery","batting","bay","bayou","beach","bead","beak","beam","bean","beancurd","beanie","beanstalk","bear","beauty","beck","bedrock","bee","beech","beet","beetle","beginner","beginning","begonia","behalf","behavior","behaviour","behest","behold","being","belfry","belief","believer","bell","bellows","belt","bench","bend","benefit","beret","berry","bestseller","bet","beverage","beyond","bias","bicycle","bid","bidder","bidding","bifocals","bijou","bike","bill","billboard","billing","billion","bin","binoculars","biology","biopsy","biosphere","biplane","birch","bird","birdbath","birdcage","birdhouse","birthday","biscuit","bit","bitten","bitter","blackberry","blackbird","blackboard","blackfish","blackness","blade","blame","blank","blanket","blast","blazer","blend","blind","blinker","blister","blizzard","block","blocker","blog","blogger","bloom","bloomer","blossom","blouse","blue","blueberry","blush","boar","board","boat","boatload","boatyard","bob","bobcat","bog","bolero","bolt","bond","bonding","bondsman","bonfire","bongo","bonnet","bonsai","bonus","book","bookcase","bookend","booking","booklet","bookmark","boolean","boom","boon","boost","booster","boot","border","bore","borrower","borrowing","boss","botany","bother","bottle","bottling","bough","boulder","boulevard","boundary","bouquet","bout","boutique","bow","bower","bowl","bowler","bowling","bowtie","boxer","boxspring","boy","boycott","boyfriend","boyhood","boysenberry","brace","bracelet","bracket","brain","brake","bran","branch","brand","brass","bratwurst","bread","breadcrumb","breadfruit","break","breakdown","breakfast","breakpoint","breakthrough","breath","breeze","brewer","bribery","brick","bricklaying","bride","bridge","brief","briefing","briefly","brilliant","brink","brisket","broad","broadcast","broccoli","brochure","broiler","broker","bronco","bronze","brooch","brood","brook","broom","brother","brow","brownie","browser","browsing","brunch","brush","brushfire","brushing","bubble","buck","bucket","buckle","buckwheat","buddy","budget","buffalo","buffer","buffet","bug","buggy","bugle","builder","building","bulb","bulk","bull","bulldozer","bullet","bun","bunch","bungalow","bunghole","bunkhouse","burden","bureau","burglar","burial","burn","burning","burrito","burrow","burst","bus","business","businessman","bustle","butane","butler","butter","butterfly","button","buy","buyer","buying","buzzard","cabana","cabbage","cabin","cabinet","cable","caboose","cacao","cactus","caddy","cadet","cafe","caffeine","caftan","cage","cake","calculation","calculator","calculus","calendar","calf","calico","call","calm","calorie","camel","cameo","camera","camp","campaign","campaigning","campanile","camper","campus","can","canal","candelabra","candidacy","candidate","candle","candy","cane","cannon","canoe","canon","canopy","cantaloupe","canteen","canvas","cap","capability","capacity","cape","caper","capital","capitulation","capon","cappuccino","captain","caption","captor","car","caramel","caravan","carbon","card","cardboard","cardigan","care","career","cargo","caribou","carload","carnation","carnival","carol","carp","carpenter","carpet","carpeting","carport","carriage","carrier","carrot","carry","cart","cartel","carter","cartload","cartoon","cartridge","carving","cascade","case","casement","cash","cashew","cashier","casino","casserole","cassock","cast","castanet","castle","cat","catacomb","catalogue","catalyst","catamaran","catastrophe","catch","catcher","category","caterpillar","cation","catsup","cattle","cauliflower","causal","cause","causeway","caution","cave","caviar","cayenne","ceiling","celebration","celebrity","celeriac","celery","cell","cellar","cello","celsius","cement","census","cent","center","centimeter","centre","centurion","century","ceramic","ceramics","cereal","ceremony","certainty","certificate","certification","chafe","chain","chainstay","chair","chairlift","chairman","chairperson","chaise","chalet","chalice","chalk","challenge","chamber","champagne","champion","championship","chance","chandelier","change","channel","chaos","chap","chapel","chapter","character","chard","charge","charger","charity","charlatan","charm","chart","charter","chasm","chassis","chateau","chatter","check","checkbook","checking","checkout","checkroom","cheddar","cheek","cheer","cheese","cheesecake","cheetah","chef","chem","chemical","chemistry","cherry","chess","chestnut","chicken","chicory","chief","child","childhood","chili","chill","chime","chimpanzee","chin","chino","chip","chipmunk","chivalry","chive","chives","chocolate","choice","choir","choker","choosing","chop","chops","chopstick","chopsticks","chord","chorus","chow","chowder","chrome","chronicle","chrysalis","chub","chuck","chug","churn","chutney","cicada","cilantro","cinder","cinema","cinnamon","circadian","circle","circuit","circulation","circumference","circumstance","cirrus","citizen","citizenship","citron","citrus","city","civilian","civilisation","civilization","claim","clamp","clan","clank","clapboard","clarification","clarinet","clarity","clasp","class","classic","classmate","classroom","clause","clave","clavicle","clavier","claw","clay","cleaner","clearance","clearing","cleat","clef","cleft","clerk","click","client","cliff","climate","climb","clinic","clip","clipboard","clipper","cloak","cloakroom","clock","clockwork","clogs","clone","close","closet","closing","closure","cloth","clothes","clothing","cloud","cloudburst","clove","clover","cloves","club","clue","cluster","clutch","coach","coal","coalition","coast","coaster","coat","cob","cobbler","cobweb","cocktail","cocoa","coconut","cod","code","codepage","codling","codon","cofactor","coffee","coffin","cohesion","cohort","coil","coin","coincidence","coinsurance","cold","coleslaw","coliseum","collaboration","collagen","collapse","collar","collard","collateral","colleague","collection","collector","college","collision","colloquy","colony","color","colt","column","columnist","comb","combination","combine","comeback","comedy","comfort","comfortable","comic","comics","comma","command","commander","comment","commerce","commercial","commission","commitment","committee","commodity","common","commonsense","commotion","communicant","communication","community","commuter","company","comparison","compass","compassion","compassionate","compensation","competence","competition","competitor","complaint","complement","completion","complex","complexity","compliance","complication","complicity","compliment","component","comportment","composer","composite","composition","compost","comprehension","compress","compromise","compulsion","computer","con","concentrate","concept","conception","concern","concert","conclusion","concrete","condition","conditioner","condominium","condor","conduct","conductor","cone","conference","confidence","configuration","conflict","confusion","conga","congo","congress","congressman","conifer","connection","connotation","conscience","consciousness","consensus","consent","consequence","conservation","consideration","consignment","consist","consistency","console","consonant","constant","constellation","constitution","constraint","construction","consul","consulate","consulting","consumer","consumption","contact","container","content","contention","contest","context","continent","continuity","contour","contract","contractor","contrary","contrast","contribution","contributor","control","controller","convection","convenience","convention","conversation","conversion","convert","convertible","cook","cookbook","cookie","cooking","cooperation","coordination","coordinator","cope","copper","copy","copying","copyright","copywriter","coral","cord","corduroy","core","cork","corn","corner","cornerstone","cornflakes","cornmeal","corporal","corporation","corral","corridor","corsage","cosset","cost","costume","cot","cottage","cotton","couch","cough","council","councilor","counsel","counseling","counselling","counsellor","counselor","count","counter","counterpart","countess","country","countryside","county","couple","coupon","courage","court","courthouse","courtroom","cousin","cover","coverage","coverall","cow","cowbell","coyote","crackers","cradle","craft","craftsman","cranberry","crane","cranky","crash","crate","cravat","craw","crawdad","crayfish","crayon","creation","creative","creativity","creator","creature","credential","credenza","credibility","credit","creditor","creek","crepe","crest","crew","crewman","crewmate","crewmember","crewmen","crib","cribbage","cricket","crime","criminal","crisis","crisp","criteria","criterion","critic","criticism","crocodile","crocus","croissant","crook","crop","cross","croup","crow","crowd","crown","cruise","crumb","crunch","crush","crust","cry","crystal","cub","cube","cuckoo","cucumber","cue","cuisine","culture","culvert","cummerbund","cup","cupboard","cupcake","curd","cure","curio","curiosity","curl","curler","currant","currency","current","curriculum","curry","curse","cursor","curtailment","curtain","curve","cushion","custard","custom","customer","cut","cuticle","cutlet","cutover","cutting","cycle","cyclone","cylinder","cymbal","cynic","daffodil","dahlia","daikon","daily","dairy","daisy","damage","dame","dance","dancer","dancing","dandelion","danger","dare","dark","darkness","darn","dart","dash","dashboard","data","database","date","daughter","dawn","day","daybed","daylight","deal","dealing","dearest","debate","debris","debt","debtor","decade","decadence","decency","decimal","decision","deck","declaration","declination","decline","decoder","decoration","decrease","dedication","deduce","deduction","deed","deep","deer","default","defeat","defendant","defender","defense","deficit","definition","degree","delay","deliberation","delight","delivery","demand","democracy","democrat","demur","den","denim","denominator","density","dentist","department","departure","dependency","dependent","deployment","deposit","deposition","depot","depression","depressive","depth","deputy","derby","derivation","derivative","derrick","descendant","descent","description","desert","design","designation","designer","desire","desk","desktop","dessert","destination","destiny","destruction","detail","detection","detective","detector","detention","detour","developer","developing","development","device","dew","diabetes","diadem","diagnosis","diagram","dial","dialect","dialogue","diam","diamond","diaper","diaphragm","diarist","diary","dibble","dick","diction","dictionary","diesel","diet","difference","difficulty","diffuse","dig","digestion","digestive","digger","digging","digit","dignity","dill","dilution","dime","dimension","dimple","diner","dinghy","dining","dinner","dinosaur","dioxide","dip","diploma","diplomacy","direction","directive","director","directory","dirt","disadvantage","disagreement","disaster","discharge","discipline","disclaimer","disclosure","disco","disconnection","discount","discourse","discovery","discrepancy","discretion","discussion","disdain","disembodiment","disengagement","disguise","dish","dishwasher","disk","disparity","dispatch","display","disposal","disposer","disposition","dispute","disregard","disruption","dissemination","dissonance","distance","distinction","distortion","distribution","distributor","district","divan","diver","diversity","divide","dividend","divider","diving","division","doc","dock","doctor","doctorate","doctrine","document","documentary","doe","dog","dogsled","dogwood","doing","doll","dollar","dollop","dolman","dolor","dolphin","domain","dome","donation","donkey","donor","donut","door","doorbell","doorknob","doorpost","doorway","dory","dose","dot","double","doubling","doubt","doubter","dough","doughnut","down","downfall","downgrade","download","downstairs","downtown","downturn","dozen","draft","drag","dragon","dragonfly","dragonfruit","dragster","drain","drainage","drake","drama","drapes","draw","drawbridge","drawer","drawing","dream","dreamer","dredger","dress","dresser","dressing","drill","drink","drinking","drive","driver","driveway","driving","drizzle","drop","drudgery","drum","drummer","dryer","duck","duckling","dud","dude","due","duel","dueling","duffel","dugout","dune","duration","durian","dusk","dust","duster","duty","dwarf","dwell","dwelling","dynamics","dynamo","dynasty","eagle","eaglet","ear","eardrum","earmuffs","earnings","earplug","earring","earrings","earth","earthquake","earthworm","ease","easel","east","eating","eaves","eavesdropper","eclipse","ecliptic","ecology","economics","economy","ecosystem","eddy","edge","edger","edible","editing","edition","editor","editorial","education","eel","effect","effective","effector","efficacy","efficiency","effort","egg","egghead","eggnog","eggplant","ego","elbow","elderberry","election","electricity","electronics","element","elephant","elevation","elevator","eleventh","elf","elicit","eligibility","elimination","elite","elixir","elk","ellipse","elm","elongation","elver","email","emanate","embassy","embossing","emerald","emergence","emergent","emery","emission","emitter","emotion","emphasis","empire","employ","employee","employer","employment","empowerment","emu","enactment","enclave","enclosure","encounter","encouragement","encyclopedia","end","endive","endorsement","endpoint","enemy","energy","enforcement","engagement","engine","engineer","engineering","enigma","enjoyment","enquiry","enrollment","enterprise","entertainment","enthusiasm","entirety","entity","entrance","entree","entrepreneur","entry","envelope","environment","envy","enzyme","epic","episode","epoch","epoxy","equal","equality","equation","equinox","equipment","equity","equivalent","era","eraser","erosion","error","escalator","escape","escort","essay","essence","essential","establishment","estate","estimate","estuary","eternity","ethernet","ethics","evaluation","evaluator","evaporation","eve","evening","event","everybody","everyone","everything","evidence","evocation","evolution","exaggeration","exam","examination","examiner","example","excellence","exception","excerpt","excess","exchange","exclamation","excursion","excuse","executive","executor","exercise","exhaust","exhaustion","exhibit","exhibition","exile","existence","exit","expansion","expectancy","expectation","expedition","expense","experience","experiment","expert","expertise","explanation","exploration","explorer","export","expose","exposition","exposure","expression","extension","extent","exterior","external","extreme","eye","eyeball","eyebrow","eyebrows","eyeglasses","eyelash","eyelashes","eyelid","eyelids","eyeliner","eyestrain","fabric","face","facet","facility","facsimile","fact","factor","factory","faculty","fail","failure","fairness","fairy","fall","fallacy","fame","familiar","familiarity","family","fan","fang","fanlight","farm","farmer","farming","farmland","farrow","fascia","fashion","fat","fate","father","fatigue","faucet","fault","fava","favor","favorite","fawn","fax","fear","feast","feather","feature","federation","fedora","fee","feed","feedback","feeding","feel","feeling","fellow","fen","fence","fencing","fender","fennel","ferret","ferry","ferryboat","fertilizer","festival","few","fiber","fiberglass","fibre","fiction","fiddle","field","fiery","fiesta","fifth","fig","fight","fighter","figure","figurine","file","filing","fill","fillet","filly","film","filter","final","finance","financing","finding","fine","finer","finger","fingerling","fingernail","finish","finisher","fir","fire","fireman","fireplace","firewall","firm","first","fish","fishbone","fisherman","fishery","fishing","fishnet","fit","fitness","fix","fixture","flag","flair","flame","flan","flanker","flare","flash","flat","flatboat","flavor","flax","fleck","fledgling","fleece","flesh","flexibility","flick","flicker","flight","flint","flock","flood","floodplain","floor","flour","flow","flower","fluke","flume","flung","flute","fly","flytrap","foal","foam","fob","focus","fog","fold","folder","folk","folklore","follower","following","fondue","font","food","foodstuffs","fool","foot","footage","football","footnote","footprint","footrest","footstep","footstool","footwear","forage","forager","foray","force","ford","forearm","forebear","forecast","forehead","foreigner","forelimb","forest","forestry","forever","forgery","fork","form","formal","format","formation","former","formula","fort","forte","fortnight","fortress","fortune","forum","foundation","founder","founding","fountain","fourths","fowl","fox","foxglove","fraction","fragrance","frame","framework","fraud","fraudster","freak","freckle","freedom","freelance","freezer","freezing","freight","freighter","frenzy","freon","frequency","fresco","friction","fridge","friend","friendship","fries","fright","fringe","fritter","frock","frog","front","frontier","frost","frosting","frown","fruit","frustration","fry","fuel","fulfillment","full","fun","function","functionality","fund","funding","fundraising","funeral","fur","furnace","furniture","futon","future","gadget","gaffe","gain","gaiters","gale","gallery","galley","gallon","galoshes","gambling","game","gamebird","gaming","gander","gap","garage","garb","garbage","garden","garlic","garment","garter","gas","gasket","gasoline","gasp","gastronomy","gastropod","gate","gateway","gather","gathering","gator","gauge","gauntlet","gavel","gazebo","gazelle","gear","gearshift","geek","gel","gelatin","gelding","gem","gender","gene","general","generation","generator","generosity","genetics","genie","genius","genre","gentleman","geography","geology","geometry","geranium","gerbil","gesture","geyser","ghost","giant","gift","gig","giggle","ginger","gingerbread","ginseng","giraffe","girdle","girl","girlfriend","glacier","gladiolus","glance","gland","glass","glasses","glee","glen","glider","gliding","glimpse","globe","gloom","glory","glove","glow","glucose","glue","glut","glutamate","gnat","gnu","goal","goat","gobbler","goggles","going","gold","goldfish","golf","gondola","gong","good","goodbye","goodie","goodness","goodnight","goodwill","goose","gopher","gorilla","gosling","gossip","governance","government","governor","gown","grace","grade","gradient","graduate","graduation","graffiti","graft","grain","gram","grammar","gran","grand","grandchild","grandfather","grandma","grandmom","grandmother","grandpa","grandparent","grandson","granny","granola","grant","grape","grapefruit","graph","graphic","grasp","grasshopper","grassland","gratitude","gravel","gravitas","gravity","gravy","gray","grease","greatness","greed","green","greenhouse","greens","grenade","grey","grid","grief","grill","grin","grip","gripper","grit","grocery","ground","group","grouper","grouse","grove","growth","grub","guacamole","guarantee","guard","guava","guerrilla","guess","guest","guestbook","guidance","guide","guideline","guilder","guilt","guilty","guinea","guitar","guitarist","gum","gumshoe","gutter","guy","gym","gymnast","gymnastics","gyro","habit","habitat","hacksaw","hackwork","hail","hair","haircut","hake","half","halibut","hall","halloween","hallway","halt","ham","hamburger","hammer","hammock","hamster","hand","handball","handful","handicap","handle","handlebar","handmaiden","handover","handrail","handsaw","hanger","happening","happiness","harald","harbor","harbour","hardboard","hardcover","hardening","hardhat","hardship","hardware","hare","harm","harmonica","harmonise","harmonize","harmony","harp","harpooner","harvest","harvester","hash","hashtag","hassock","haste","hat","hatbox","hatchet","hatchling","haunt","haven","haversack","havoc","hawk","hay","haze","hazel","hazelnut","head","headache","headlight","headline","headphones","headquarters","headrest","health","hearing","hearsay","heart","heartache","heartbeat","hearth","hearthside","heartwood","heat","heater","heating","heaven","heavy","hectare","hedge","hedgehog","heel","heifer","height","heir","heirloom","helicopter","helium","hellcat","hello","helmet","helo","help","hemisphere","hemp","hen","herb","herbs","heritage","hermit","hero","heron","herring","hesitation","hexagon","heyday","hiccups","hide","hierarchy","high","highland","highlight","highway","hike","hiking","hill","hint","hip","hippodrome","hire","hiring","historian","history","hit","hive","hobbit","hobby","hockey","hoe","hog","hold","holder","holiday","home","homeland","hometown","homework","homonym","honesty","honey","honeybee","honeydew","honor","honoree","hood","hoof","hook","hop","hope","hops","horde","horizon","hormone","horn","hornet","horror","horse","horseradish","horst","hose","hosiery","hospice","hospital","hospitality","host","hostel","hostess","hotdog","hotel","hound","hour","hourglass","house","houseboat","household","housewife","housework","housing","hovel","hovercraft","howard","hub","hubcap","hubris","hug","hugger","hull","human","humanity","humidity","hummus","humor","humour","hundred","hunger","hunt","hunter","hunting","hurdle","hurdler","hurricane","hurry","hurt","husband","hut","hutch","hyacinth","hydrant","hydraulics","hydrocarb","hydrocarbon","hydrofoil","hydrogen","hyena","hygienic","hype","hypothesis","ice","iceberg","icebreaker","icecream","icicle","icing","icon","icy","id","idea","ideal","identification","identity","ideology","idiom","igloo","ignorance","ignorant","illegal","illiteracy","illness","illusion","illustration","image","imagination","imbalance","imitation","immortal","impact","impairment","impala","impediment","implement","implementation","implication","import","importance","impostor","impress","impression","imprisonment","impropriety","improvement","impudence","impulse","inability","inauguration","inbox","incandescence","incarnation","incense","incentive","inch","incidence","incident","incision","inclusion","income","incompetence","inconvenience","increase","incubation","independence","independent","index","indication","indicator","indigence","individual","industry","inequality","inevitable","infancy","infant","infection","infiltration","infinite","infix","inflammation","inflation","influence","influx","info","information","infrastructure","infusion","ingrate","ingredient","inhabitant","inheritance","inhibition","inhibitor","initial","initialise","initialize","initiative","injunction","injury","injustice","ink","inlay","inn","innervation","innocence","innocent","innovation","input","inquiry","inscription","insect","insert","inside","insight","insolence","insomnia","inspection","inspector","inspiration","installation","instance","instant","instinct","institute","institution","instruction","instructor","instrument","instrumentalist","instrumentation","insulation","insurance","insurgence","insurrection","integer","integral","integration","integrity","intellect","intelligence","intensity","intent","intention","intentionality","interaction","interchange","interest","interface","interior","interject","interloper","internet","interpretation","interpreter","interval","intervenor","intervention","interview","interviewer","introduction","intuition","invader","invasion","invention","inventor","inventory","inverse","inversion","investigation","investigator","investment","investor","invitation","invite","invoice","involvement","iridescence","iris","iron","ironclad","irony","irrigation","island","isolation","issue","item","itinerary","ivory","jack","jackal","jacket","jackfruit","jade","jaguar","jail","jailhouse","jalapeno","jam","jar","jasmine","jaw","jazz","jealousy","jeans","jeep","jelly","jellybeans","jellyfish","jet","jewel","jeweller","jewellery","jewelry","jicama","jiffy","job","jockey","joey","jogging","joke","jot","journal","journalism","journalist","journey","joy","judge","judgment","judo","jug","juggernaut","juice","julienne","jumbo","jump","jumper","jumpsuit","jungle","junior","junk","junker","junket","jury","justice","jute","kale","kangaroo","karate","kayak","kazoo","kebab","keep","keeper","kendo","kennel","ketch","ketchup","kettle","kettledrum","key","keyboard","keyboarding","keystone","kick","kid","kilogram","kilometer","kilt","kimono","kind","kindness","king","kingdom","kingfish","kiosk","kiss","kit","kitchen","kite","kitsch","kitten","kitty","kiwi","knee","kneejerk","knickers","knife","knight","knitting","knock","knot","knowledge","knuckle","koala","kohlrabi","kumquat","lab","label","labor","laboratory","laborer","labour","labourer","lace","lack","lad","ladder","ladle","lady","ladybug","lag","lake","lamb","lambkin","lament","lamp","lanai","land","landform","landing","landmine","landscape","lane","language","lantern","lap","lapdog","laptop","larch","lard","larder","lark","larva","lasagna","lashes","last","latency","lathe","latitude","latte","latter","laugh","laughter","laundry","lava","law","lawmaker","lawn","lawsuit","lawyer","lay","layer","layout","lead","leader","leadership","leading","leaf","league","leaker","leap","learning","leash","leather","leave","leaver","lecture","leek","leeway","left","leg","legacy","legal","legend","legging","legislation","legislator","legislature","legitimacy","legume","leisure","lemon","lemonade","lemur","lender","lending","length","lens","lentil","leopard","lesson","letter","lettuce","level","lever","leverage","leveret","liability","liar","liberty","library","licence","license","licensing","licorice","lid","lie","lieu","lieutenant","life","lifestyle","lifetime","lift","ligand","light","lighting","lightning","lightscreen","likelihood","likeness","lilac","lily","limb","lime","limestone","limit","limitation","limo","line","linen","liner","linguist","linguistics","lining","link","linkage","linseed","lion","lip","lipid","lipstick","liquid","liquidity","list","listening","listing","literate","literature","litigation","litmus","litter","littleneck","livestock","living","lizard","llama","load","loading","loaf","loafer","loan","lobby","lobster","local","locality","location","lock","locker","locket","locomotive","locust","lode","loft","log","logic","login","logistics","logo","lollipop","loneliness","longboat","longitude","look","lookout","loop","loophole","loquat","loss","lot","lotion","lottery","lounge","louse","lout","love","lox","loyalty","luck","luggage","lumber","lumberman","lunch","luncheonette","lunchmeat","lunchroom","lung","lunge","lute","luxury","lychee","lycra","lye","lynx","lyre","lyrics","lysine","macadamia","macaroni","macaroon","macaw","machine","machinery","macrame","macro","macrofauna","maelstrom","maestro","magazine","magic","magnet","magnitude","maid","maiden","mail","mailbox","mailer","mailing","mailman","main","mainland","mainstream","maintainer","maintenance","major","majority","makeover","maker","makeup","making","male","malice","mall","mallard","mallet","mama","mambo","mammoth","man","manacle","management","manager","manatee","mandarin","mandate","mandolin","mangle","mango","mangrove","manhunt","maniac","manicure","manifestation","manipulation","manner","manor","mansard","mansion","mantel","mantle","mantua","manufacturer","manufacturing","many","map","maple","mapping","maracas","marathon","marble","march","mare","margarine","margin","mariachi","marimba","marines","marionberry","mark","marker","market","marketer","marketing","marketplace","marksman","markup","marmalade","marriage","marsh","marshland","marshmallow","marten","mascara","mask","masonry","mass","massage","mast","master","masterpiece","mastoid","mat","match","matchmaker","mate","material","maternity","math","mathematics","matrix","matter","mattock","mattress","max","maximum","maybe","mayonnaise","mayor","meadow","meal","mean","meander","meaning","means","meantime","measure","measurement","meat","meatball","meatloaf","mecca","mechanic","mechanism","med","medal","media","median","medication","medicine","medium","meet","meeting","melatonin","melody","melon","member","membership","membrane","meme","memo","memorial","memory","men","mention","mentor","menu","merchandise","merchant","mercury","meridian","meringue","merit","mess","message","messenger","messy","metabolite","metal","metaphor","meteor","meteorology","meter","methane","method","methodology","metric","metro","metronome","mezzanine","microlending","microphone","microwave","midden","middle","middleman","midline","midnight","midwife","might","migrant","migration","mile","mileage","milepost","milestone","military","milk","milkshake","mill","millennium","millet","millimeter","million","millisecond","millstone","mime","mimosa","min","mincemeat","mind","mine","mineral","mineshaft","mini","minibus","minimalism","minimum","mining","minion","minister","mink","minnow","minor","minority","mint","minute","miracle","mirror","misfit","misnomer","misplacement","misreading","miss","missile","mission","mist","mistake","mister","misunderstand","miter","mitten","mix","mixer","mixture","moat","mob","mobile","mobility","moccasins","mocha","mochi","mode","model","modeling","modem","modernist","modernity","modification","molar","molasses","molding","mole","molecule","mom","moment","money","monger","monitor","monitoring","monk","monkey","monocle","monopoly","monsoon","monster","month","monument","mood","moody","moon","moonlight","moonscape","moonshine","moose","mop","morale","morning","morsel","mortal","mortality","mortgage","mortise","mosquito","most","motel","moth","mother","motion","motivation","motive","motor","motorboat","motorcar","motorcycle","mound","mountain","mouse","mouser","mousse","moustache","mouton","movement","mover","movie","mower","mozzarella","mud","muffin","mug","mukluk","mule","multimedia","muscat","muscle","museum","mushroom","music","musician","muskrat","mussel","mustache","mustard","mutation","mutt","mutton","mystery","myth","mythology","nail","name","naming","napkin","narrative","nasal","nation","nationality","native","nature","navigation","necessity","necklace","necktie","nectar","nectarine","need","needle","neglect","negotiation","neighbor","neighborhood","neighbour","neighbourhood","neon","neonate","nephew","nerve","nest","nestling","nestmate","net","netball","netbook","network","networking","neuron","news","newsletter","newspaper","newsprint","newsstand","nexus","nibble","nicety","niche","nick","nickel","nickname","niece","night","nightclub","nightgown","nightingale","nightlife","nightlight","nightmare","ninja","nit","nitrogen","nobody","nod","node","noir","noise","nonconformist","nondisclosure","nonsense","noodle","noodles","noon","norm","normal","normalisation","normalization","north","nose","notation","note","notebook","notepad","nothing","notice","notion","notoriety","nougat","noun","nourishment","novel","nudge","number","numeracy","numeric","nurse","nursery","nursing","nurture","nut","nutmeg","nutrient","nutrition","nylon","nymph","oak","oar","oasis","oat","oatmeal","oats","obedience","obi","object","objection","objective","obligation","oboe","observation","observatory","obsession","obsidian","obstacle","occasion","occupation","occurrence","ocean","ocelot","octagon","octave","octavo","octet","octopus","odometer","odyssey","oeuvre","offence","offense","offer","offering","office","officer","official","offset","oil","okra","oldie","oleo","olive","omega","omelet","omission","omnivore","oncology","onion","online","onset","opening","opera","operating","operation","operator","opinion","opossum","opponent","opportunist","opportunity","opposite","opposition","optimal","optimisation","optimist","optimization","option","orange","orangutan","orator","orchard","orchestra","orchid","order","ordinary","ordination","ore","oregano","organ","organisation","organising","organization","organizing","orient","orientation","origin","original","originality","ornament","osmosis","osprey","ostrich","other","otter","ottoman","ounce","outback","outcome","outfielder","outfit","outhouse","outlaw","outlay","outlet","outline","outlook","output","outrage","outrigger","outrun","outset","outside","oval","oven","overcharge","overclocking","overcoat","overexertion","overflight","overhead","overheard","overload","overnighter","overshoot","oversight","overview","owl","owner","ownership","ox","oxford","oxygen","oyster","ozone","pace","pacemaker","pack","package","packaging","packet","pad","paddle","paddock","page","pail","pain","paint","painter","painting","paintwork","pair","pajamas","palace","palate","palm","pamphlet","pan","pancake","pancreas","panda","panel","panic","pannier","panpipe","pansy","panther","pantry","pants","pantsuit","pantyhose","papa","papaya","paper","paperback","paperwork","parable","parachute","parade","paradise","paragraph","paramedic","parameter","paranoia","parcel","parchment","pard","pardon","parent","parenthesis","parenting","park","parka","parking","parliament","parole","parrot","parser","parsley","parsnip","part","participant","participation","particle","particular","partner","partnership","partridge","party","pass","passage","passbook","passenger","passing","passion","passive","passport","password","past","pasta","paste","pastry","pasture","pat","patch","pate","patent","patentee","path","pathology","pathway","patience","patient","patina","patio","patrimony","patriot","patrol","patroller","patrolling","patron","pattern","patty","pattypan","pause","pavement","pavilion","paw","pawnshop","pay","payee","payment","payoff","pea","peace","peach","peacoat","peacock","peak","peanut","pear","pearl","peasant","pecan","pedal","peek","peen","peer","pegboard","pelican","pelt","pen","penalty","pence","pencil","pendant","pendulum","penguin","penicillin","peninsula","pennant","penny","pension","pentagon","peony","people","pepper","pepperoni","percent","percentage","perception","perch","perennial","perfection","performance","perfume","period","periodical","peripheral","permafrost","permission","permit","persimmon","person","personal","personality","personnel","perspective","pest","pet","petal","petition","petitioner","petticoat","pew","pharmacist","phase","pheasant","phenomenon","phenotype","pheromone","philanthropy","philosopher","philosophy","phone","phosphate","photo","photograph","photographer","photography","phrase","phrasing","physical","physics","physiology","pianist","piano","piccolo","pick","pickax","pickaxe","picket","pickle","pickup","picnic","picture","picturesque","pie","piece","pier","piety","pig","pigeon","piglet","pigpen","pigsty","pike","pilaf","pile","pilgrim","pilgrimage","pill","pillar","pillbox","pillow","pilot","pimple","pin","pinafore","pine","pineapple","pinecone","ping","pink","pinkie","pinot","pinstripe","pint","pinto","pinworm","pioneer","pipe","pipeline","piracy","pirate","pistol","pit","pita","pitch","pitcher","pitching","pith","pizza","place","placebo","placement","placode","plagiarism","plain","plaintiff","plan","plane","planet","planning","plant","plantation","planter","planula","plaster","plasterboard","plastic","plate","platelet","platform","platinum","platter","platypus","play","player","playground","playroom","playwright","plea","pleasure","pleat","pledge","plenty","plier","pliers","plight","plot","plough","plover","plow","plowman","plug","plugin","plum","plumber","plume","plunger","plywood","pneumonia","pocket","pocketbook","pod","podcast","poem","poet","poetry","poignance","point","poison","poisoning","poker","pole","polenta","police","policeman","policy","polish","politician","politics","poll","polliwog","pollutant","pollution","polo","polyester","polyp","pomegranate","pomelo","pompom","poncho","pond","pony","pool","poor","pop","popcorn","poppy","popsicle","popularity","population","populist","porcelain","porch","porcupine","pork","porpoise","port","porter","portfolio","porthole","portion","portrait","position","possession","possibility","possible","post","postage","postbox","poster","postfix","pot","potato","potential","pottery","pouch","poultry","pound","pounding","poverty","powder","power","practice","practitioner","prairie","praise","precedence","precedent","precipitation","precision","predecessor","preface","preference","prefix","prejudice","prelude","premeditation","premier","premise","premium","preoccupation","preparation","prescription","presence","present","presentation","preservation","preserves","presidency","president","press","pressroom","pressure","prestige","presume","pretzel","prevalence","prevention","prey","price","pricing","pride","primary","primate","prince","princess","principal","principle","print","printer","printing","prior","priority","prison","prisoner","privacy","private","privilege","prize","prizefight","probability","probation","probe","problem","procedure","proceedings","process","processing","processor","proctor","procurement","produce","producer","product","production","productivity","profession","professional","professor","profile","profit","progenitor","program","programme","programming","progress","progression","prohibition","project","promenade","promise","promotion","prompt","pronoun","proof","propaganda","propane","property","prophet","proponent","proportion","proposal","proposition","proprietor","prose","prosecution","prosecutor","prospect","prosperity","prostanoid","prostrate","protection","protein","protest","protocol","providence","provider","province","provision","prow","proximal","proximity","prune","pruner","psychology","pub","public","publication","publicity","publisher","publishing","pudding","puddle","puffin","pug","puggle","pulley","pulse","puma","pump","pumpernickel","pumpkin","pumpkinseed","pun","punch","punctuation","punishment","pup","pupa","pupil","puppet","puppy","purchase","purity","purple","purpose","purr","purse","pursuit","push","put","puzzle","pyramid","quadrant","quail","qualification","quality","quantity","quart","quarter","quartet","quartz","queen","query","quest","question","questioner","questionnaire","quiche","quicksand","quiet","quill","quilt","quince","quinoa","quit","quiver","quota","quotation","quote","rabbit","raccoon","race","racer","racing","rack","radar","radiator","radio","radish","raffle","raft","rag","rage","raid","rail","railing","railroad","railway","raiment","rain","rainbow","raincoat","rainmaker","rainstorm","rainy","raise","raisin","rake","rally","ram","rambler","ramen","ramie","ranch","rancher","range","ranger","rank","rap","raspberry","rat","rate","ratepayer","rating","ratio","rationale","rations","raven","ravioli","rawhide","ray","rayon","razor","reach","reactant","reaction","read","reader","readiness","reading","real","reality","realization","realm","reamer","rear","reason","reasoning","rebel","rebellion","reboot","recall","receipt","receiver","reception","receptor","recess","recession","recipe","recipient","reciprocity","reclamation","recliner","recognition","recollection","record","recorder","recording","recovery","recreation","recruit","rectangle","red","redesign","redirect","rediscovery","reduction","reef","refectory","reference","referendum","reflection","reform","refreshments","refrigerator","refuge","refund","refusal","refuse","regard","regime","region","regionalism","register","registration","registry","regret","regulation","regulator","reindeer","reject","relation","relationship","relative","relaxation","relay","release","reliability","relief","religion","relish","reluctance","remains","remark","reminder","remnant","remote","removal","renaissance","rent","reorganisation","reorganization","repair","reparation","repayment","repeat","replacement","replica","replication","reply","report","reporter","reporting","repository","representation","representative","reprocessing","republic","republican","reputation","request","requirement","resale","rescue","research","researcher","resemblance","reservation","reserve","reservoir","reset","residence","resident","residue","resist","resistance","resolution","resolve","resort","resource","respect","respite","response","responsibility","rest","restaurant","restoration","restriction","restroom","restructuring","result","resume","retailer","retention","rethinking","retina","retirement","retouching","retreat","retrospect","retrospective","return","reunion","reveal","revelation","revenant","revenge","revenue","reversal","reverse","review","revival","revolution","reward","rhetoric","rhinoceros","rhubarb","rhyme","rhythm","rib","ribbon","rice","riddle","ride","rider","ridge","riding","rifle","right","rim","ring","riot","rip","ripple","rise","riser","risk","rite","ritual","river","riverbed","rivulet","road","roadway","roar","roast","robe","robin","robot","robotics","rock","rocker","rocket","rod","role","roll","roller","romaine","romance","roof","room","roommate","rooster","root","rope","rose","rosemary","roster","rostrum","rotation","round","roundabout","route","router","routine","row","rowboat","rowing","rubbish","rubric","ruby","ruckus","rudiment","ruffle","rug","rugby","ruin","rule","ruler","ruling","rum","rumor","run","runaway","runner","running","runway","rush","rust","rutabaga","rye","sabre","sac","sack","saddle","sadness","safari","safe","safeguard","safety","saffron","sage","sail","sailboat","sailing","sailor","saint","sake","salad","salami","salary","sale","salesman","salmon","salon","saloon","salsa","salt","salute","sample","samurai","sanction","sanctity","sanctuary","sand","sandal","sandbar","sandpaper","sandwich","sanity","sardine","sari","sarong","sash","satellite","satin","satire","satisfaction","sauce","saucer","sauerkraut","sausage","savage","savannah","saving","savings","savior","saviour","savory","saw","saxophone","scaffold","scale","scallion","scallops","scalp","scam","scanner","scarecrow","scarf","scenario","scene","scenery","scent","schedule","scheduling","schema","scheme","scholar","scholarship","school","schoolhouse","schooner","science","scientist","scimitar","scissors","scooter","scope","score","scorn","scorpion","scotch","scout","scow","scrambled","scrap","scraper","scratch","screamer","screen","screening","screenwriting","screwdriver","scrim","scrip","script","scrutiny","sculpting","sculptural","sculpture","sea","seabass","seafood","seagull","seal","seaplane","search","seashore","seaside","season","seat","seaweed","second","secrecy","secret","secretariat","secretary","section","sectional","sector","security","sediment","seed","seeder","seeker","seep","segment","seizure","selection","self","seller","selling","semantics","semester","semicircle","semicolon","seminar","senate","senator","sender","senior","sense","sensibility","sensitive","sensitivity","sensor","sentence","sentencing","sentiment","sepal","separation","sequel","sequence","serial","series","serum","serval","servant","server","service","servitude","sesame","session","set","setback","setting","settlement","settler","severity","sewer","shack","shackle","shade","shadow","shadowbox","shakedown","shaker","shallot","shallows","shame","shampoo","shanty","shape","share","shareholder","shark","shaw","shawl","shear","shearling","sheath","shed","sheep","sheet","shelf","shell","shelter","sherbet","sherry","shield","shift","shin","shine","shingle","ship","shipper","shipping","shipyard","shirt","shirtdress","shoat","shock","shoe","shoehorn","shoelace","shoemaker","shoes","shoestring","shofar","shoot","shootdown","shop","shopper","shopping","shore","shoreline","short","shortage","shorts","shortwave","shot","shoulder","shout","shovel","show","shower","shred","shrimp","shrine","shutdown","sibling","sick","sickness","side","sideboard","sideburns","sidecar","sidestream","sidewalk","siding","siege","sigh","sight","sightseeing","sign","signal","signature","signet","significance","signify","signup","silence","silica","silicon","silk","silkworm","sill","silly","silo","silver","similarity","simple","simplicity","singer","singing","singular","sink","sinuosity","sip","sir","sister","sitar","site","situation","size","skate","skating","skean","skeleton","ski","skiing","skill","skin","skirt","skull","skullcap","skunk","sky","skylight","skyline","skyscraper","skywalk","slang","slapstick","slash","slate","slaw","sled","sledge","sleep","sleepiness","sleeping","sleet","sleuth","slice","slide","slider","slime","slip","slipper","slippers","slope","slot","sloth","slump","smell","smelting","smile","smith","smock","smog","smoke","smoking","smolt","smuggling","snack","snail","snake","snakebite","snap","snarl","sneaker","sneakers","sneeze","sniffle","snob","snorer","snow","snowboarding","snowflake","snowman","snowmobiling","snowplow","snowstorm","snowsuit","snuck","snug","snuggle","soap","soccer","socialism","socialist","society","sociology","sock","socks","soda","sofa","softball","softdrink","softening","software","soil","soldier","sole","solicitation","solicitor","solidarity","solidity","soliloquy","solitaire","solution","solvency","sombrero","somebody","someone","someplace","somersault","something","somewhere","son","sonar","sonata","song","songbird","sonnet","soot","sophomore","soprano","sorbet","sorghum","sorrel","sorrow","sort","soul","soulmate","sound","soundness","soup","source","sourwood","sousaphone","south","southeast","souvenir","sow","soy","soybean","space","spacing","spade","spaghetti","span","spandex","sparerib","spark","sparrow","spasm","spat","spatula","spawn","speaker","speakerphone","speaking","spear","spec","special","specialist","specialty","species","specification","spectacle","spectacles","spectrum","speculation","speech","speed","speedboat","spell","spelling","spelt","spending","sphere","sphynx","spice","spider","spiderling","spike","spill","spinach","spine","spiral","spirit","spit","spite","spleen","splendor","split","spokesman","spokeswoman","sponge","sponsor","sponsorship","spool","spoon","spork","sport","sportsman","spot","spotlight","spouse","sprag","sprat","spray","spread","spreadsheet","spree","spring","sprinkles","sprinter","sprout","spruce","spud","spume","spur","spy","spyglass","square","squash","squatter","squeegee","squid","squirrel","stab","stability","stable","stack","stacking","stadium","staff","stag","stage","stain","stair","staircase","stake","stalk","stall","stallion","stamen","stamina","stamp","stance","stand","standard","standing","standoff","standpoint","star","starboard","start","starter","state","statement","statin","station","statistic","statistics","statue","status","statute","stay","steak","stealth","steam","steamroller","steel","steeple","stem","stench","stencil","step","stepdaughter","stepmother","stepson","stereo","stew","steward","stick","sticker","stiletto","still","stimulation","stimulus","sting","stinger","stitch","stitcher","stock","stockings","stole","stomach","stone","stonework","stool","stop","stopsign","stopwatch","storage","store","storey","storm","story","storyboard","stot","stove","strait","strand","stranger","strap","strategy","straw","strawberry","strawman","stream","street","streetcar","strength","stress","stretch","strife","strike","string","strip","stripe","strobe","stroke","structure","strudel","struggle","stucco","student","studio","study","stuff","stumbling","stump","stupidity","sturgeon","sty","style","styling","stylus","sub","subcomponent","subconscious","subcontractor","subgroup","subject","submarine","submitter","subprime","subroutine","subscription","subsection","subset","subsidence","subsidiary","subsidy","substance","substitution","subtitle","suburb","subway","success","succotash","suede","suet","sugar","suggestion","suit","suitcase","suite","sulfur","sultan","sum","summary","summer","summit","sun","sunbeam","sunbonnet","sundae","sunday","sundial","sunflower","sunglasses","sunlamp","sunlight","sunrise","sunroom","sunset","sunshine","superiority","supermarket","supernatural","supervision","supervisor","supper","supplement","supplier","supply","support","supporter","suppression","supreme","surface","surfboard","surge","surgeon","surgery","surname","surplus","surprise","surround","surroundings","surrounds","survey","survival","survivor","sushi","suspect","suspenders","suspension","sustainment","sustenance","swallow","swamp","swan","swanling","swath","sweat","sweater","sweatshirt","sweatshop","sweatsuit","sweets","swell","swim","swimming","swimsuit","swine","swing","switch","switchboard","switching","swivel","sword","swordfight","swordfish","sycamore","symbol","symmetry","sympathy","symptom","syndicate","syndrome","synergy","synonym","synthesis","syrup","system","tab","tabby","tabernacle","table","tablecloth","tablet","tabletop","tachometer","tackle","taco","tactics","tactile","tadpole","tag","tail","tailbud","tailor","tailspin","takeover","tale","talent","talk","talking","tamale","tambour","tambourine","tan","tandem","tangerine","tank","tanker","tankful","tap","tape","tapioca","target","taro","tarragon","tart","task","tassel","taste","tatami","tattler","tattoo","tavern","tax","taxi","taxicab","taxpayer","tea","teacher","teaching","team","teammate","teapot","tear","tech","technician","technique","technology","tectonics","teen","teenager","teepee","telephone","telescreen","teletype","television","tell","teller","temp","temper","temperature","tempo","temporary","temptation","temptress","tenant","tendency","tender","tenement","tenet","tennis","tenor","tension","tensor","tent","tentacle","tenth","tepee","teriyaki","term","terminal","termination","terminology","termite","terrace","terracotta","terrapin","terrarium","territory","test","testament","testimonial","testimony","testing","text","textbook","textual","texture","thanks","thaw","theater","theft","theme","theory","therapist","therapy","thermals","thermometer","thermostat","thesis","thickness","thief","thigh","thing","thinking","thirst","thistle","thorn","thought","thousand","thread","threat","threshold","thrift","thrill","throat","throne","thrust","thug","thumb","thump","thunder","thunderbolt","thunderhead","thunderstorm","thyme","tiara","tic","tick","ticket","tide","tie","tiger","tights","tile","till","tilt","timbale","timber","time","timeline","timeout","timer","timetable","timing","timpani","tin","tinderbox","tinkle","tintype","tip","tire","tissue","titanium","title","toad","toast","toaster","today","toe","toffee","tofu","tog","toga","toilet","tolerance","tolerant","toll","tomatillo","tomato","tomb","tomography","tomorrow","ton","tonality","tone","tongue","tonic","tonight","tool","toot","tooth","toothbrush","toothpaste","toothpick","top","topic","topsail","toque","toreador","tornado","torso","torte","tortellini","tortilla","tortoise","total","tote","touch","tour","tourism","tourist","tournament","towel","tower","town","townhouse","township","toy","trace","track","tracking","tracksuit","tract","tractor","trade","trader","trading","tradition","traffic","trafficker","tragedy","trail","trailer","trailpatrol","train","trainer","training","trait","tram","trance","transaction","transcript","transfer","transit","transition","translation","transmission","transom","transparency","transport","trap","trapdoor","trash","travel","traveler","tray","treasure","treasury","treat","treatment","treaty","tree","trek","trellis","tremor","trench","trend","triad","trial","triangle","tribe","tributary","trick","trigger","trigonometry","trillion","trim","trinket","trip","tripod","tritone","triumph","trolley","trombone","troop","trooper","trophy","trouble","trousers","trout","trove","trowel","truck","trumpet","trunk","trust","trustee","truth","try","tsunami","tub","tuba","tube","tuber","tug","tugboat","tuition","tulip","tumbler","tummy","tuna","tune","tunic","tunnel","turban","turf","turkey","turmeric","turn","turning","turnip","turnover","turnstile","turret","turtle","tusk","tussle","tutu","tuxedo","tweet","tweezers","twig","twilight","twine","twins","twist","twister","twitter","type","typeface","typewriter","typhoon","ukulele","ultimatum","umbrella","unblinking","uncertainty","uncle","underestimate","underground","underneath","underpass","understanding","understatement","undertaker","underwear","underweight","underwire","underwriting","unemployment","unibody","uniform","uniformity","union","unique","unit","unity","universe","university","update","upgrade","uplift","upper","upstairs","upward","urge","urgency","urn","usage","use","user","usher","usual","utensil","utilisation","utility","utilization","vacation","vacuum","vagrant","valance","valentine","validate","validity","valley","valuable","value","vampire","van","vane","vanilla","vanity","variability","variable","variant","variation","variety","vascular","vase","vault","vaulting","veal","vector","vegetable","vegetarian","vegetation","vehicle","veil","vein","veldt","vellum","velocity","velodrome","velvet","vendor","veneer","vengeance","venison","venom","venti","venture","venue","veranda","verb","verdict","verification","vermicelli","vernacular","verse","version","vertigo","verve","vessel","vest","vestment","vet","veteran","veterinarian","veto","viability","vibe","vibraphone","vibration","vibrissae","vice","vicinity","victim","victory","video","view","viewer","vignette","villa","village","vine","vinegar","vineyard","vintage","vintner","vinyl","viola","violet","violin","virtue","virus","visa","viscose","vise","vision","visit","visitor","visor","vista","visual","vitality","vitamin","vitro","vivo","vixen","vodka","vogue","voice","void","vol","volatility","volcano","volleyball","volume","volunteer","vote","voter","voting","voyage","vulture","wad","wafer","waffle","wage","wagon","waist","waistband","wait","waiter","waiting","waitress","waiver","wake","walk","walker","walking","walkway","wall","wallaby","wallet","walnut","walrus","wannabe","want","war","warden","wardrobe","warlock","warlord","warming","warmth","warning","warrant","warren","warrior","wasabi","wash","washbasin","washcloth","washer","washtub","wasp","waste","wastebasket","wasting","watch","watcher","watchmaker","water","watercress","waterfall","waterfront","watermelon","waterskiing","waterspout","waterwheel","wave","waveform","wax","way","weakness","wealth","weapon","wear","weasel","weather","web","webinar","webmail","webpage","website","wedding","wedge","weeder","weedkiller","week","weekend","weekender","weight","weird","welcome","welfare","well","west","western","wetland","wetsuit","whack","whale","wharf","wheat","wheel","whey","whip","whirlpool","whirlwind","whisker","whiskey","whisper","whistle","white","whole","wholesale","wholesaler","whorl","wick","widget","widow","width","wife","wifi","wild","wildebeest","wilderness","wildlife","will","willow","win","wind","windage","window","windscreen","windshield","wine","winery","wing","wingman","wingtip","wink","winner","winter","wire","wiretap","wiring","wisdom","wiseguy","wish","wisteria","wit","witch","withdrawal","witness","wok","wolf","woman","wombat","wonder","wont","wood","woodchuck","woodland","woodshed","woodwind","wool","woolens","word","wording","work","workbench","worker","workforce","workhorse","working","workout","workplace","workshop","world","worm","worry","worth","wound","wrap","wraparound","wrapper","wrapping","wreck","wrecker","wren","wrench","wrestler","wriggler","wrinkle","wrist","writer","writing","wrong","xylophone","yacht","yahoo","yak","yam","yang","yard","yarn","yawl","year","yeast","yellow","yesterday","yew","yin","yoga","yogurt","yoke","yolk","young","youngster","yourself","youth","yoyo","yurt","zebra","zebrafish","zen","zephyr","zero","ziggurat","zinc","zipper","zither","zombie","zone","zoo","zoologist","zoology","zucchini"];